{"grouped":[{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"parallelism","salience":0.8837491273880005},{"name":"concurrency","salience":0.11625086516141891}],"text":"Parallelism/Concurrency "}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency","salience":1}],"text":"Concurrency/Parallelism 2/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency","salience":1}],"text":"... Concurrency/Parallelism 3/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency","salience":1}],"text":"... Concurrency/Parallelism 4/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency","salience":1}],"text":"... Concurrency/Parallelism 5/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency 6","salience":1}],"text":"Creating Concurrency 6/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency 7","salience":1}],"text":"... Creating Concurrency 7/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"linux","salience":0.7497316002845764},{"name":"unix","salience":0.2502683997154236}],"text":"Linux/Unix Threads 8/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"linux","salience":0.7722702026367188},{"name":"unix","salience":0.22772982716560364}],"text":"... Linux/Unix Threads 9/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"linux","salience":0.7702145576477051},{"name":"unix threads","salience":0.22978545725345612}],"text":"... Linux/Unix Threads 10/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"linux","salience":0.7702145576477051},{"name":"unix threads","salience":0.22978545725345612}],"text":"... Linux/Unix Threads 11/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"Concurrency 12/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Concurrency 13/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Concurrency 14/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Concurrency 15/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency control 16","salience":1}],"text":"Concurrency Control 16/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"concurrency control 17","salience":1}],"text":"... Concurrency Control 17/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"producer-consumer problem","salience":1}],"text":"Producer-Consumer Problem 18/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"producer-consumer problem","salience":1}],"text":"... Producer-Consumer Problem 19/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"producer-consumer problem","salience":1}],"text":"... Producer-Consumer Problem 20/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"producer-consumer problem","salience":1}],"text":"... Producer-Consumer Problem 21/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"producer-consumer problem","salience":1}],"text":"... Producer-Consumer Problem 22/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"Semaphores 23/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Semaphores 24/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Semaphores 25/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Semaphores 26/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Semaphores 27/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message passing","salience":1}],"text":"Message Passing 28/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message passing","salience":1}],"text":"... Message Passing 29/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message passing","salience":1}],"text":"... Message Passing 30/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message passing","salience":1}],"text":"... Message Passing 31/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message passing","salience":1}],"text":"... Message Passing 32/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message passing","salience":1}],"text":"... Message Passing 33/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"process interaction","salience":1}],"text":"Process Interaction "}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"Interacting Processes 35/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"processes","salience":1}],"text":"... Interacting Processes 36/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"file locking","salience":1}],"text":"File Locking 37/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"file locking","salience":1}],"text":"... File Locking 38/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"Pipes 39/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Pipes 40/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Pipes 41/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Pipes 42/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Pipes 43/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Pipes 44/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message","salience":1}],"text":"Message Queues 45/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message","salience":1}],"text":"... Message Queues 46/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message","salience":1}],"text":"... Message Queues 47/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message","salience":1}],"text":"... Message Queues 48/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message","salience":1}],"text":"... Message Queues 49/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message","salience":1}],"text":"... Message Queues 50/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[{"name":"message","salience":1}],"text":"... Message Queues 51/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"Sockets 52/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Sockets 53/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Sockets 54/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Sockets 55/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Sockets 56/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Sockets 57/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Sockets 58/59"}]},{"tags":[{"name":"table"}],"items":[{"tags":[],"text":"... Sockets 59/59"}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"cpus","salience":0.40657392144203186},{"name":"process","salience":0.29087379574775696},{"name":"mimd","salience":0.2076450139284134},{"name":"cpu","salience":0.0949072614312172}],"text":" e.g. multiple CPUs, one process on each CPU (MIMD) "},{"tags":[{"name":"data vector","salience":0.40657392144203186},{"name":"processor","salience":0.29087379574775696},{"name":"simd","salience":0.2076450139284134},{"name":"element","salience":0.0949072614312172}],"text":" e.g. data vector, one processor computes on each element (SIMD) "},{"tags":[{"name":"e.g. map","salience":0.6508029103279114},{"name":"computation","salience":0.2300509661436081},{"name":"hosts","salience":0.11914613842964172}],"text":" e.g. map-reduce: computation spread across multiple hosts "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"cpu","salience":0.5759657621383667},{"name":"processes","salience":0.4240342378616333}],"text":" e.g. single CPU, alternating between processes (time-slicing) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processors","salience":1}],"text":" mutliple identical processors "},{"tags":[{"name":"element","salience":0.47773316502571106},{"name":"memory","salience":0.3180276155471802},{"name":"data structure","salience":0.20423921942710876}],"text":" each given one element of a data structure from main memory "},{"tags":[{"name":"computation","salience":0.5783335566520691},{"name":"element","salience":0.4216664433479309}],"text":" each performing same computation on that element "},{"tags":[{"name":"results","salience":0.7815695405006409},{"name":"memory data structure","salience":0.21843047440052032}],"text":" results copied back to main memory data structure "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"data sets","salience":1}],"text":" manipulating very large data sets "},{"tags":[{"name":"nodes","salience":0.5025618672370911},{"name":"network","salience":0.49743810296058655}],"text":" on a large network of nodes (local or distributed) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"data","salience":0.6289769411087036},{"name":"key","salience":0.1948009729385376},{"name":"pairs","salience":0.10753011703491211},{"name":"value","salience":0.06869198381900787}],"text":" data distributed (shuffled) as (key,value) pairs "},{"tags":[{"name":"node","salience":0.5538880825042725},{"name":"set","salience":0.2002253383398056},{"name":"pairs","salience":0.18539521098136902},{"name":"key(s)","salience":0.06049136444926262}],"text":" each node receives a set of pairs with common key(s) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"nodes","salience":0.5965169668197632},{"name":"calculation","salience":0.23357172310352325},{"name":"data items","salience":0.16991133987903595}],"text":" nodes perform calculation on received data items "},{"tags":[{"name":"calculations","salience":0.5792077779769897},{"name":"outputs","salience":0.42079222202301025}],"text":" and combine outputs from these calculations "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"child","salience":0.7815695405006409},{"name":"parent","salience":0.21843047440052032}],"text":" child executes concurrently with parent "},{"tags":[{"name":"state","salience":0.5111551284790039},{"name":"parent","salience":0.36584770679473877},{"name":"fd","salience":0.12299717962741852}],"text":" inherits some state from parent (e.g. open fd's) "},{"tags":[{"name":"runs","salience":0.7971957325935364},{"name":"address space","salience":0.20280425250530243}],"text":" runs in its own address space "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"process switching","salience":0.8477482795715332},{"name":"kernel intervention","salience":0.152251735329628}],"text":" process switching requires kernel intervention "},{"tags":[{"name":"amount","salience":0.5606412291526794},{"name":"state","salience":0.43935874104499817}],"text":" each has a significant amount of state "},{"tags":[{"name":"process interaction","salience":0.8477482795715332},{"name":"mechanisms","salience":0.152251735329628}],"text":" process interaction requires system-level mechanisms "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processes","salience":0.5060780048370361},{"name":"threads","salience":0.15098029375076294},{"name":"each other","salience":0.14928936958312988},{"name":"parent","salience":0.10718788206577301},{"name":"process","salience":0.08646447211503983}],"text":" processes are independent of each other; threads exist within a (parent) process "},{"tags":[{"name":"processes","salience":0.5354411005973816},{"name":"state","salience":0.18478061258792877},{"name":"threads","salience":0.16823475062847137},{"name":"parent process state","salience":0.11154352128505707}],"text":" processes have own state; threads share parent process state "},{"tags":[{"name":"process","salience":0.5736697316169739},{"name":"address space","salience":0.17613080143928528},{"name":"threads","salience":0.15861932933330536},{"name":"address space","salience":0.09158014506101608}],"text":" each process has own address space; all threads within a process share one address space "},{"tags":[{"name":"processes","salience":0.5339463949203491},{"name":"threads","salience":0.20000401139259338},{"name":"mechanisms","salience":0.13431453704833984},{"name":"ipc","salience":0.08348707109689713},{"name":"memory","salience":0.048248011618852615}],"text":" processes communicate via IPC mechanisms (see later); threads can communicate via shared memory "},{"tags":[{"name":"processes","salience":0.7983086109161377},{"name":"threads","salience":0.20169135928153992}],"text":" context-switching between processes is expensive; context-switching between threads is (relatively) cheap "}]},{"tags":[{"name":"list"}],"items":[{"tags":[],"text":" requires #include <pthread.h> "},{"tags":[{"name":"data type","salience":1}],"text":" provides (opaque) pthread_t data type "},{"tags":[{"name":"functions","salience":0.5506578087806702},{"name":"threads","salience":0.25762808322906494},{"name":"exit","salience":0.1315755546092987},{"name":"signals","salience":0.06013857573270798}],"text":" functions on threads: create, identify, send signals, exit, ... "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"thread","salience":0.5783335566520691},{"name":"attributes","salience":0.4216664433479309}],"text":" creates a new thread with specified Attributes "},{"tags":[{"name":"thread info","salience":0.6246302127838135},{"name":"thread","salience":0.3753697872161865}],"text":" thread info stored in *Thread "},{"tags":[{"name":"thread","salience":0.7790903449058533},{"name":"func","salience":0.1468437761068344},{"name":"arg","salience":0.07406589388847351}],"text":" thread starts by executing Func() with Arg "},{"tags":[{"name":"errno","salience":1}],"text":" returns 0 if OK, -1 otherwise and sets errno "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"thread","salience":1}],"text":" returns pthread_t for current thread "},{"tags":[{"name":"ways","salience":1}],"text":" in some ways, analogous to getpid() "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"thread ids","salience":1}],"text":" compares two thread IDs "},{"tags":[{"name":"thread","salience":1}],"text":" returns non-zero if same thread, 0 otherwise "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"execution","salience":0.5759657621383667},{"name":"thread","salience":0.4240342378616333}],"text":" suspend execution until thread T terminates "},{"tags":[{"name":"pthread_exit","salience":0.6305804252624512},{"name":"value","salience":0.36941957473754883}],"text":" pthread_exit() value is placed in *value_ptr "},{"tags":[{"name":"t","salience":1}],"text":" if T has already exited, does not wait "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"execution","salience":0.6815314292907715},{"name":"thread","salience":0.2383394092321396},{"name":"some","salience":0.08012917637825012}],"text":" terminate execution of thread, and do some cleaning up "},{"tags":[{"name":"stores","salience":0.7010281085968018},{"name":"return value","salience":0.29897192120552063}],"text":" stores a return value in *value_ptr "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"process","salience":0.7229015231132507},{"name":"completion","salience":0.27709847688674927}],"text":" each process runs to completion before next one starts "},{"tags":[{"name":"throughput","salience":0.7815695405006409},{"name":"multi-user systems","salience":0.21843047440052032}],"text":" low throughput; not acceptable on multi-user systems "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"process","salience":0.7983086109161377},{"name":"others","salience":0.20169135928153992}],"text":" if one process is delayed, others can run "},{"tags":[{"name":"cpus","salience":0.5138784050941467},{"name":"all","salience":0.48612159490585327}],"text":" if we have multiple CPUs, use all of them at once "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"process","salience":0.8113483190536499},{"name":"task","salience":0.1886516809463501}],"text":" each process runs and completes its task "},{"tags":[{"name":"effect","salience":0.48887550830841064},{"name":"computation","salience":0.3279494047164917},{"name":"processes","salience":0.18317508697509766}],"text":" without any effect on the computation of other processes "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processes","salience":0.6507119536399841},{"name":"resource","salience":0.34928804636001587}],"text":" multiple processes accessing a shared resource "},{"tags":[{"name":"process","salience":0.6219350099563599},{"name":"another","salience":0.21984653174877167},{"name":"computation","salience":0.15821844339370728}],"text":" one process synchronizing with another for some computation "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"code","salience":0.36761367321014404},{"name":"runs","salience":0.15978550910949707},{"name":"resource","salience":0.11699528992176056},{"name":"output","salience":0.112320676445961},{"name":"results","salience":0.11103276908397675},{"name":"resource","salience":0.08960726112127304},{"name":"input","salience":0.04264482855796814}],"text":" nondeterminism ... same code, different runs, different results e.g. output on shared resource is jumbled e.g. input from shared resource is unpredictable "},{"tags":[{"name":"e.g. output","salience":0.5934883952140808},{"name":"resource","salience":0.4065115749835968}],"text":" e.g. output on shared resource is jumbled "},{"tags":[{"name":"input","salience":0.6265999674797058},{"name":"resource","salience":0.3734000623226166}],"text":" e.g. input from shared resource is unpredictable "},{"tags":[{"name":"deadlock","salience":0.49773335456848145},{"name":"group","salience":0.25057464838027954},{"name":"processes","salience":0.1665993183851242},{"name":"each other","salience":0.08509267121553421}],"text":" deadlock ... a group of processes end up waiting for each other "},{"tags":[{"name":"starvation","salience":0.6422356367111206},{"name":"process","salience":0.17782752215862274},{"name":"resource","salience":0.10979682952165604},{"name":"access","salience":0.07013999670743942}],"text":" starvation ... one process keeps missing access to resource "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"e.g. output","salience":0.5934883952140808},{"name":"resource","salience":0.4065115749835968}],"text":" e.g. output on shared resource is jumbled "},{"tags":[{"name":"input","salience":0.6265999674797058},{"name":"resource","salience":0.3734000623226166}],"text":" e.g. input from shared resource is unpredictable "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"process","salience":1}],"text":" each process attempts to withdraw($300, A) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"process","salience":1}],"text":" process 1 executes up to line 3, then swapped out "},{"tags":[{"name":"process","salience":1}],"text":" process 2 executes up to line 3, then swapped out "},{"tags":[{"name":"process","salience":0.7732044458389282},{"name":"balance","salience":0.2267955243587494}],"text":" process 1 continues and reduces balance by $300 "},{"tags":[{"name":"process","salience":0.7732044458389282},{"name":"balance","salience":0.2267955243587494}],"text":" process 2 continues and reduces balance by $300 "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"interactions","salience":0.3823832869529724},{"name":"sequencing","salience":0.3208329975605011},{"name":"processes","salience":0.2967837154865265}],"text":" provide correct sequencing of interactions between processes "},{"tags":[{"name":"access","salience":0.704346239566803},{"name":"resources","salience":0.29565373063087463}],"text":" coordinate semantically-valid access to shared resources "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"memory","salience":0.7983086109161377},{"name":"semaphores","salience":0.20169135928153992}],"text":" shared memory based (e.g. semaphores) "},{"tags":[{"name":"message","salience":1}],"text":" message passing based (e.g. send/receive) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"library functions","salience":1}],"text":" available via special library functions, or "},{"tags":[{"name":"language constructs","salience":1}],"text":" available via new language constructs "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"uses","salience":1}],"text":" uses shared variable, manipulated atomically "},{"tags":[{"name":"blocks","salience":0.5505452156066895},{"name":"access","salience":0.26900187134742737},{"name":"decrements","salience":0.18045291304588318}],"text":" blocks if access unavailable, decrements once available "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processes","salience":0.8326351642608643},{"name":"messages","salience":0.16736482083797455}],"text":" processes communicate by sending/receiving messages "},{"tags":[{"name":"receiver","salience":0.7371235489845276},{"name":"message","salience":0.2628764510154724}],"text":" receiver can block waiting for message to arrive "},{"tags":[{"name":"sender","salience":0.37073183059692383},{"name":"message","salience":0.16295546293258667},{"name":"message passing","salience":0.1155308336019516},{"name":"sender","salience":0.11484435200691223},{"name":"ack","salience":0.08597496896982193},{"name":"sender","salience":0.08401105552911758},{"name":"message","salience":0.03654876723885536},{"name":"receipt","salience":0.02940273843705654}],"text":" sender may block waiting for message to be received synchronous message passing: sender waits for ACK of receipt asynchronous message passing: sender transmits and continues "},{"tags":[{"name":"message passing","salience":0.43210145831108093},{"name":"sender","salience":0.30913686752319336},{"name":"receipt","salience":0.15789547562599182},{"name":"ack","salience":0.10086619853973389}],"text":" synchronous message passing: sender waits for ACK of receipt "},{"tags":[{"name":"message","salience":0.7229015231132507},{"name":"sender","salience":0.27709847688674927}],"text":" asynchronous message passing: sender transmits and continues "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"message passing","salience":0.43210145831108093},{"name":"sender","salience":0.30913686752319336},{"name":"receipt","salience":0.15789547562599182},{"name":"ack","salience":0.10086619853973389}],"text":" synchronous message passing: sender waits for ACK of receipt "},{"tags":[{"name":"message","salience":0.7229015231132507},{"name":"sender","salience":0.27709847688674927}],"text":" asynchronous message passing: sender transmits and continues "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"buffer","salience":0.443107932806015},{"name":"slots","salience":0.3238353133201599},{"name":"n items","salience":0.23305675387382507}],"text":" have a buffer with slots for N items "},{"tags":[{"name":"process","salience":0.5799241662025452},{"name":"items","salience":0.3680684566497803},{"name":"buffer","salience":0.052007392048835754}],"text":" a process that produces new items and puts them in the buffer "},{"tags":[{"name":"process","salience":0.7627471685409546},{"name":"items","salience":0.1384313702583313},{"name":"buffer","salience":0.0988214910030365}],"text":" a process that consumes items from the buffer "},{"tags":[{"name":"mechanism","salience":0.5155482888221741},{"name":"process","salience":0.4844517111778259}],"text":" a mechanism for a process to pause itself "},{"tags":[{"name":"mechanism","salience":0.7371235489845276},{"name":"process","salience":0.2628764510154724}],"text":" a mechanism for signalling a process to wake up "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"c","salience":0.7090377807617188},{"name":"nitems","salience":0.29096221923828125}],"text":" C checks nItems, finds zero, decides to pause "},{"tags":[{"name":"c","salience":1}],"text":" just before pausing, C is timed-out (different to paused) "},{"tags":[{"name":"item","salience":0.5353839993476868},{"name":"p","salience":0.3708605468273163},{"name":"buffer","salience":0.09375544637441635}],"text":" P creates item, puts it in currently empty buffer "},{"tags":[{"name":"buffer","salience":0.6448712348937988},{"name":"item","salience":0.20650902390480042},{"name":"p signals c","salience":0.14861975610256195}],"text":" because buffer now has one item, P signals C "},{"tags":[{"name":"c","salience":0.8456545472145081},{"name":"signal","salience":0.15434543788433075}],"text":" because C is not paused, signal is lost "},{"tags":[{"name":"c","salience":0.6977930665016174},{"name":"pauses","salience":0.18402500450611115},{"name":"time-out","salience":0.11818195134401321}],"text":" C is resumed after time-out and pauses "},{"tags":[{"name":"p resumes","salience":0.6507119536399841},{"name":"items","salience":0.34928804636001587}],"text":" P resumes and adds more items "},{"tags":[{"name":"fills","salience":0.5758325457572937},{"name":"p pauses","salience":0.4241674542427063}],"text":" eventually buffer fills and P pauses "},{"tags":[{"name":"process","salience":0.768847644329071},{"name":"other","salience":0.1407572478055954},{"name":"signal","salience":0.09039513766765594}],"text":" each process is paused, waiting for signal from the other "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"init","salience":0.47445744276046753},{"name":"semaphore","salience":0.28353118896484375},{"name":"initvalue","salience":0.24201138317584991}],"text":" init(Sem, InitValue) set the initial value of semaphore Sem "},{"tags":[{"name":"value","salience":0.5635448098182678},{"name":"sem","salience":0.24901671707630157},{"name":"semaphore","salience":0.1874384582042694}],"text":" set the initial value of semaphore Sem "},{"tags":[{"name":"sem","salience":0.4002687931060791},{"name":"sem and","salience":0.3131246268749237},{"name":"decrement","salience":0.2866065800189972}],"text":" wait(Sem) (also called P()) if current value of Sem > 0, decrement Sem and continue otherwise, block and wait until Sem value > 0 "},{"tags":[{"name":"value","salience":0.5306134819984436},{"name":"sem","salience":0.26128169894218445},{"name":"decrement","salience":0.12386202812194824}],"text":" if current value of Sem > 0, decrement Sem and continue "},{"tags":[{"name":"sem","salience":0.6312099695205688},{"name":"value","salience":0.36879006028175354}],"text":" otherwise, block and wait until Sem value > 0 "},{"tags":[{"name":"sem","salience":0.33103567361831665},{"name":"and","salience":0.2494020164012909},{"name":"sem","salience":0.23221871256828308},{"name":"called v","salience":0.18734359741210938}],"text":" signal(Sem) (also called V()) increment value of Sem, and continue "},{"tags":[{"name":"increment value","salience":0.6815741658210754},{"name":"sem","salience":0.31842583417892456}],"text":" increment value of Sem, and continue "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"value","salience":0.5635448098182678},{"name":"sem","salience":0.24901671707630157},{"name":"semaphore","salience":0.1874384582042694}],"text":" set the initial value of semaphore Sem "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"value","salience":0.5306134819984436},{"name":"sem","salience":0.26128169894218445},{"name":"decrement","salience":0.12386202812194824}],"text":" if current value of Sem > 0, decrement Sem and continue "},{"tags":[{"name":"sem","salience":0.6312099695205688},{"name":"value","salience":0.36879006028175354}],"text":" otherwise, block and wait until Sem value > 0 "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"increment value","salience":0.6815741658210754},{"name":"sem","salience":0.31842583417892456}],"text":" increment value of Sem, and continue "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"fifo queue","salience":1}],"text":" can be achieved via a FIFO queue (fair, but maybe not optimal) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"semaphores","salience":1}],"text":" semaphores are updated atomically "},{"tags":[{"name":"timeout","salience":0.5071566104888916},{"name":"pause","salience":0.26405346393585205},{"name":"nitems","salience":0.22878991067409515}],"text":" so can't timeout in if (nItems == 0) pause() "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"process","salience":0.7194413542747498},{"name":"buffer","salience":0.28055864572525024}],"text":" only one process at a time manipulates the buffer "},{"tags":[{"name":"producers","salience":0.5759657621383667},{"name":"consumers","salience":0.4240342378616333}],"text":" allows multiple producers/consumers to interact correctly "}]},{"tags":[{"name":"list"}],"items":[{"tags":[],"text":" #include <semaphore.h>, giving sem_t "},{"tags":[{"name":"uint value","salience":0.5495578050613403},{"name":"value","salience":0.2870497703552246},{"name":"semaphore object","salience":0.16339242458343506}],"text":" int sem_init(sem_t *Sem, int Shared, uint Value) create a semaphore object, and set initial value "},{"tags":[{"name":"semaphore object","salience":0.6514027118682861},{"name":"value","salience":0.34859731793403625}],"text":" create a semaphore object, and set initial value "},{"tags":[{"name":"sem_wait","salience":0.34464287757873535},{"name":"sem_t *sem","salience":0.26251351833343506},{"name":"decrement","salience":0.23031000792980194},{"name":"i.e. wait","salience":0.16253361105918884}],"text":" int sem_wait(sem_t *Sem) (i.e. wait()) try to decrement; block if Sem == 0 "},{"tags":[{"name":"sem","salience":1}],"text":" try to decrement; block if Sem == 0 "},{"tags":[{"name":"sem_post","salience":0.3422073721885681},{"name":"sem_t *sem","salience":0.2606583833694458},{"name":"semaphore","salience":0.22678208351135254},{"name":"i.e. signal","salience":0.17035216093063354}],"text":" int sem_post(sem_t *Sem) (i.e. signal()) increment the value of semaphore Sem "},{"tags":[{"name":"value","salience":0.5609012842178345},{"name":"sem","salience":0.25052496790885925},{"name":"semaphore","salience":0.18857374787330627}],"text":" increment the value of semaphore Sem "},{"tags":[{"name":"sem_destroy","salience":0.35936039686203003},{"name":"sem_t","salience":0.2737238109111786},{"name":"semaphore","salience":0.22260837256908417},{"name":"sem","salience":0.1443074345588684}],"text":" int sem_destroy(sem_t *Sem) free all memory associated with semaphore Sem "},{"tags":[{"name":"memory","salience":0.5609012842178345},{"name":"sem","salience":0.25052496790885925},{"name":"semaphore","salience":0.18857374787330627}],"text":" free all memory associated with semaphore Sem "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"semaphore object","salience":0.6514027118682861},{"name":"value","salience":0.34859731793403625}],"text":" create a semaphore object, and set initial value "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"sem","salience":1}],"text":" try to decrement; block if Sem == 0 "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"value","salience":0.5609012842178345},{"name":"sem","salience":0.25052496790885925},{"name":"semaphore","salience":0.18857374787330627}],"text":" increment the value of semaphore Sem "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"memory","salience":0.5609012842178345},{"name":"sem","salience":0.25052496790885925},{"name":"semaphore","salience":0.18857374787330627}],"text":" free all memory associated with semaphore Sem "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"source process","salience":0.6593352556228638},{"name":"message","salience":0.21502183377742767},{"name":"target process","salience":0.12564292550086975}],"text":" source process sends a message to a target process "},{"tags":[{"name":"target process","salience":0.6044279336929321},{"name":"message","salience":0.22899214923381805},{"name":"code","salience":0.166579931974411}],"text":" target process uses message to invoke appropriate code "},{"tags":[{"name":"reply message","salience":0.6537261009216309},{"name":"result","salience":0.34627392888069153}],"text":" may send a reply message containing the computed result "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"data","salience":0.5457042455673218},{"name":"value","salience":0.17368267476558685},{"name":"message","salience":0.16229388117790222},{"name":"parameters","salience":0.0617431215941906},{"name":"cf","salience":0.056576069444417953}],"text":" data is passed by copying value into a message (cf. parameters) "},{"tags":[{"name":"systems","salience":1}],"text":" particularly effective for concurrent, distributed systems "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"sender","salience":0.5195479989051819},{"name":"message","salience":0.23698017001152039},{"name":"programming model","salience":0.15687617659568787},{"name":"function call","salience":0.08659563213586807}],"text":" synchronous sender transmits message, waits for response familiar programming model; like a (remote) function call "},{"tags":[{"name":"sender","salience":0.6288618445396423},{"name":"message","salience":0.2148476243019104},{"name":"response","salience":0.15629051625728607}],"text":" sender transmits message, waits for response "},{"tags":[{"name":"programming model","salience":0.7194413542747498},{"name":"function call","salience":0.28055864572525024}],"text":" familiar programming model; like a (remote) function call "},{"tags":[{"name":"sender","salience":0.5922259092330933},{"name":"message","salience":0.24766281247138977},{"name":"sender","salience":0.10229893028736115},{"name":"task reponse arrival","salience":0.05781236290931702}],"text":" asynchronous sender transmits message, continues with own task reponse arrival eventually interrupts original sender "},{"tags":[{"name":"sender","salience":0.5794182419776917},{"name":"message","salience":0.2765793800354004},{"name":"task","salience":0.14400234818458557}],"text":" sender transmits message, continues with own task "},{"tags":[{"name":"arrival","salience":0.6507119536399841},{"name":"sender","salience":0.34928804636001587}],"text":" reponse arrival eventually interrupts original sender "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"sender","salience":0.6288618445396423},{"name":"message","salience":0.2148476243019104},{"name":"response","salience":0.15629051625728607}],"text":" sender transmits message, waits for response "},{"tags":[{"name":"programming model","salience":0.7194413542747498},{"name":"function call","salience":0.28055864572525024}],"text":" familiar programming model; like a (remote) function call "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"sender","salience":0.5794182419776917},{"name":"message","salience":0.2765793800354004},{"name":"task","salience":0.14400234818458557}],"text":" sender transmits message, continues with own task "},{"tags":[{"name":"arrival","salience":0.6507119536399841},{"name":"sender","salience":0.34928804636001587}],"text":" reponse arrival eventually interrupts original sender "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processor","salience":0.6514027118682861},{"name":"network","salience":0.34859731793403625}],"text":" could occur on local processor, or across wide-area network "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"mpi_init","salience":0.780203640460968},{"name":"message passing environment","salience":0.21979637444019318}],"text":" MPI_Init(..) ... initialises message passing environment "},{"tags":[{"name":"mpi_send","salience":0.6511138081550598},{"name":"synchronous","salience":0.23861004412174225},{"name":"message","salience":0.11027611047029495}],"text":" MPI_Send(..) ... send a message (synchronous) "},{"tags":[{"name":"mpi_recv","salience":0.6511138081550598},{"name":"synchronous","salience":0.23861004412174225},{"name":"message","salience":0.11027611047029495}],"text":" MPI_Recv(..) ... send a message (synchronous) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"functions","salience":1}],"text":" goroutines ... concurrently executing \"functions\" "},{"tags":[{"name":"channels","salience":0.7635040879249573},{"name":"communication pipes","salience":0.1386692076921463},{"name":"goroutines","salience":0.09782671183347702}],"text":" channels ... communication pipes between goroutines "},{"tags":[{"name":"channels","salience":1}],"text":" select ... manage multiple channels "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"signals","salience":0.5981985926628113},{"name":"kill","salience":0.29228582978248596},{"name":"handlers","salience":0.10951557755470276}],"text":" signals: kill(), wait(), signal handlers "},{"tags":[{"name":"resource","salience":0.6507119536399841},{"name":"file","salience":0.34928804636001587}],"text":" accessing the same resource (e.g. writing onto the same file) "},{"tags":[{"name":"pipes","salience":0.41890159249305725},{"name":"stdout","salience":0.33460915088653564},{"name":"process a","salience":0.13483498990535736},{"name":"process b","salience":0.06822451204061508},{"name":"stdin","salience":0.04342976212501526}],"text":" pipes: stdout of process A goes into stdin of process B "},{"tags":[{"name":"message queues","salience":0.6219350099563599},{"name":"data","salience":0.21984653174877167},{"name":"each other","salience":0.15821844339370728}],"text":" message queues: passing data between each other "},{"tags":[{"name":"sockets","salience":0.7288792729377747},{"name":"interaction","salience":0.18542474508285522},{"name":"client-server style","salience":0.08569597452878952}],"text":" sockets: client-server style interaction "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processes","salience":0.7371235489845276},{"name":"file","salience":0.2628764510154724}],"text":" two processes writing to same file \"simultaneously\" "},{"tags":[{"name":"order","salience":0.5067058801651001},{"name":"output","salience":0.23706495761871338},{"name":"actions","salience":0.16960257291793823},{"name":"scheduler","salience":0.08662661164999008}],"text":" order of output depends on actions of (opaque) scheduler "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"controls","salience":0.5463998913764954},{"name":"files","salience":0.20307958126068115},{"name":"note","salience":0.18288879096508026},{"name":"files","salience":0.06763176620006561}],"text":" controls access to shared files (note: files not fds) "},{"tags":[{"name":"operations","salience":0.3125840723514557},{"name":"lock_ex","salience":0.28346413373947144},{"name":"lock_un","salience":0.275283545255661},{"name":"operation","salience":0.10670973360538483},{"name":"lock_nb","salience":0.021958494558930397}],"text":" possible operations LOCK_SH ... acquire shared lock LOCK_EX ... acquire exclusive lock LOCK_UN ... unlock LOCK_NB ... operation fails rather than blocking "},{"tags":[{"name":"lock","salience":1}],"text":" LOCK_SH ... acquire shared lock "},{"tags":[{"name":"lock","salience":1}],"text":" LOCK_EX ... acquire exclusive lock "},{"tags":[{"name":"lock_un","salience":0.8456545472145081},{"name":"unlock","salience":0.15434543788433075}],"text":" LOCK_UN ... unlock "},{"tags":[{"name":"lock_nb","salience":0.5667742490768433},{"name":"operation","salience":0.43322575092315674}],"text":" LOCK_NB ... operation fails rather than blocking "},{"tags":[{"name":"flock","salience":0.408832848072052},{"name":"mode","salience":0.3887583315372467},{"name":"lock","salience":0.2024088352918625}],"text":" in blocking mode, flock() does not return until lock available "},{"tags":[{"name":"processes","salience":0.6537261009216309},{"name":"file use locks","salience":0.34627392888069153}],"text":" only works correctly if all processes accessing file use locks "},{"tags":[{"name":"value","salience":0.6508029103279114},{"name":"success","salience":0.2300509661436081},{"name":"failure","salience":0.11914613842964172}],"text":" return value: 0 in success, -1 on failure "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"lock","salience":1}],"text":" LOCK_SH ... acquire shared lock "},{"tags":[{"name":"lock","salience":1}],"text":" LOCK_EX ... acquire exclusive lock "},{"tags":[{"name":"lock_un","salience":0.8456545472145081},{"name":"unlock","salience":0.15434543788433075}],"text":" LOCK_UN ... unlock "},{"tags":[{"name":"lock_nb","salience":0.5667742490768433},{"name":"operation","salience":0.43322575092315674}],"text":" LOCK_NB ... operation fails rather than blocking "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"file","salience":0.9480768442153931},{"name":"locks","salience":0.05192317068576813}],"text":" if file not locked or other shared locks, OK "},{"tags":[{"name":"file","salience":0.6223326921463013},{"name":"lock","salience":0.37766730785369873}],"text":" if file has exclusive lock, blocked "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"file","salience":1}],"text":" if file is not locked, OK "},{"tags":[{"name":"locks","salience":0.7983086109161377},{"name":"file","salience":0.20169135928153992}],"text":" if any locks (shared or exclusive) on file, blocked "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"flock","salience":0.9052930474281311},{"name":"lock","salience":0.0947069302201271}],"text":" flock() returns 0 if lock was acquired "},{"tags":[{"name":"flock","salience":0.7790467739105225},{"name":"process","salience":0.22095321118831635}],"text":" flock() returns -1 if process would have been blocked "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"producer process","salience":0.5474507808685303},{"name":"byte stream","salience":0.26902782917022705},{"name":"stdout","salience":0.09574209898710251},{"name":"cf","salience":0.08777929097414017}],"text":" producer process writes to byte stream (cf. stdout) "},{"tags":[{"name":"consumer process","salience":0.6507119536399841},{"name":"byte stream","salience":0.34928804636001587}],"text":" consumer process reads from same byte stream "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"producer blocks","salience":0.7211694121360779},{"name":"buffer","salience":0.19028449058532715},{"name":"consumer blocks","salience":0.08854608237743378}],"text":" producer blocks when buffer full; consumer blocks when buffer empty "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"file descriptors","salience":0.5758325457572937},{"name":"processes","salience":0.4241674542427063}],"text":" open two file descriptors (to be shared by processes) "},{"tags":[{"name":"fd","salience":0.600659191608429},{"name":"fd","salience":0.20345433056354523},{"name":"reading","salience":0.19588646292686462}],"text":" fd[0] is opened for reading; fd[1] is opened for writing "},{"tags":[{"name":"errno","salience":1}],"text":" return 0 if OK, otherwise return -1 and sets errno "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"fork","salience":0.7815695405006409},{"name":"child process","salience":0.21843047440052032}],"text":" fork() to create a child process "},{"tags":[{"name":"processes","salience":0.5917627215385437},{"name":"copies","salience":0.20963206887245178},{"name":"fd","salience":0.19860517978668213}],"text":" both processes have copies of fd[] "},{"tags":[{"name":"fd","salience":0.46939438581466675},{"name":"other","salience":0.28335896134376526},{"name":"fd","salience":0.247246652841568}],"text":" one can write to fd[1], the other can read from fd[0] "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"pipe","salience":0.3752753436565399},{"name":"parent","salience":0.3517312705516815},{"name":"child","salience":0.27299338579177856}],"text":" set up a pipe between parent and child "},{"tags":[{"name":"exec","salience":0.569892406463623},{"name":"child","salience":0.26662710309028625},{"name":"parent","salience":0.09742900729179382},{"name":"process","salience":0.06605145335197449}],"text":" exec() child to become a new process talking to parent "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"fopen","salience":0.46698036789894104},{"name":"arg","salience":0.31326162815093994},{"name":"command","salience":0.21975800395011902}],"text":" analogous to fopen, except first arg is a command "},{"tags":[{"name":"cmd","salience":0.7205781936645508},{"name":"interpretation","salience":0.2794218361377716}],"text":" Cmd is passed to shell for interpretation "},{"tags":[{"name":"file","salience":0.5578635931015015},{"name":"returns","salience":0.37758445739746094},{"name":"mode","salience":0.06455197185277939}],"text":" returns FILE* which be read/written depending on Mode "},{"tags":[{"name":"null","salience":0.6014711856842041},{"name":"pipe","salience":0.2506796419620514},{"name":"cmd","salience":0.1478492021560669}],"text":" returns NULL if can't establish pipe or invalid Cmd "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processes","salience":0.5608265995979309},{"name":"parent","salience":0.14746473729610443},{"name":"child","salience":0.1377951204776764},{"name":"fork","salience":0.1058778315782547},{"name":"pair","salience":0.04803573340177536}],"text":" processes come initially from parent/child pair (fork) "},{"tags":[{"name":"connection","salience":0.7815695405006409},{"name":"file descriptions","salience":0.21843047440052032}],"text":" connection established via shared file descriptions "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processes","salience":0.5600054860115051},{"name":"information","salience":0.4399944841861725}],"text":" for unrelated processes to pass information "},{"tags":[{"name":"channel","salience":0.5758325457572937},{"name":"processes","salience":0.4241674542427063}],"text":" along a buffered channel shared by many processes "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"mq names","salience":0.6746046543121338},{"name":"slash chars","salience":0.17433889210224152},{"name":"somecharacters","salience":0.1510564535856247}],"text":" MQ names look like \"/SomeCharacters \" (no slash chars) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"message queue","salience":1}],"text":" create a new message queue, or open existing one "},{"tags":[{"name":"flags","salience":0.5357313752174377},{"name":"o_rdonly","salience":0.46426862478256226}],"text":" Flags are like those for fopen() (e.g. O_RDONLY) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"message queue","salience":0.6722699403762817},{"name":"mq","salience":0.32773005962371826}],"text":" finish accessing message queue MQ "},{"tags":[{"name":"message queue","salience":0.6461020112037659},{"name":"cf","salience":0.3203314542770386},{"name":"fclose","salience":0.03356654569506645}],"text":" the message queue continues to exist (cf. fclose()) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"message","salience":0.5323154926300049},{"name":"msg","salience":0.20802262425422668},{"name":"mq","salience":0.1483467072248459},{"name":"message queue","salience":0.11131515353918076}],"text":" adds message Msg to message queue MQ "},{"tags":[{"name":"prio","salience":0.5286728143692017},{"name":"priority","salience":0.19559930264949799},{"name":"order","salience":0.15735799074172974},{"name":"mq","salience":0.06768559664487839},{"name":"messages","salience":0.05068432539701462}],"text":" Prio gives priority (determines order of messages on MQ) "},{"tags":[{"name":"mq","salience":0.40129488706588745},{"name":"blocks","salience":0.2606983184814453},{"name":"space","salience":0.1722969114780426},{"name":"o_nonblock","salience":0.10870564728975296},{"name":"error","salience":0.057004235684871674}],"text":" if MQ is full ... blocks until MQ space available if O_NONBLOCK is set, fails and returns error "},{"tags":[{"name":"blocks","salience":0.6459137201309204},{"name":"space","salience":0.21171197295188904},{"name":"mq","salience":0.14237429201602936}],"text":" blocks until MQ space available "},{"tags":[{"name":"o_nonblock","salience":0.8517670035362244},{"name":"error","salience":0.14823302626609802}],"text":" if O_NONBLOCK is set, fails and returns error "},{"tags":[{"name":"mq","salience":0.37618184089660645},{"name":"space","salience":0.2502254545688629},{"name":"timeout","salience":0.20184756815433502},{"name":"mq","salience":0.17174512147903442}],"text":" also, mq_timedsend() which waits for specified time if MQ full fails if still no space on MQ after timeout "},{"tags":[{"name":"mq","salience":1}],"text":" waits for specified time if MQ full "},{"tags":[{"name":"space","salience":0.5821095705032349},{"name":"timeout","salience":0.3014814853668213},{"name":"mq","salience":0.11640890687704086}],"text":" fails if still no space on MQ after timeout "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"blocks","salience":0.6459137201309204},{"name":"space","salience":0.21171197295188904},{"name":"mq","salience":0.14237429201602936}],"text":" blocks until MQ space available "},{"tags":[{"name":"o_nonblock","salience":0.8517670035362244},{"name":"error","salience":0.14823302626609802}],"text":" if O_NONBLOCK is set, fails and returns error "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"mq","salience":1}],"text":" waits for specified time if MQ full "},{"tags":[{"name":"space","salience":0.5821095705032349},{"name":"timeout","salience":0.3014814853668213},{"name":"mq","salience":0.11640890687704086}],"text":" fails if still no space on MQ after timeout "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"priority message","salience":0.5635448098182678},{"name":"mq","salience":0.24901671707630157},{"name":"queue","salience":0.1874384582042694}],"text":" removes highest priority message from queue MQ "},{"tags":[{"name":"prio","salience":0.44910821318626404},{"name":"null","salience":0.3026798665523529},{"name":"message priority","salience":0.24821192026138306}],"text":" if *Prio is not NULL, receives message priority "},{"tags":[{"name":"mq","salience":0.357975572347641},{"name":"blocks","salience":0.3081892728805542},{"name":"message","salience":0.21509817242622375},{"name":"error","salience":0.07198209315538406},{"name":"o_nonblock","salience":0.04675488546490669}],"text":" if MQ is empty ... blocks until a message is added to MQ if O_NONBLOCK is set, fails and returns error "},{"tags":[{"name":"blocks","salience":0.6640506386756897},{"name":"message","salience":0.2322261929512024},{"name":"mq","salience":0.10372317582368851}],"text":" blocks until a message is added to MQ "},{"tags":[{"name":"o_nonblock","salience":0.8517670035362244},{"name":"error","salience":0.14823302626609802}],"text":" if O_NONBLOCK is set, fails and returns error "},{"tags":[{"name":"processes","salience":0.764586865901947},{"name":"message","salience":0.14153623580932617},{"name":"priority process","salience":0.0938769280910492}],"text":" if several processes blocked on mq_receive() oldest and highest priority process receives the message "},{"tags":[{"name":"priority process","salience":0.557264506816864},{"name":"message","salience":0.442735493183136}],"text":" oldest and highest priority process receives the message "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"blocks","salience":0.6640506386756897},{"name":"message","salience":0.2322261929512024},{"name":"mq","salience":0.10372317582368851}],"text":" blocks until a message is added to MQ "},{"tags":[{"name":"o_nonblock","salience":0.8517670035362244},{"name":"error","salience":0.14823302626609802}],"text":" if O_NONBLOCK is set, fails and returns error "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"priority process","salience":0.557264506816864},{"name":"message","salience":0.442735493183136}],"text":" oldest and highest priority process receives the message "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"processes","salience":0.6467199325561523},{"name":"host","salience":0.35328009724617004}],"text":" assume that both processes are on the same host "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"web servers","salience":0.5091436505317688},{"name":"databases","salience":0.36834314465522766},{"name":"message queues","salience":0.12251318246126175}],"text":" e.g. web servers, networked databases, networked message queues, ... "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"client-server systems","salience":1}],"text":" commonly used to construct client-server systems "},{"tags":[{"name":"domain","salience":0.3958089351654053},{"name":"unix","salience":0.31489208340644836},{"name":"internet domain","salience":0.28929901123046875}],"text":" either locally (Unix domain) or network-wide (Internet domain) "},{"tags":[{"name":"server","salience":0.5185744166374207},{"name":"socket","salience":0.22540152072906494},{"name":"address","salience":0.07857581973075867},{"name":"binds","salience":0.059657853096723557},{"name":"connections","salience":0.054838694632053375},{"name":"clients","salience":0.038623519241809845},{"name":"network","salience":0.024328170344233513}],"text":" server creates a socket, then ... binds to an address (local or network) listens for connections from clients "},{"tags":[{"name":"binds","salience":0.6233991980552673},{"name":"address","salience":0.21800990402698517},{"name":"network","salience":0.1585909128189087}],"text":" binds to an address (local or network) "},{"tags":[{"name":"connections","salience":0.5783335566520691},{"name":"clients","salience":0.4216664433479309}],"text":" listens for connections from clients "},{"tags":[{"name":"socket","salience":0.27918532490730286},{"name":"client","salience":0.2323470264673233},{"name":"server","salience":0.08376287668943405},{"name":"server","salience":0.08279488235712051},{"name":"socket","salience":0.07720457017421722},{"name":"address","salience":0.06865520030260086},{"name":"server","salience":0.058916471898555756},{"name":"socket","salience":0.058916471898555756},{"name":"responses","salience":0.0369950495660305},{"name":"requests","salience":0.02122212015092373}],"text":" client creates a socket, then ... connects to the server using known address writes to server via socket (i.e. sends requests) reads from server via socket (i.e. receives responses) "},{"tags":[{"name":"server","salience":0.5756994485855103},{"name":"address","salience":0.42430055141448975}],"text":" connects to the server using known address "},{"tags":[{"name":"server","salience":0.44561079144477844},{"name":"socket","salience":0.3223798871040344},{"name":"requests","salience":0.23200932145118713}],"text":" writes to server via socket (i.e. sends requests) "},{"tags":[{"name":"reads","salience":0.4844355583190918},{"name":"server","salience":0.22664567828178406},{"name":"socket","salience":0.1621483415365219},{"name":"responses","salience":0.12677040696144104}],"text":" reads from server via socket (i.e. receives responses) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"binds","salience":0.6233991980552673},{"name":"address","salience":0.21800990402698517},{"name":"network","salience":0.1585909128189087}],"text":" binds to an address (local or network) "},{"tags":[{"name":"connections","salience":0.5783335566520691},{"name":"clients","salience":0.4216664433479309}],"text":" listens for connections from clients "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"server","salience":0.5756994485855103},{"name":"address","salience":0.42430055141448975}],"text":" connects to the server using known address "},{"tags":[{"name":"server","salience":0.44561079144477844},{"name":"socket","salience":0.3223798871040344},{"name":"requests","salience":0.23200932145118713}],"text":" writes to server via socket (i.e. sends requests) "},{"tags":[{"name":"reads","salience":0.4844355583190918},{"name":"server","salience":0.22664567828178406},{"name":"socket","salience":0.1621483415365219},{"name":"responses","salience":0.12677040696144104}],"text":" reads from server via socket (i.e. receives responses) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[],"text":" requires #include <sys/socket.h> "},{"tags":[{"name":"socket","salience":0.27303093671798706},{"name":"communications","salience":0.14694592356681824},{"name":"af_local","salience":0.09478186815977097},{"name":"sock_stream","salience":0.08075688779354095},{"name":"sock_dgram","salience":0.07399110496044159},{"name":"host","salience":0.042889486998319626},{"name":"internet domain","salience":0.03930748626589775},{"name":"domain","salience":0.03883238136768341},{"name":"type","salience":0.029406961053609848},{"name":"semantics","salience":0.02926185540854931},{"name":"network","salience":0.029050368815660477},{"name":"unix","salience":0.025481505319476128},{"name":"protocols","salience":0.025123678147792816},{"name":"e.g. ip","salience":0.014128774404525757},{"name":"protocol","salience":0.01105773076415062},{"name":"communication protocol","salience":0.01105773076415062},{"name":"many","salience":0.009309002198278904},{"name":"packet transfer","salience":0.00886274129152298},{"name":"tcp","salience":0.008361786603927612},{"name":"udp","salience":0.008361786603927612}],"text":" creates a socket, using ... Domain ... communications domain AF_LOCAL ... on the local host (Unix domain) AF_INET ... over the network (Internet domain) Type ... semantics of communication SOCK_STREAM ... sequenced, reliable communications stream SOCK_DGRAM ... connectionless, unreliable packet transfer Protocol ... communication protocol many exist (see /etc/protocols), e.g. IP, TCP, UDP, ... "},{"tags":[{"name":"communications","salience":0.3194870054721832},{"name":"af_local","salience":0.27942419052124023},{"name":"domain","salience":0.11641359329223633},{"name":"host","salience":0.09586044400930405},{"name":"network","salience":0.06742610037326813},{"name":"internet domain","salience":0.06341727077960968},{"name":"unix","salience":0.05797140300273895}],"text":" Domain ... communications domain AF_LOCAL ... on the local host (Unix domain) AF_INET ... over the network (Internet domain) "},{"tags":[{"name":"af_local","salience":0.5141329169273376},{"name":"host","salience":0.25447338819503784},{"name":"domain","salience":0.181659996509552},{"name":"unix","salience":0.049733716994524}],"text":" AF_LOCAL ... on the local host (Unix domain) "},{"tags":[{"name":"af_inet","salience":0.5331424474716187},{"name":"network","salience":0.2714798152446747},{"name":"internet domain","salience":0.19537773728370667}],"text":" AF_INET ... over the network (Internet domain) "},{"tags":[{"name":"type","salience":0.38532835245132446},{"name":"sock_stream","salience":0.27490928769111633},{"name":"semantics","salience":0.2073729932308197},{"name":"sock_dgram","salience":0.1039302870631218},{"name":"packet transfer","salience":0.028459109365940094}],"text":" Type ... semantics of communication SOCK_STREAM ... sequenced, reliable communications stream SOCK_DGRAM ... connectionless, unreliable packet transfer "},{"tags":[{"name":"sock_stream","salience":0.8342920541763306},{"name":"communications stream","salience":0.16570793092250824}],"text":" SOCK_STREAM ... sequenced, reliable communications stream "},{"tags":[{"name":"sock_dgram","salience":0.8342920541763306},{"name":"packet transfer","salience":0.16570793092250824}],"text":" SOCK_DGRAM ... connectionless, unreliable packet transfer "},{"tags":[{"name":"communication protocol","salience":0.3112180233001709},{"name":"many","salience":0.25572121143341064},{"name":"protocols","salience":0.22135044634342194},{"name":"tcp","salience":0.07704943418502808},{"name":"udp","salience":0.07704943418502808},{"name":"e.g. ip","salience":0.05761142447590828}],"text":" Protocol ... communication protocol many exist (see /etc/protocols), e.g. IP, TCP, UDP, ... "},{"tags":[{"name":"many","salience":0.5119484663009644},{"name":"tcp","salience":0.25238677859306335},{"name":"protocols","salience":0.16478466987609863},{"name":"udp","salience":0.07088009268045425}],"text":" many exist (see /etc/protocols), e.g. IP, TCP, UDP, ... "},{"tags":[{"name":"int","salience":0.4039159119129181},{"name":"socket descriptor","salience":0.3868912160396576},{"name":"error","salience":0.20919285714626312}],"text":" returns a socket descriptor (small int) or -1 on error "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"communications","salience":0.3194870054721832},{"name":"af_local","salience":0.27942419052124023},{"name":"domain","salience":0.11641359329223633},{"name":"host","salience":0.09586044400930405},{"name":"network","salience":0.06742610037326813},{"name":"internet domain","salience":0.06341727077960968},{"name":"unix","salience":0.05797140300273895}],"text":" Domain ... communications domain AF_LOCAL ... on the local host (Unix domain) AF_INET ... over the network (Internet domain) "},{"tags":[{"name":"af_local","salience":0.5141329169273376},{"name":"host","salience":0.25447338819503784},{"name":"domain","salience":0.181659996509552},{"name":"unix","salience":0.049733716994524}],"text":" AF_LOCAL ... on the local host (Unix domain) "},{"tags":[{"name":"af_inet","salience":0.5331424474716187},{"name":"network","salience":0.2714798152446747},{"name":"internet domain","salience":0.19537773728370667}],"text":" AF_INET ... over the network (Internet domain) "},{"tags":[{"name":"type","salience":0.38532835245132446},{"name":"sock_stream","salience":0.27490928769111633},{"name":"semantics","salience":0.2073729932308197},{"name":"sock_dgram","salience":0.1039302870631218},{"name":"packet transfer","salience":0.028459109365940094}],"text":" Type ... semantics of communication SOCK_STREAM ... sequenced, reliable communications stream SOCK_DGRAM ... connectionless, unreliable packet transfer "},{"tags":[{"name":"sock_stream","salience":0.8342920541763306},{"name":"communications stream","salience":0.16570793092250824}],"text":" SOCK_STREAM ... sequenced, reliable communications stream "},{"tags":[{"name":"sock_dgram","salience":0.8342920541763306},{"name":"packet transfer","salience":0.16570793092250824}],"text":" SOCK_DGRAM ... connectionless, unreliable packet transfer "},{"tags":[{"name":"communication protocol","salience":0.3112180233001709},{"name":"many","salience":0.25572121143341064},{"name":"protocols","salience":0.22135044634342194},{"name":"tcp","salience":0.07704943418502808},{"name":"udp","salience":0.07704943418502808},{"name":"e.g. ip","salience":0.05761142447590828}],"text":" Protocol ... communication protocol many exist (see /etc/protocols), e.g. IP, TCP, UDP, ... "},{"tags":[{"name":"many","salience":0.5119484663009644},{"name":"tcp","salience":0.25238677859306335},{"name":"protocols","salience":0.16478466987609863},{"name":"udp","salience":0.07088009268045425}],"text":" many exist (see /etc/protocols), e.g. IP, TCP, UDP, ... "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"af_local","salience":0.5141329169273376},{"name":"host","salience":0.25447338819503784},{"name":"domain","salience":0.181659996509552},{"name":"unix","salience":0.049733716994524}],"text":" AF_LOCAL ... on the local host (Unix domain) "},{"tags":[{"name":"af_inet","salience":0.5331424474716187},{"name":"network","salience":0.2714798152446747},{"name":"internet domain","salience":0.19537773728370667}],"text":" AF_INET ... over the network (Internet domain) "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"sock_stream","salience":0.8342920541763306},{"name":"communications stream","salience":0.16570793092250824}],"text":" SOCK_STREAM ... sequenced, reliable communications stream "},{"tags":[{"name":"sock_dgram","salience":0.8342920541763306},{"name":"packet transfer","salience":0.16570793092250824}],"text":" SOCK_DGRAM ... connectionless, unreliable packet transfer "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"many","salience":0.5119484663009644},{"name":"tcp","salience":0.25238677859306335},{"name":"protocols","salience":0.16478466987609863},{"name":"udp","salience":0.07088009268045425}],"text":" many exist (see /etc/protocols), e.g. IP, TCP, UDP, ... "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"associates","salience":0.6219350099563599},{"name":"socket","salience":0.21984653174877167},{"name":"address","salience":0.15821844339370728}],"text":" associates an open socket with an address "},{"tags":[{"name":"pathname","salience":0.7597359418869019},{"name":"unix domain","salience":0.15187442302703857},{"name":"file system","salience":0.08838963508605957}],"text":" for Unix Domain, address is a pathname in the file system "},{"tags":[{"name":"ip address","salience":0.732215166091919},{"name":"internet domain","salience":0.16927072405815125},{"name":"port number","salience":0.0985141396522522}],"text":" for Internet Domain, address is IP address + port number "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"sockfd","salience":0.6752138137817383},{"name":"connections","salience":0.32478615641593933}],"text":" wait for connections on socket Sockfd "},{"tags":[{"name":"connections","salience":1}],"text":" allow at most Backlog connections to be queued up "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"domain","salience":0.4929177165031433},{"name":"af_unix","salience":0.28692197799682617},{"name":"af_inet","salience":0.2201603204011917}],"text":" sin_family ... domain: AF_UNIX or AF_INET "},{"tags":[{"name":"port number","salience":1}],"text":" sin_port ... port number: 80, 443, etc. "},{"tags":[{"name":"structure","salience":0.5758325457572937},{"name":"host address","salience":0.4241674542427063}],"text":" sin_addr ... structure containing host address "},{"tags":[{"name":"sin_zero","salience":0.7205781936645508},{"name":"padding","salience":0.2794218361377716}],"text":" sin_zero[8] ... padding "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"sockfd","salience":1}],"text":" Sockfd has been created, bound and is listening "},{"tags":[{"name":"blocks","salience":0.7371235489845276},{"name":"connection request","salience":0.2628764510154724}],"text":" blocks until a connection request is received "},{"tags":[{"name":"connection","salience":0.40470683574676514},{"name":"client","salience":0.2593766450881958},{"name":"server","salience":0.23999974131584167},{"name":"connect","salience":0.0959167629480362}],"text":" sets up a connection between client/server after connect() "},{"tags":[{"name":"information","salience":0.5023859143257141},{"name":"requestor","salience":0.33701252937316895},{"name":"addr","salience":0.16060155630111694}],"text":" places information about the requestor in Addr "},{"tags":[{"name":"socket descriptor","salience":0.5632660388946533},{"name":"error","salience":0.4367339611053467}],"text":" returns a new socket descriptor, or -1 on error "}]},{"tags":[{"name":"list"}],"items":[{"tags":[{"name":"socket","salience":0.49175021052360535},{"name":"sockfd","salience":0.3119516372680664},{"name":"addr","salience":0.19629812240600586}],"text":" connects the socket Sockfd to address Addr "},{"tags":[{"name":"addr","salience":0.5659158825874329},{"name":"process","salience":0.43408411741256714}],"text":" assumes that Addr contains a process listening appropriately "},{"tags":[{"name":"success","salience":0.6514027118682861},{"name":"error","salience":0.34859731793403625}],"text":" returns 0 on success, or -1 on error "}]}],"block":[{"tags":[{"name":"paragraph"},{"name":"g","salience":0.6219350099563599},{"name":"parallelism","salience":0.21984653174877167},{"name":"concurrency","salience":0.15821844339370728}],"text":"G: Parallelism/Concurrency"},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"parallelism","salience":0.8837491273880005},{"name":"concurrency","salience":0.11625086516141891}],"text":" Parallelism/Concurrency "},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency","salience":1}],"text":" Concurrency/Parallelism2/59 "},{"tags":[{"name":"paragraph"},{"name":"parallelism","salience":0.7602997422218323},{"name":"computations","salience":0.2397002875804901}],"text":" Parallelism = multiple computations executed simultaneously "},{"tags":[{"name":"paragraph"},{"name":"parallelism","salience":0.6233991980552673},{"name":"concurrency","salience":0.21800990402698517},{"name":"synchronisation","salience":0.1585909128189087}],"text":" Both parallelism and concurrency need to deal with synchronisation. "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"parallelism3","salience":1}],"text":" ... Concurrency/Parallelism3/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.4898326098918915},{"name":"simd","salience":0.22917072474956512},{"name":"processing","salience":0.16395482420921326},{"name":"e.g. gpu","salience":0.11704183369874954}],"text":" Example of SIMD parallel processing (e.g. GPU) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"completion","salience":1}],"text":" But not totally independent: need to synchronise on completion "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"parallelism4","salience":1}],"text":" ... Concurrency/Parallelism4/59 "},{"tags":[{"name":"paragraph"},{"name":"programming model","salience":1}],"text":" Map-reduce is a programming model for "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency","salience":1}],"text":" ... Concurrency/Parallelism5/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.6309516429901123},{"name":"word frequencies","salience":0.3690483570098877}],"text":" Canonical example: compute word frequencies "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency6","salience":1}],"text":" Creating Concurrency6/59 "},{"tags":[{"name":"paragraph"},{"name":"method","salience":0.7983086109161377},{"name":"tasks","salience":0.20169135928153992}],"text":" One method for creating concurrent tasks: "},{"tags":[{"name":"paragraph"},{"name":"fork","salience":0.768847644329071},{"name":"process","salience":0.1407572478055954},{"name":"child","salience":0.09039513766765594}],"text":" fork() creates a new (child) process "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency7","salience":1}],"text":" ... Creating Concurrency7/59 "},{"tags":[{"name":"paragraph"},{"name":"mechanism","salience":0.4563129246234894},{"name":"tasks","salience":0.3061056435108185},{"name":"threads","salience":0.23758143186569214}],"text":" Alternative mechanism for concurrent tasks: threads "},{"tags":[{"name":"paragraph"},{"name":"difference","salience":0.6219350099563599},{"name":"threads","salience":0.21984653174877167},{"name":"processes","salience":0.15821844339370728}],"text":" Difference between threads and processes "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"linux","salience":0.7476610541343689},{"name":"unix threads8","salience":0.2523389458656311}],"text":" Linux/Unix Threads8/59 "},{"tags":[{"name":"paragraph"},{"name":"pthreads","salience":0.5372478365898132},{"name":"implementation","salience":0.19915178418159485},{"name":"threads","salience":0.14216776192188263},{"name":"posix","salience":0.12143260985612869}],"text":" pThreads = POSIX implementation of threads "},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"linux","salience":0.6079218983650208},{"name":"unix threads9","salience":0.39207810163497925}],"text":" ... Linux/Unix Threads9/59 "},{"tags":[{"name":"paragraph"},{"name":"attr","salience":0.8036436438560486},{"name":"thread","salience":0.1619027853012085},{"name":"arg","salience":0.03445358946919441}],"text":" int pthread_create(pthread_t *Thread, pthread_attr_t *Attr, void *(*Func)(void *), void *Arg) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"linux","salience":0.6079218983650208},{"name":"unix threads10","salience":0.39207810163497925}],"text":" ... Linux/Unix Threads10/59 "},{"tags":[{"name":"paragraph"},{"name":"void","salience":1}],"text":" pthread_t pthread_self(void) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"linux","salience":0.6079218983650208},{"name":"unix threads11","salience":0.39207810163497925}],"text":" ... Linux/Unix Threads11/59 "},{"tags":[{"name":"paragraph"},{"name":"void","salience":1}],"text":" int pthread_join(pthread_t T, void **value_ptr) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency12","salience":1}],"text":" Concurrency12/59 "},{"tags":[{"name":"paragraph"},{"name":"alternative","salience":0.5036040544509888},{"name":"concurrency","salience":0.36433547735214233},{"name":"execution","salience":0.13206049799919128}],"text":" The alternative to concurrency ... sequential execution "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency13","salience":1}],"text":" ... Concurrency13/59 "},{"tags":[{"name":"paragraph"},{"name":"reality","salience":0.7290298938751221},{"name":"processes","salience":0.27097010612487793}],"text":" In reality, processes are often not independent "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency14","salience":1}],"text":" ... Concurrency14/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.7105522155761719},{"name":"concurrency","salience":0.24848833680152893},{"name":"bank withdrawal","salience":0.040959432721138}],"text":" Example of problematic concurrency ... bank withdrawal: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"scenario","salience":0.4898326098918915},{"name":"processes","salience":0.22917072474956512},{"name":"account","salience":0.16395482420921326},{"name":"balance","salience":0.11704183369874954}],"text":" Scenario: two processes, one account A, initial balance $500 "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency15","salience":1}],"text":" ... Concurrency15/59 "},{"tags":[{"name":"paragraph"},{"name":"restatement","salience":0.7229015231132507},{"name":"program","salience":0.27709847688674927}],"text":" Restatement of program: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"outcome","salience":0.5934883952140808},{"name":"scenario","salience":0.4065115749835968}],"text":" Possible outcome of scenario: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency control16","salience":1}],"text":" Concurrency Control16/59 "},{"tags":[{"name":"paragraph"},{"name":"concurrency control","salience":1}],"text":" Concurrency control aims to "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"concurrency control17","salience":1}],"text":" ... Concurrency Control17/59 "},{"tags":[{"name":"paragraph"},{"name":"memory approach","salience":1}],"text":" Shared memory approach: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"producer-consumer problem18","salience":1}],"text":" Producer-Consumer Problem18/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.6507119536399841},{"name":"concurrency control issues","salience":0.34928804636001587}],"text":" Classic example for concurrency control issues "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"producer-consumer problem19","salience":1}],"text":" ... Producer-Consumer Problem19/59 "},{"tags":[{"name":"paragraph"},{"name":"data objects","salience":0.7983086109161377},{"name":"processes","salience":0.20169135928153992}],"text":" Data objects shared by two processes: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"functions","salience":0.5505452156066895},{"name":"buffer","salience":0.26900187134742737},{"name":"view","salience":0.18045291304588318}],"text":" Functions on buffer (simplified view): "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"producer-consumer problem20","salience":1}],"text":" ... Producer-Consumer Problem20/59 "},{"tags":[{"name":"paragraph"},{"name":"producer process","salience":1}],"text":" Producer process (P): "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"producer-consumer problem21","salience":1}],"text":" ... Producer-Consumer Problem21/59 "},{"tags":[{"name":"paragraph"},{"name":"consumer process","salience":1}],"text":" Consumer process (C): "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"producer-consumer problem22","salience":1}],"text":" ... Producer-Consumer Problem22/59 "},{"tags":[{"name":"paragraph"},{"name":"scenario","salience":0.47416946291923523},{"name":"signals","salience":0.2789520025253296},{"name":"processes","salience":0.24687853455543518}],"text":" A possible scenario (assumes signals only reach paused processes) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"semaphores23","salience":1}],"text":" Semaphores23/59 "},{"tags":[{"name":"paragraph"},{"name":"semaphore","salience":0.6551247239112854},{"name":"operations","salience":0.3448752760887146}],"text":" Semaphore operations: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"semaphores24","salience":1}],"text":" ... Semaphores24/59 "},{"tags":[{"name":"paragraph"},{"name":"semaphores","salience":0.7827401161193848},{"name":"producer-consumer problem","salience":0.21725986897945404}],"text":" Using semaphores for the producer-consumer problem: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"semaphore","salience":1}],"text":" The mutex semaphore ensures that "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"semaphores25","salience":1}],"text":" ... Semaphores25/59 "},{"tags":[{"name":"paragraph"},{"name":"semaphores","salience":0.8844531178474426},{"name":"producer-consumer problem","salience":0.11554689705371857}],"text":" Using semaphores for the producer-consumer problem (cont) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"semaphores26","salience":1}],"text":" ... Semaphores26/59 "},{"tags":[{"name":"paragraph"},{"name":"semaphores","salience":0.8844531178474426},{"name":"producer-consumer problem","salience":0.11554689705371857}],"text":" Using semaphores for the producer-consumer problem (cont) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"semaphores27","salience":1}],"text":" ... Semaphores27/59 "},{"tags":[{"name":"paragraph"},{"name":"semaphores","salience":0.7760188579559326},{"name":"linux","salience":0.16912458837032318},{"name":"unix","salience":0.05485653132200241}],"text":" Semaphores on Linux/Unix ... "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"passing28","salience":1}],"text":" Message Passing28/59 "},{"tags":[{"name":"paragraph"},{"name":"message","salience":0.6130161881446838},{"name":"method","salience":0.2310343235731125},{"name":"computations","salience":0.15594951808452606}],"text":" Message passing = a method for invoking computations "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"passing29","salience":1}],"text":" ... Message Passing29/59 "},{"tags":[{"name":"paragraph"},{"name":"message passing systems","salience":1}],"text":" Message passing systems can be ... "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"passing30","salience":1}],"text":" ... Message Passing30/59 "},{"tags":[{"name":"paragraph"},{"name":"message passing architecture","salience":1}],"text":" Message passing architecture "},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"passing31","salience":1}],"text":" ... Message Passing31/59 "},{"tags":[{"name":"paragraph"},{"name":"message passing framework","salience":0.6275835633277893},{"name":"mpi","salience":0.3724164664745331}],"text":" A standard message passing framework (MPI) has been defined "},{"tags":[{"name":"paragraph"},{"name":"bindings","salience":0.5125078558921814},{"name":"languages","salience":0.23236599564552307},{"name":"c++","salience":0.15242119133472443},{"name":"python","salience":0.07095754146575928},{"name":"java","salience":0.03174741938710213}],"text":" Bindings exist for many languages (e.g. C, C++, Java, Python, ...) "},{"tags":[{"name":"paragraph"},{"name":"languages","salience":0.5714789032936096},{"name":"message","salience":0.4285210967063904}],"text":" Other languages have message passing built in "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"passing32","salience":1}],"text":" ... Message Passing32/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.5316926836967468},{"name":"message","salience":0.24875517189502716},{"name":"language support","salience":0.16467098891735077},{"name":"google's go","salience":0.05488116666674614}],"text":" Example of message passing with language support: Google's Go "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"message","salience":1}],"text":" ... Message Passing33/59 "},{"tags":[{"name":"paragraph"},{"name":"withdrawal example","salience":0.7403282523155212},{"name":"go","salience":0.25967174768447876}],"text":" Bank withdrawal example using Go: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"info","salience":0.558695375919342},{"name":"go","salience":0.25204020738601685},{"name":"https://tour.golang.org/","salience":0.1892644166946411}],"text":" For more info on Go, see https://tour.golang.org/ "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"process interaction","salience":1}],"text":" Process Interaction "},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"processes35","salience":1}],"text":" Interacting Processes35/59 "},{"tags":[{"name":"paragraph"},{"name":"processes","salience":1}],"text":" Processes can interact via "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"processes36","salience":1}],"text":" ... Interacting Processes36/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.8837491273880005},{"name":"process interaction","salience":0.11625086516141891}],"text":" Example of problematic process interaction: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"},{"name":"access","salience":0.5758325457572937},{"name":"semaphores","salience":0.4241674542427063}],"text":" Could control access to file via semaphores "},{"tags":[{"name":"paragraph"},{"name":"alternative","salience":0.6320440173149109},{"name":"mechanism","salience":0.2071658819913864},{"name":"file locking","salience":0.16079013049602509}],"text":" An alternative (less general) mechanism: file locking "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"locking37","salience":1}],"text":" File Locking37/59 "},{"tags":[{"name":"paragraph"},{"name":"filedesc","salience":0.8896594047546387},{"name":"operation","salience":0.11034060269594193}],"text":" int flock(int FileDesc, int Operation) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"locking38","salience":1}],"text":" ... File Locking38/59 "},{"tags":[{"name":"paragraph"},{"name":"process","salience":0.6085098385810852},{"name":"lock","salience":0.3914901912212372}],"text":" If a process tries to acquire a shared lock ... "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"pipes39","salience":1}],"text":" Pipes39/59 "},{"tags":[{"name":"paragraph"},{"name":"style","salience":0.4563129246234894},{"name":"process interaction","salience":0.3061056435108185},{"name":"communication","salience":0.23758143186569214}],"text":" A common style of process interaction (communication) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"pipe","salience":0.6570926308631897},{"name":"i/o","salience":0.15880799293518066},{"name":"consumer","salience":0.11233679205179214},{"name":"producer","salience":0.0717625692486763}],"text":" A pipe provides buffered i/o between producer and consumer "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"pipes40","salience":1}],"text":" ... Pipes40/59 "},{"tags":[{"name":"paragraph"},{"name":"int pipe","salience":0.7229015231132507},{"name":"int fd","salience":0.27709847688674927}],"text":" int pipe(int fd[2]) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"pipes41","salience":1}],"text":" ... Pipes41/59 "},{"tags":[{"name":"paragraph"},{"name":"pipe","salience":1}],"text":" Creating a pipe ... "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"pipes42","salience":1}],"text":" ... Pipes42/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.7815695405006409},{"name":"pipe","salience":0.21843047440052032}],"text":" Example: setting up a pipe "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"pipes43","salience":1}],"text":" ... Pipes43/59 "},{"tags":[{"name":"paragraph"},{"name":"pattern","salience":0.5758325457572937},{"name":"pipe usage","salience":0.4241674542427063}],"text":" A common pattern in pipe usage "},{"tags":[{"name":"paragraph"},{"name":"file","salience":0.5765722393989563},{"name":"char","salience":0.2142937183380127},{"name":"mode","salience":0.13776761293411255},{"name":"char","salience":0.07136641442775726}],"text":" FILE *popen(char *Cmd, char *Mode) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"pipes44","salience":1}],"text":" ... Pipes44/59 "},{"tags":[{"name":"paragraph"},{"name":"example","salience":0.7229015231132507},{"name":"popen","salience":0.27709847688674927}],"text":" Example of popen() "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"queues45","salience":1}],"text":" Message Queues45/59 "},{"tags":[{"name":"paragraph"},{"name":"pipes","salience":0.6901488304138184},{"name":"processes","salience":0.1801798939704895},{"name":"host","salience":0.12967129051685333}],"text":" Pipes operate between two processes on same host "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"message","salience":1}],"text":" ... Message Queues46/59 "},{"tags":[{"name":"paragraph"},{"name":"message queue architecture","salience":1}],"text":" Message queue architecture "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"queues47","salience":1}],"text":" ... Message Queues47/59 "},{"tags":[{"name":"paragraph"}],"text":" Requires #include <mqueue.h>, giving mqd_t "},{"tags":[{"name":"paragraph"},{"name":"name","salience":0.4113208055496216},{"name":"char","salience":0.40692657232284546},{"name":"flags","salience":0.18175262212753296}],"text":" mqd_t mq_open(char *Name, int Flags) "},{"tags":[{"name":"paragraph"},{"name":"mq","salience":1}],"text":" int mq_close(mqd_t *MQ) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"queues48","salience":1}],"text":" ... Message Queues48/59 "},{"tags":[{"name":"paragraph"},{"name":"mq_send","salience":0.3412012755870819},{"name":"mqd_t","salience":0.19204196333885193},{"name":"char","salience":0.1460675299167633},{"name":"msg","salience":0.12587124109268188},{"name":"uint prio","salience":0.11675700545310974},{"name":"size","salience":0.07806096225976944}],"text":" int mq_send(mqd_t MQ, char *Msg, int Size, uint Prio) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"queues49","salience":1}],"text":" ... Message Queues49/59 "},{"tags":[{"name":"paragraph"},{"name":"mqd_t","salience":0.2878971993923187},{"name":"char","salience":0.22149312496185303},{"name":"msg","salience":0.19183698296546936},{"name":"uint *prio","salience":0.17835484445095062},{"name":"size","salience":0.12041784077882767}],"text":" int mq_receive(mqd_t MQ, char *Msg, int Size, uint *Prio) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"queues50","salience":1}],"text":" ... Message Queues50/59 "},{"tags":[{"name":"paragraph"},{"name":"structure","salience":0.37780115008354187},{"name":"server program","salience":0.34563159942626953},{"name":"mq","salience":0.2765672504901886}],"text":" Pseudo-code showing structure of a MQ server program: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"message","salience":1}],"text":" ... Message Queues51/59 "},{"tags":[{"name":"paragraph"},{"name":"structure","salience":0.37780115008354187},{"name":"client program","salience":0.34563159942626953},{"name":"mq","salience":0.2765672504901886}],"text":" Pseudo-code showing structure of a MQ client program: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets52","salience":1}],"text":" Sockets52/59 "},{"tags":[{"name":"paragraph"},{"name":"communication","salience":0.5961312651634216},{"name":"ipc","salience":0.20847399532794952},{"name":"mechanisms","salience":0.19539472460746765}],"text":" Inter-process communication (IPC) mechanisms considered so far "},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets53","salience":1}],"text":" ... Sockets53/59 "},{"tags":[{"name":"paragraph"},{"name":"socket","salience":0.7869012951850891},{"name":"channel","salience":0.11499039828777313},{"name":"ipc","salience":0.09810829162597656}],"text":" Socket = an end-point of an IPC channel "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets54","salience":1}],"text":" ... Sockets54/59 "},{"tags":[{"name":"paragraph"},{"name":"int socket","salience":0.559818685054779},{"name":"int domain","salience":0.18532098829746246},{"name":"int type","salience":0.17338192462921143},{"name":"protocol","salience":0.08147837966680527}],"text":" int socket(int Domain, int Type, int Protocol) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets55","salience":1}],"text":" ... Sockets55/59 "},{"tags":[{"name":"paragraph"},{"name":"int bind","salience":0.47392067313194275},{"name":"int","salience":0.24061758816242218},{"name":"sockfd","salience":0.11379098892211914},{"name":"sockaddr *addr","salience":0.0973389521241188},{"name":"socklen_t addrlen","salience":0.07433179020881653}],"text":" int bind(int Sockfd, SockAddr *Addr, socklen_t AddrLen) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets56","salience":1}],"text":" ... Sockets56/59 "},{"tags":[{"name":"paragraph"}],"text":" SockAddr = struct sockaddr_in "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets57","salience":1}],"text":" ... Sockets57/59 "},{"tags":[{"name":"paragraph"},{"name":"int","salience":0.49725115299224854},{"name":"int","salience":0.22994671761989594},{"name":"sockfd","salience":0.10874459892511368},{"name":"sockaddr *addr","salience":0.0930221751332283},{"name":"addrlen","salience":0.07103533297777176}],"text":" int accept(int Sockfd, SockAddr *Addr, socklen_t *AddrLen) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets58","salience":1}],"text":" ... Sockets58/59 "},{"tags":[{"name":"paragraph"},{"name":"structure","salience":0.5214539766311646},{"name":"client program","salience":0.47854602336883545}],"text":" Pseudo-code showing structure of a simple client program: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"http://www.linuxhowtos.org/c_c++/socket.htm","salience":1}],"text":" (See http://www.linuxhowtos.org/C_C++/socket.htm) "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"},{"name":"sockets59","salience":1}],"text":" ... Sockets59/59 "},{"tags":[{"name":"paragraph"},{"name":"structure","salience":0.6983504295349121},{"name":"server program","salience":0.3016495406627655}],"text":" Pseudo-code showing structure of a server program: "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" "},{"tags":[{"name":"paragraph"}],"text":""},{"tags":[{"name":"paragraph"}],"text":" Produced: 2 May 2018 "}]}