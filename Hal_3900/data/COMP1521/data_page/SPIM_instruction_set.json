{"grouped":[{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":"comp1521 18s2, spim instruction set, computer system fundamentals"}]},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":"reg, name, description"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$0, zero, the value 0 not changeable"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$1, $at, assembler temporary reserved for assembler use"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$2 $3, $v0 $v1, value from expression evaluation or function return"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$4..$7, $a0..$a3, first four arguments to a function/subroutine if needed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$8..$15, $t0..$t7, temporary must be saved by caller to subroutine subroutine can overwrite"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$16..$23, $s0..$s7, safe function variable must not be overwritten by called subroutine"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$24..$25, $t8..$t9, temporary must be saved by caller to subroutine subroutine can overwrite"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$26..$27, $k0..$k1, for kernel use may change unexpectedly"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$28, $gp, global pointer address of global area"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$29, $sp, stack pointer top of stack"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$30, $fp, frame pointer bottom of current stack frame"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$31, $ra, return address of most recent caller"}]},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":"reg, description"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$f0..$f2, value floating-point expression evaluation or function return"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$f4..$f10, temporary must be saved by caller to subroutine subroutine can overwrite"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$f12..$f14, first two double-precision function arguments"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$f16..$f18, temporary registers used for expression evaluation"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"$f20..$f30, safe function variables must be preserved across function calls"}]},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":"operand, description"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"rn, a register rs and rt are sources and rd is a destination"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"imm, a constant value a literal constant in decimal or hexadecimal format"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"label, a symbolic name which is associated with a memory address"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"addr, a memory address in one of the formats described below"}]},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":"format, address"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"label, the address associated with the label"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"rn, the value stored in register rn indirect address"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"imm rn, the sum of imm and the value stored in register rn"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"label rn, the sum of label's address and the value stored in register rn"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"label imm, the sum of label's address and imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"label imm rn, the sum of label's address imm and the value stored in register rn"}]},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":", instruction, description"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", add, rd rs rt, rd rs rt signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", addu, rd rs rt, rd rs rt unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", addi, rd rs imm, rd rs imm signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", sub, rd rs rt, rd rs - rt signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", subu, rd rs rt, rd rs - rt unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", div, rs rt, lo rs / rt hi rs rt int division signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", divu, rs rt, lo rs / rt hi rs rt int division unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", div, rd rs rt, rd rs / rt int division signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", divu, rd rs rt, rd rs / rt int division unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", rem, rd rs rt, rd rs rt modulo signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", remu, rd rs rt, rd rs rt modulo unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", mul, rd rs rt, rd rs rt signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", mult, rs rt, hi lo rs rt lo bits 0..31 hi bits 32..63 signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", multu, rs rt, hi lo rs rt lo bits 0..31 hi bits 32..63 unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", and, rd rs rt, rd rs rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", and, rd rs imm, rd rs imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", neg, rd rs, rd rs"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", nor, rd rs rt, rd rs rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", not, rd rs, rd rs"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", or, rd rs rt, rd rs rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", ori, rd rs imm, rd rs imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", xor, rd rs rt, rd rs rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", xori, rd rs imm, rd rs imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", sll, rd rt imm, rd rt imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", sllv, rd rs rt, rd rt rs"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", srl, rd rt imm, rd rt imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", srlv, rd rs rt, rd rt rs"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", move, rd rs, rd rs"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", mfhi, rd, rd hi"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", mflo, rd, rd lo"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", la, rd addr, rd addr"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", li, rd imm, rd imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", lui, rd imm, rd 0..15 0 rd 16..31 imm"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", lb, rd addr, rd byte at mem addr sign extended addr could be label rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", lw, rd addr, rd word at mem addr addr could be label rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", sb, rs addr, mem addr rs sign extended addr could be label rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", sw, rs addr, mem addr rs addr could be label rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", slt, rd rs rt, rd 1 if rs rt rd 0 otherwise signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", slti, rd rs imm, rd 1 if rs imm rd 0 otherwise signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", sltu, rd rs rt, rd 1 if rs rt rd 0 otherwise unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", beq, rs rt label, branch to label if rs rt signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", beqz, rs label, branch to label if rs 0 signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bge, rs rt label, branch to label if rs rt signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bgez, rs label, branch to label if rs 0 signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bgezal, rs label, branch to label and and $ra pc 8 if rs 0 signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bgt, rs rt label, branch to label if rs rt signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bgtu, rs rt label, branch to label if rs rt unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bgtz, rs label, branch to label if rs 0 signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", blt, rs rt label, branch to label if rs rt signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bltu, rs rt label, branch to label if rs rt unsigned"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bltz, rs label, branch to label if rs 0 signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bltzl, rs label, branch to label and $ra pc 8 if rs 0 signed"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bne, rs rt label, branch to label if rs rt"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", bnez, rs label, branch to label if rs 0"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", j, label, jump to label pc label"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", jal, label, jump to label and link $ra pc 8 pc label"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", jr, rs, jump to location in rs"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", jalr, rs, jump to location in rs and link $ra pc 8 pc label"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":", syscall, , invoke system service service given in $v0"}]},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":"service, code, arguments, result"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"print_int, 1, $a0 integer, "},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"print_float, 2, $f12 float, "},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"print_double, 3, $f12 double, "},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"print_string, 4, $a0 char, "},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"read_int, 5, , integer in $v0"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"read_float, 6, , float in $v0"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"read_double, 7, , double in $v0"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"read_string, 8, $a0 buffer $a1 length, string in buffer"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"sbrk, 9, $a0 bytes, extend data segment"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"exit, 10, , program exits"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":"print_char, 11, $a0 char, "}]},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1521","tags":[],"text":"directive, description"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":".text, the instructions following this directive are placed in the text segment of memory"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":".data, the data defined following this directive is placed in the data segment of memory"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":".space n, allocate n unitialised bytes of space in the data segment of memory"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":".word val1 val2 ..., store values in successive words in the data segment of memory"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":".byte val1 val2 ..., store values in succesive bytes in the data segment of memory"},{"intent":"content","courseCode":"COMP1521","tags":[],"text":".asciiz string, store ' 0'-terminated string in the data segment of memory"}]}],"block":[{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"an overview of the instruction set in the spim mips emulator. based on a document from the university of stuttgart."},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the spim emulator implements instructions from the mips32 instruction set as well as pseudo-instructions which look like mips instrcutions but are not actually provided on the mips32 hardware ."},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"architecture","salience":0.5,"theta":1}],"text":"mips has 32 32-bit general purpose registers and 16 64-bit floating point registers as well a two special registers hi and lo for manipulating 64-bit integer quantities. in addition it has a memory which is partitioned as follows"},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"registers","salience":0.5,"theta":1}],"text":"the 32 general purpose registers can be referenced as $0..$31 or by symbolic names and are used as follows"},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the 16 floating point registers are referenced in pairs each pair is 64-bits."},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"instructions","salience":0.5,"theta":1}],"text":"each instruction is written on a single line and has the general format"},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"some instructions have only one operand others have two and many have three."},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"operands","salience":0.5,"theta":1}],"text":"the following notation is used in describing operands in the description of instructions below."},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"addressing modes","salience":0.5,"theta":1}],"text":"many instructions have one operand which is an address. addresses can be written in a number of formats"},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"list of spim instructions","salience":0.5,"theta":1}],"text":"real mips instructions are marked with a . all other instructions are pseudoinstructions special to the spim emulator. operators in expressions have the same meaning as their c counterparts."},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"system services","salience":0.5,"theta":1}],"text":"the spim emulator provides a number of mechanisms for interacting with the host system. these services are invoked via the syscall pseudo-instruction after storing the service code in the register $v0."},{"intent":"content","courseCode":"COMP1521","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"directives","salience":0.5,"theta":1}],"text":"the spim assembler supports a number of directives which allow things to be specified at assembly time."}]}