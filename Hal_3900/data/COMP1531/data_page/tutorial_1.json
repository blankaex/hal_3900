{"grouped":[],"block":[{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"setting up git in your local machine","salience":0.5,"theta":1}],"text":"linux"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git generally comes pre-installed with linux. you can find out by typing"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git status"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if you get a fatal not a git repository or any of the parent directories .git you have git."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if you get something like bash git command not recognized then go to"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"https //git-scm.com/download/linux"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"and follow the relevant instructions to set up git."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"mac"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"install homebrew first and then type"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"brew install git"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"authenticating","salience":0.5,"theta":1}],"text":"open the terminal and type in with the quotes"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git config --global user.name your name git config --global user.email email example.com"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if you do not have an ssh key no such file or directory will pop up. if so type in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"ssh-keygen -t rsa -c your_email example.com and accept the defaults by pressing enter."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"next type in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"cat /.ssh/id_rsa.pub"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"you will see a very large hash key. that is your ssh key and one way git can verify that it is indeed you."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"go to your git account settings ssh and gpg keys new ssh key"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"paste that ssh key and give it a title that tells you which machine it is for example cse machine personal-mac etc."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"getting familiar with git","salience":0.5,"theta":1}],"text":"git knows what you did last summer."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git as you may have heard is a version control system."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"in the company that you work for the software engineers and that includes yourself have worked hard to get a minimum viable product running and it was a huge success. after tasting success in version 1.0 of your product you now want to add more features to it when version 2.0 comes out. and thus you delve into your mugs of coffee and work even harder to add the features. version 2.0 is now ready and you release it."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"as it turns out version 2.0 has some serious bugs in it that somehow passed your tests and is now running in production. you guys now need to roll back to version 1.0 which is a stable version and is yet to produce any serious bugs."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"such a scenario is quite common in any place where software is used and thanks to git we can roll back to a stable version of our choice and keep working on fixing the bugs before releasing it."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"create a new repository in your remote git account the online github/bitbucket account . for now let s go to github.com and login. then from your dashboard locate the button new repository . fill in the name and description fields and create the repository as private."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"initialize local repository"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"initialize a git repository in your local machine. first create a folder for your new local repository."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"mkdir proj_name cd proj_name"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"now type the following command to initialise an empty repository."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git init"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"running the command should display the following message"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"initialized empty git repository in /home/path/to/project/.git/"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if you run ls -a you should be able to see a new .git folder in the current project directory. git stores all the tracking information in that folder."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"let s add a readme file so we have something to work with. open a readme file and write starter readme file"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"type git log to check your commits. you should be able to see your last commit. as you add features in your project or fix bugs add and commit your changes. this will allow you to go back to your working code if your current code doesn t work as intended."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"initialize remote repository and add to local"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if you want to work on a group project you ll need to collaborate with your friends. this is where centralised repository hosting services like github or bitbucket come into play. they provide version control and source code management based on git and add extra features to assist the development cycle. while git is a command line tool these separate online services provide a web-based graphical interface and several collaboration features such as task management tools. in this course we will be using github."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"before you start working on github make sure you have everything setup first. there are instructions for getting started at the top of this week s lab."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"now create a new repository in your remote git account github account in this case so that you can link it with your local repository. to do this go to github.com and login. then from your dashboard locate the button new repository . fill in the name and description fields and create the repository as private. this online github repository will now be referred to as your remote project."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"in your remote project you will see a button clone or download . click on it click on use ssh ."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"copy that url. it will typically look like this"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git github.com your_id/repository_name.git"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git remote add origin remote_repository_url git remote -v to verify"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"now let s push the readme file that we added before to github so that everyone can see it. git push -u origin master"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"and you have made your first push. now let us add some code to it so that we can see the actual functionalities of git."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"cloning"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"cloning an existing repository is fairly straightforward. go to the website and find the green clone or download button. click on it and copy the clone url which looks likehttps //github.com/username/repository.git"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"after that open up a terminal and type"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git clone"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the repository will be downloaded into your local machine."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"committing and adding"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"let s add a very simple minimal hello world application. for this create a file named hello_word.py and inside write"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"print hello world"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"save the file and do the following"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git add . stage the directory"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git commit -m added a minimal application add a commit message git push push to remote"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if you look into your remote git account you should be able to see the new file added"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"branching out"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if you are to collaborate on a project or you want to add a new feature but don t want to mess up the old features you would want to create a new branch and make your changes."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"to create a branch type in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git checkout -b new-branch-name"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"note that the -b flag is needed only when creating a branch. after it is created you can just switch into it by typing in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git checkout new-branch-name"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"now make some changes to your file. for instance add a comment like a change exclusive to this branch only ."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git add . git commit -m added a comment in this branch git push"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"notice that it will show that everything is up to date even though you had made changes. that is because your new branch exists only locally and not remotely. not yet anyway. so by default git tried to push local master to remote master. in order to tackle that do"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git push --set-upstream origin new-branch-name"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"or"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git push -u origin new_branch_name"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"note that this is only needed when you are pushing for the first time from a branch. after that git push will suffice ."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"to notice the differences type in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git diff master"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"at any point to check which branch you are on type in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git branch"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"to check changes that you are yet to commit type in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git status"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"merge conflict"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"a git pull a day keeps the conflicts away."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"merge conflicts happen when two people try to push together not necessarily at the same time but after the same pull and they have different code in certain parts of the code then git doesn t know which change to accept so it throws merge conflicts. the larger the project is the harder it is to fix. let us look at an example."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"by default all git repositories have the branch master . let us make another branch called dev."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"before making the branch dev open a hello-world.py file and put in"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"print this is a git branch"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"add commit and push."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then run"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git checkout -b dev"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"this will create a new dev branch and move you to the new branch. if you do git branch now you ll notice that your current branch is dev. while in dev underneath line 1 add the following line"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"this is branch dev"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"add commit and push to origin dev."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"go back to master by running git checkout master and just as before add the line"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"this is branch master"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"add commit and push to origin master."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"now type in the following commands"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"git merge dev"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"this should bring up a merge conflict message. in order to fix your merge conflicts go to your file and locate the and pick the one that you think is appropriate. you can even keep both if you wish. remember to remove the merge conflict markers when you update the file."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"add commit with the message fixed merge conflict from branch dev and push to origin master."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"there are several other ways to get merge conflicts."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"in order to avoid merge conflicts make sure you don t leave uncommited changes at the end of the day and most importantly at the start of the day do a git pull."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"python programming","salience":0.5,"theta":1}],"text":"in the rest of the tutorial you ll be familiarizing yourself with python syntax by solving questions that cover most of the basics with your tutor. for every new programming language the first exercise is often writing a hello world program. so in this tutorial the first program you ll write is the hello world program."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"write a program to print hello world to standard output."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"okay now that we re done printing hello world to standard output we can delve into more interesting things. the next exercise will be a good starting point for you to get acquainted with lists and loops in python. python lists are magical and super easy to use."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"write a program to loop through a list of names and print them to standard output."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"for this problem you ll need to create a python list append names to the list in the form of strings and iterate through the list to print them."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"for a given number find the sum of n n 2 n 3 n n"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"for this problem you d want to look at python s operator."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"write a program that takes n words from a user and outputs a string that contains all the words separated by a space. n here is the number of words the user would like to input."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"for this program you ll have to take the value of n from the user then read n words from the user store them in a list and print out a string by joining the words with spaces."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"additional python exercise","salience":0.5,"theta":1}],"text":"given a base-string and a sub-string find the number of different ways the sub-string appears in the base-string"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"for example in the base-string aaa the sub-string aa appears twice and in the base-string aa the sub-string aaa appears 0 times."}]}