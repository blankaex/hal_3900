{"grouped":[{"intent":"content","courseCode":"COMP1531","tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to view each menu-item its current availability status and its price"},{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to click on the menu-item and see a description of the dish and its ingredients"},{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to click on the menu-item and see if it is nut-free gluten-free vegan"}]},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to input the table number for the order"},{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to create a drinks order and add drinks ordered by the table from the drinks menu stored in the system"},{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to create a food order and add dishes ordered by the table from the food menu stored on the system"},{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to click on any specific drink and provide additional instructions to the bar chef e.g. extra shot of bitters in lemon lime bitters"},{"intent":"content","courseCode":"COMP1531","tags":[],"text":"should be able to click on any specific food order and provide additional instructions to the kitchen chef e.g. no chilli"}]}],"block":[{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"task 1 explain the role of tdd in agile software development","salience":0.5,"theta":1}],"text":"test driven development tdd is a practice that enforces writing tests before you start implementation of the user-story. test-driven development tdd is an approach to development which combines test-first development tfd - where you write a test before you write just enough production code to fulfil that test and refactoring."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the goal of tdd is specification i.e. think through your requirements or design before your write your functional code implying that tdd is an important agile design technique. the general principles behind tdd are"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"refactoring is a technique of changing the internal structure of software to make it more maintainable reusable and flexible without changing the external behaviour of software. refactoring will be covered in the later weeks"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the following example demonstrates the approach of tdd step 1 write an empty method"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"create a file interest.py and define the following method in the the file."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"step 2 write a test that fails for the above method and run the test create a file test interest.py and add the following test-case using pytest"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"open a terminal. at the terminal install the pytest testing framework as follows"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"once pytest has been installed type the following in the folder where the source files interest.py and test_interest.py are located. your test should fail as the method has not been implemented yet pytest -v test_interest.py"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"step 3 write just enough code to make the above test succeed implement the method will calculate the simple interest for a given principal interest rate and number of years"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"step 4 re-run the test and ensure that the test succeeds"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"step 5 repeat the above steps to add a 2nd method to calculate the compound interest for a given principal interest and period."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"first add an empty new method then add a 2nd test case for this new method. this test should fail as the method is not implemented. now implement the method and re-run the test. the code for both is provided below."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"note after defining a 2nd test it is important to run the complete test suite to ensure both the old and the new tests succeed. this is called regression testing. sometimes existing code might be adequate to successfully implement the new test in which case no code changes are necessary"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"task 2 using the tdd approach implement a user story from the restaurant case study","salience":0.5,"theta":1}],"text":"1. consider the following user-stories and implement a set of test-cases to match the acceptance criteria"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"us1 as a waiter i should be able to view the current menu-options so that i can advise the diner of the current menu-choices in the restaurant acceptance criteria"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"us2 as a waiter i should be able to add a new table order into the system so that i am able to serve a diner. acceptance criteria"},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"2. given the class diagram under week 07 for the above user-stories develop the back-end to implement the functionality described in each of the above user-stories."},{"intent":"content","courseCode":"COMP1531","tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"ensure that the test-cases written above succeed following the implementation. make sure your implementation conforms to the design in the class diagram"}]}