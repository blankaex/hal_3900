{"pageData":["course code, comp1531","course title, software engineering fundamentals","convenor, aarthi natarajan","admin, mei cheng whale","classes, lectures wed 10 00 - 12 00 law theatre g04 k-f8-g04 1-9 10-12 fri 14 00 - 16 00 law theatre g04 k-f8-g04 1-9 10-12 timetable for all classes, wed, 10 00 - 12 00, law theatre g04 k-f8-g04, 1-9 10-12, fri, 14 00 - 16 00, law theatre g04 k-f8-g04, 1-9 10-12","wed, 10 00 - 12 00, law theatre g04 k-f8-g04, 1-9 10-12","fri, 14 00 - 16 00, law theatre g04 k-f8-g04, 1-9 10-12","consultations, tba","units of credit, 6","course website, http //cse.unsw.edu.au/ cs1531/18s2/","handbook entry, http //www.handbook.unsw.edu.au/undergraduate/courses/current/comp1531.html","wed, 10 00 - 12 00, law theatre g04 k-f8-g04, 1-9 10-12","fri, 14 00 - 16 00, law theatre g04 k-f8-g04, 1-9 10-12","item, marks","quizzes, 3","labs, 12","assignment 1 individual, 5","group project, 30","final exam, 50","course_work_mark, , lab_mark quiz_mark assignment_1_ mark group_project_mark, out of 50","exam_mark, , final exam mark, out of 50","exam_ok, , exammark 25/50, true/false","final_mark, , course_work_mark exam_mark, out of 100","final_grade, , uf if exam_ok fl if final_mark 50/100 ps if 50/100 final_mark 65/100 cr if 65/100 final_mark 75/100 dn if 75/100 final_mark 85/100 hd if final_mark 85/100, ","week, lectures","1, course overview assessment criteria introduction to software engineering software development life cycle sdlc team collaboration github overview and demo introduction to python programming","2, requirements engineering requirements analysis/ feasibility study/requirements specification requirements analysis using use-cases and user-stories introduction to uml more python programming release of assignment 1","3, object oriented design - objects classes encapsulation inheritance relationships object oriented programming with python domain modelling using class diagrams","4, introduction to world wide web http request/response front-end ui design based on html/css introduction to flask","5, software development methodologies waterfall rup agile methods - xp scrum software architecture and design overview architectural styles building a software application - understanding the choice of development methodology and architecture release of group project","6, oo design principles - solid principles modularity cohesion coupling agile design techniques","7, oo design principles continued.. applying oo design to a practical case-study","8, software testing and validation using testing frameworks test driven development exception handling unit tests integration tests and user acceptance tests","9, overview of databases conceptual design and data-modelling based on er model","-, mid semester break","10, relational models mapping er model to relational model overview of relational databases tables primary keys and referential integrity","11, understanding the importance of non-functional requirements introducing software application security guest lecture","12, course review final exam guidelines","comp9321","comp3900","comp9321\ncomp3900","profile settings logout","profile","settings","logout","profile settings logout\nprofile\nsettings\nlogout","profile","settings","logout","profile\nsettings\nlogout","home","course outline","forums","timetable","consultations","github","groups","staff","aarthi natarajan lecturer","isaac carr course admin","anna azzam course admin","i su park course admin","robert clifton-everest course admin","xiaocong chen tutor","richard lau lab assistant","michael tran tutor","ian thorvaldson lab assistant","matthew perry tutor","vivian dang tutor","george mountakis tutor","hussein debel tutor","kongzhang hao tutor","antranik labajian lab assistant","rudra saha lab assistant","sidney pham lab assistant","samuel smyth tutor","saer debel tutor","activities","course work","lectures","labs","quiz","assignments","home\ncourse outline\nforums\ntimetable\nconsultations\ngithub\ngroups\nstaff\naarthi natarajan lecturer\nisaac carr course admin\nanna azzam course admin\ni su park course admin\nrobert clifton-everest course admin\nxiaocong chen tutor\nrichard lau lab assistant\nmichael tran tutor\nian thorvaldson lab assistant\nmatthew perry tutor\nvivian dang tutor\ngeorge mountakis tutor\nhussein debel tutor\nkongzhang hao tutor\nantranik labajian lab assistant\nrudra saha lab assistant\nsidney pham lab assistant\nsamuel smyth tutor\nsaer debel tutor\nactivities\ncourse work\nlectures\nlabs\nquiz\nassignments","aarthi natarajan lecturer","isaac carr course admin","anna azzam course admin","i su park course admin","robert clifton-everest course admin","xiaocong chen tutor","richard lau lab assistant","michael tran tutor","ian thorvaldson lab assistant","matthew perry tutor","vivian dang tutor","george mountakis tutor","hussein debel tutor","kongzhang hao tutor","antranik labajian lab assistant","rudra saha lab assistant","sidney pham lab assistant","samuel smyth tutor","saer debel tutor","aarthi natarajan lecturer\nisaac carr course admin\nanna azzam course admin\ni su park course admin\nrobert clifton-everest course admin\nxiaocong chen tutor\nrichard lau lab assistant\nmichael tran tutor\nian thorvaldson lab assistant\nmatthew perry tutor\nvivian dang tutor\ngeorge mountakis tutor\nhussein debel tutor\nkongzhang hao tutor\nantranik labajian lab assistant\nrudra saha lab assistant\nsidney pham lab assistant\nsamuel smyth tutor\nsaer debel tutor","lectures","labs","quiz","assignments","lectures\nlabs\nquiz\nassignments","course details","course summary","assumed knowledge","student learning outcomes","teaching strategies","teaching rationale","student conduct","assessment","course schedule","resources for students","course evaluation and development","course details\ncourse summary\nassumed knowledge\nstudent learning outcomes\nteaching strategies\nteaching rationale\nstudent conduct\nassessment\ncourse schedule\nresources for students\ncourse evaluation and development","basic elements of software engineering - derived from the life-cycle of a software system including requirements elicitation analysis and specification design construction verification and validation deployment","software engineering methodologies processes tools and techniques","agile software collaboration and communication practices","web-based system architecture and development practices on web platforms","basic elements of software engineering - derived from the life-cycle of a software system including requirements elicitation analysis and specification design construction verification and validation deployment\nsoftware engineering methodologies processes tools and techniques\nagile software collaboration and communication practices\nweb-based system architecture and development practices on web platforms","ability to write simple programs in a programming language e.g. c and are familiar with loop structures defining and invoking functions and returning results","exposure to a moderate-sized team-based project and some testing/debugging ideas","ability to write simple programs in a programming language e.g. c and are familiar with loop structures defining and invoking functions and returning results\nexposure to a moderate-sized team-based project and some testing/debugging ideas","lectures","tutorials and lab sessions","assignments .. will be in the form of both individual assignment a team-based project and online quizzes","lectures\ntutorials and lab sessions\nassignments .. will be in the form of both individual assignment a team-based project and online quizzes","upload your completed solution to github","demonstrate your work to your tutor in the lab class in the week after it is due or submit online through give by the due-date if specified . for pair-programming sessions you should demonstrate as a pair to your tutor during the lab . pair-programming exercises cannot be demonstrated by only one student each pair member must take turns .","upload your completed solution to github\ndemonstrate your work to your tutor in the lab class in the week after it is due or submit online through give by the due-date if specified . for pair-programming sessions you should demonstrate as a pair to your tutor during the lab . pair-programming exercises cannot be demonstrated by only one student each pair member must take turns .","plagiarism and academic integrity","unsw plagiarism procedure","plagiarism and academic integrity\nunsw plagiarism procedure","unsw's policy regarding academic honesty and plagiarism","unsw's policy regarding academic honesty and plagiarism","student code policy","student misconduct procedure","plagiarism policy statement","plagiarism procedure","student code policy\nstudent misconduct procedure\nplagiarism policy statement\nplagiarism procedure","essential advice for cse students","essential advice for cse students","for a practical lab session you may be granted an extension","for the final exam you may be offered a supplementary exam","for a practical lab session you may be granted an extension\nfor the final exam you may be offered a supplementary exam","they cannot attend the final exam due to illness or misadventure","their final_mark is in the range 47 finalmark 50 and exam_mark 24/50. the maximum mark that a student who has failed the final exam and been granted a supplementary exam is 50.","they cannot attend the final exam due to illness or misadventure\ntheir final_mark is in the range 47 finalmark 50 and exam_mark 24/50. the maximum mark that a student who has failed the final exam and been granted a supplementary exam is 50.","software engineerings by ivan marsic rutgers the state university of new jersey","agile software development principles patterns and practice by robert c martin pearson","software engineerings by ivan marsic rutgers the state university of new jersey\nagile software development principles patterns and practice by robert c martin pearson","toggle menu","this course provides an introduction to software engineering principles software life-cycle concepts software development methodologies conceptual modeling and how these activities relate to software development. the students are exposed to agile software practices team collaboration and effective communication through implementing a group project based on agile software methodologies that requires them to analyse design build and deploy a web-based application. this course is typically taken in the semester after completing comp 1511 but could be delayed and taken later. it provides essential background for the teamwork and project management required in many later courses.","the goal of this course is to expose the students to","we assume that students have taken a first programming course which has included","these are assumed to have been acquired in comp 1511.","after completing this course students will be able to","this course uses the standard set of practice-focused teaching strategies employed by most cse foundational courses","this course aims to provide the students with a strong foundation in the fundamental principles and practices of software engineering that will prepare them for the advanced software engineering workshops. as such a broad range of key software engineering topics will be taught and reinforced through an individual assignment and a group project that will enable students to apply the theoretical concepts acquired to solve a practical software engineering problem. an agile software delivery style has been chosen for the implementation of the group project to make students familiar with modern agile development methodologies.","lectures will be used to present the theory and practice of the techniques in this course. although the lectures will primarily focus on the key concepts of software engineering some lectures will also include practical demonstrations of various key technologies required for the implementation of the group project. lecture notes will be available on the course web page.","each tutorial_lab_session will comprise a 1 hour tutorial followed by a 2 hour practical lab session. these sessions commence from week 1 .","tutorials will serve two purposes 1 clarify ideas from lectures and work through exercises based on the lecture material 2 provide practical demonstrations in the tools and languages that students would need to learn to implement their group project. you should make sure that you use them effectively by examining in advance the material to be covered in each week's tutorial by asking questions by offering suggestions and by generally participating. the tutorial questions will be posted on the web in the week before each tutorial.","following the tutorial class each week there will be a two-hour laboratory class . the nature of the activities carried out in the lab sessions will vary each week. lab sessions will comprise design and a variety of small practical exercises involving the tools and frameworks introduced during the lectures. these exercises will be released in the week preceding the lab class. completed solutions source-code design artifacts etc to each week's lab exercise must be uploaded to github by the expected due-date. your tutor will not award any marks for the lab exercise if the completed solution is not uploaded to github. in addition some lab exercises may require submission through the give submission system. details of due-date for the lab exercise and submission details will be outlined in each week's lab specification.","most weeks the lab exercises will involve tasks that are to be completed individually. some lab sessions may be done in pairs where you and partner will be pair programming . pair programming is an activity in agile software development activity where one person is coding and the other person reviews if the software delivers the required goals. a pair-programming session will typically involve multiple exercises to enable you and your partner to swap the roles of the coder and reviewer . you and you partner should discuss the exercises before going to the lab to maximise the usefulness of the class and decide on the role you will be taking.","summary to obtain any lab marks for the week x lab you must do 2 things","you cannot obtain marks by e-mailing lab work to tutors. your tutor will provide feedback during a lab session on your approach to the problem and on the style of your solution. all labs must normally be demonstrated or submitted by the due-date. your tutor may grant you an extension on the lab exercise if you have been unable to complete the lab exercise due to illness or unavoidable circumstances e.g jury duty","periodically the lab sessions will also be used to schedule demonstrations of your ongoing group project. as the implementation of the group project will be based on an agile software development methodology you will required to demonstrate as a team progress of your project in iterations. no excuses will be accepted unless unavoidable circumstances for some members of the team not being present for the iteration demo.","as this course is has a significant practical component laboratory classes are important to help you acquire the necessary skills in the relevant tools and frameworks that will be used in the implementation of the group project and also prepare you for the final exam. if you do not put a good amount of effort into the lab classes you risk failing the group project and the final exam.","the practical lab sessions will contribute to 12 of your overall course mark. the mark for iteration demonstration of the group project will go towards the mark allocated for your group project.","use of github will be strongly enforced in this course as using github as the medium of team collaboration and source control is a key learning outcome that will be applied by students in several following courses through their degree.","there will be one assignment a design-based to be completed individually which will be released in week 3 and will be due in week 4. this assignment will constitute 5 of the overall course mark.","there will one main group project which will run through the rest of the teaching period and contributes to 30 of the overall course mark. the specification of the group project will be released in week 5. you are required to form groups of 3 no more than 3 for the group project.","the group project will be implemented using an agile software delivery mode. as such your team will be required to build and deliver the project in iterations. each iteration will deliver a part of the requirements of the project and will encompass all the sdlc activities namely analysis design coding and testing. at the end of the iteration you as a team will demonstrate to your lab class the functionality implemented during that iteration cycle. changes to project requirements are a natural and unavoidable part of any software project life-cycle. hence students will need to bear in mind that project requirements may be subject to change and enhancements to functionalities may be made at the end of each iteration. you will need to carefully design the solution for your current iteration such that the solution is extensible to accommodate these changes. the lectures will guide you through good design principles to enable you to build modular extensible solutions.","each iteration must be demonstrated on the scheduled date. late demonstrations will not be accepted. a mark will be awarded at the end of each iteration which will go towards the overall mark for the group project. the final demo of the group project will be conducted in week 13.","tutors will continually monitor the github repositories to see the team's progress and individual member's contribution to the group project.","periodically online quizzes will be released and students will have the opportunity to complete the quiz at their own pace by the specified due-date. the quiz questions will be similar in style to the multiple-choice questions that students will be asked in the final exam and will test the content covered in the lectures in the previous weeks. quizzes will contribute to 3 of the overall course mark.","there will be a centrally timetabled final exam which will in your unsw exam timetable. the exam will contain a mixture of multiple choice questions theory and design questions and programming exercises. more specific details of the exam will be provided through the course.","there is a hurdle requirement on the final exam. if you do not score at least 45 on the exam you cannot pass this course. if your overall course score exceeds 50 despite scoring very poorly 40 on the exam the hurdle will be enforced via a grade of uf. of course if your overall course score is less than 50 then your grade will be fl.","if you cannot attend the final exam because of illness or misadventure then you must submit a special consideration request with documentation through myunsw within 48 hours of the exam. if your request is reasonable then you will be awarded a supplementary exam. if your overall course mark is between 47 and 50 then you will also be awarded a supplementary exam however the maximum mark awarded following a supplementary exam is 50 applies only to students who have already failed the final exam and have been granted a supplementary exam","the student code of conduct information policy sets out what the university expects from students as members of the unsw community. as well as the learning teaching and research environment the university aims to provide an environment that enables students to achieve their full potential and to provide an experience consistent with the university's values and guiding principles. a condition of enrolment is that students inform themselves of the university's rules and policies affecting them and conduct themselves accordingly.","in particular students have the responsibility to observe standards of equity and respect in dealing with every member of the university community. this applies to all activities on unsw premises and all external activities related to study and research. this includes behaviour in person as well as behaviour on social media for example facebook groups set up for the purpose of discussing unsw courses or course work. behaviour that is considered in breach of the student code policy as discriminatory sexually inappropriate bullying harassing invading another's privacy or causing any person to fear for their personal safety is serious misconduct and can lead to severe penalties including suspension or exclusion from unsw.","if you have any concerns you may raise them with your lecturer or approach the school ethics officer grievance officer or one of the student representatives.","plagiarism is defined as using the words or ideas of others and presenting them as your own. unsw and cse treat plagiarism as academic misconduct which means that it carries penalties as severe as being excluded from further study at unsw. there are several on-line sources to help you understand what plagiarism is and how it is dealt with at unsw","make sure that you read and understand these. ignorance is not accepted as an excuse for plagiarism. in particular you are also responsible that your assignment files are not accessible by anyone but you by setting the correct permissions in your cse directory and code repository if using. note also that plagiarism includes paying or asking another person to do a piece of work for you and then submitting it as your own work.","unsw has an ongoing commitment to fostering a culture of learning informed by academic integrity. all unsw staff and students have a responsibility to adhere to this principle of academic integrity. plagiarism undermines academic integrity and is not tolerated at unsw. plagiarism at unsw is defined as using the words or ideas of others and passing them off as your own.","if you haven't done so yet please take the time to read the full text of","the pages below describe the policies and procedures in more detail","you should also read the following page which describes your rights and responsibilities in the cse context","if your work in this course is affected by unforeseen adverse circumstances you should apply for special consideration through myunsw including documentation on how you have been affected. if your request is reasonable and your work has clearly been impacted then","note the use of the word may . none of the above is guaranteed. it depends on you making a convincing case that the circumstances have clearly impacted your ability to work.","if you are registered with disability services please forward your documentation to aarthi natarajan within the first two weeks of semester.","lab marks vary each week. your total lab mark is computed by summing all of your lab marks and mapping into a mark out of 12.","total marks for the group project will be the sum of the marks obtained at each iteration demo and the final demonstration.","your final mark for this course will be computed using the above assessments as follows","students are eligible for a supplementary exam if and only if","a supplementary exam will not be awarded for any other reason.","the following is a tentative schedule of when course topics will be covered. the structure of the content and the order in which they are presented will differ from the previous semester and may be adjusted to align with the unsw 3 program next year.","there is no single text book that covers all of the material in this course at the right level of detail and using the same technology base as we are. the lecture notes should provide sufficient detail to introduce topics and you will then study them in further depth in the tutorials labs and group project.","there are also many online resources available and we will provide links to the most useful ones. some are listed below. if you find others please post links in the comments section on the course outline page.","some suggestions for books that cover at least some of the topics in this course","this course is evaluated each session using the myexperience system. however you are couraged to provide feedback during the semester so that we can address the problems asap. in the previous offering of this courses students have noted that the labs being due in the same week were proving to be difficult particularly for the students having a tut/lab early through the week. this has been noted and we will ensure that students are given adequate time to complete their labs each week. most lab exercises will now be due on the sunday of the week they are released but this may vary depending on the nature of the task.","resource created wednesday 18 july 2018 09 26 57 pm last modified saturday 18 august 2018 10 53 41 am.","back to top","develop problem-solving skills to solve real-world software engineering problems analyse the problem domain design and develop a solution to the problem","learn to work effectively as part of a team by managing your project planning and allocation of responsibilities among the members of your team","gain experience in collaborating through the use of a source control","apply appropriate design practices and methodologies in the development of their solution","develop problem-solving skills to solve real-world software engineering problems analyse the problem domain design and develop a solution to the problem\nlearn to work effectively as part of a team by managing your project planning and allocation of responsibilities among the members of your team\ngain experience in collaborating through the use of a source control\napply appropriate design practices and methodologies in the development of their solution","milestone 1 11 59 pm sunday 2nd september week 6 feedback week 6 lab","milestone 2 09 59am monday 17th september week 9 feedback week 9 lab","final milestone final milestone 09 59am monday 15th october week 11 demonstration week 12 lab","moodle peer assessment 11 55pm sunday 21st october","milestone 1 11 59 pm sunday 2nd september week 6 feedback week 6 lab\nmilestone 2 09 59am monday 17th september week 9 feedback week 9 lab\nfinal milestone final milestone 09 59am monday 15th october week 11 demonstration week 12 lab\nmoodle peer assessment 11 55pm sunday 21st october","search for a particular health-care centre by their name e.g. garners medical centre","search for health-care centres by suburb e.g. kensington","search for a particular type of service e.g. gp e.g. a search for a gp service will list all the gps currently registered on the system .","search for health-care providers by their name e.g. jackson","search for a particular health-care centre by their name e.g. garners medical centre\nsearch for health-care centres by suburb e.g. kensington\nsearch for a particular type of service e.g. gp e.g. a search for a gp service will list all the gps currently registered on the system .\nsearch for health-care providers by their name e.g. jackson","a user-friendly widget that lets the patient select the time slots for the appointment. every day is partitioned into 48 equally-sized time slots each of which are 30 minutes long in length. the patient can select available time-slots e.g 08 00-08 30","a section for the patient to optionally write a brief reason of visit e.g. i want to take a blood test .","a user-friendly widget that lets the patient select the time slots for the appointment. every day is partitioned into 48 equally-sized time slots each of which are 30 minutes long in length. the patient can select available time-slots e.g 08 00-08 30\na section for the patient to optionally write a brief reason of visit e.g. i want to take a blood test .","record notes of the patient s visit","view the past history of the patient i.e notes taken at the previous visit .","record any medication prescribed to the patient","record notes of the patient s visit\nview the past history of the patient i.e notes taken at the previous visit .\nrecord any medication prescribed to the patient","go to https //cgi.cse.unsw.edu.au/ cs1531/github/run.cgi/login and sign in","click on the group work button. this will show you a form that you must fill out","select your tutorial from the left drop-down menu and think of a team name do not use any emojis or similar special characters","submit the form.","follow the link in the notification to add your other team members. this will create a team within the unsw-cs1531 github organisation","go to https //cgi.cse.unsw.edu.au/ cs1531/github/run.cgi/login and sign in\nclick on the group work button. this will show you a form that you must fill out\nselect your tutorial from the left drop-down menu and think of a team name do not use any emojis or similar special characters\nsubmit the form.\nfollow the link in the notification to add your other team members. this will create a team within the unsw-cs1531 github organisation","go to https //cgi.cse.unsw.edu.au/ cs1531/github/run.cgi/login and sign in","click on the group project button.","select your tutorial group on the left drop-down menu and your team on the right drop-down menu","click on import","go to https //cgi.cse.unsw.edu.au/ cs1531/github/run.cgi/login and sign in\nclick on the group project button.\nselect your tutorial group on the left drop-down menu and your team on the right drop-down menu\nclick on import","patient.csv - login credentials of patients","provider.csv - login credentials of health-care providers","health_centres.csv - list of health centres on the hams system","provider_health_centres.csv - lists the health-centres that a provider works for","patient.csv - login credentials of patients\nprovider.csv - login credentials of health-care providers\nhealth_centres.csv - list of health centres on the hams system\nprovider_health_centres.csv - lists the health-centres that a provider works for","keeping mind that an agile software development style has been chosen for this project your team will be required to build and deliver the project in iterations. each iteration will deliver a part of the requirements of the project during which the team members are expected to carry out all the sdlc activities namely analysis design coding and testing. at the end of the iteration you as a team will demonstrate to your lab class the functionality implemented during that iteration cycle. your team must bear in mind that project requirements may be subject to change and enhancements to functionalities may be made at the end of the iteration. you will need to carefully design the solution for your current iteration such that the solution is extensible to accommodate these changes. deliverables for each iteration will be outlined at the start of each iteration cycle.","for this iteration no sophisticated authentication is required to be implemented. when the url of the ham system is specified e.g. http //localhost 8080/hams this should launch a login page that prompts the user to enter their email and password","for this iteration any kind of persistence mechanism may be used e.g. python s pickle","this project must be designed using object-oriented design principles and implemented using python/flask/jinja2. it is recommended that students build their front-end using html and css only. if students choose to use other css frameworks e.g. material css bootstrap etc. to build the ui for the application then it must be kindly noted that support will be offered by course staff only on the core technology stack namely html css python flask and jinja2.","to implement authentication we strongly recommend that the flask login extension is used.","all necessary artifacts for this project e.g. csv file containing the emails and passwords will be available to you through your repository when you import the project step b above","what has been provided to you is a problem statement a set of high-level requirements from the customer. your team must analyse the problem statement and go through a process of eliciting more formal requirements to develop the final set of user-stories and acceptance tests e.g. one of the requirements in the specification states clicking on a particular gp should provide more details about the provider. what details need to be displayed has not been elaborated. this must be elicited as part of your requirements analysis.","the model solution demonstrated in the lectures was only a guide to demonstrate one possible way of implementing the customer s requirements. you are required to design your solution and present in week 12.","at the end of each deliverable weeks 6 9 12 tutors will check the team s github repositories to ensure that all members of the team have contributed equally to the project and appropriate branches are created by each team member.","keeping mind that an agile software development style has been chosen for this project your team will be required to build and deliver the project in iterations. each iteration will deliver a part of the requirements of the project during which the team members are expected to carry out all the sdlc activities namely analysis design coding and testing. at the end of the iteration you as a team will demonstrate to your lab class the functionality implemented during that iteration cycle. your team must bear in mind that project requirements may be subject to change and enhancements to functionalities may be made at the end of the iteration. you will need to carefully design the solution for your current iteration such that the solution is extensible to accommodate these changes. deliverables for each iteration will be outlined at the start of each iteration cycle.\nfor this iteration no sophisticated authentication is required to be implemented. when the url of the ham system is specified e.g. http //localhost 8080/hams this should launch a login page that prompts the user to enter their email and password\nfor this iteration any kind of persistence mechanism may be used e.g. python s pickle\nthis project must be designed using object-oriented design principles and implemented using python/flask/jinja2. it is recommended that students build their front-end using html and css only. if students choose to use other css frameworks e.g. material css bootstrap etc. to build the ui for the application then it must be kindly noted that support will be offered by course staff only on the core technology stack namely html css python flask and jinja2.\nto implement authentication we strongly recommend that the flask login extension is used.\nall necessary artifacts for this project e.g. csv file containing the emails and passwords will be available to you through your repository when you import the project step b above\nwhat has been provided to you is a problem statement a set of high-level requirements from the customer. your team must analyse the problem statement and go through a process of eliciting more formal requirements to develop the final set of user-stories and acceptance tests e.g. one of the requirements in the specification states clicking on a particular gp should provide more details about the provider. what details need to be displayed has not been elaborated. this must be elicited as part of your requirements analysis.\nthe model solution demonstrated in the lectures was only a guide to demonstrate one possible way of implementing the customer s requirements. you are required to design your solution and present in week 12.\nat the end of each deliverable weeks 6 9 12 tutors will check the team s github repositories to ensure that all members of the team have contributed equally to the project and appropriate branches are created by each team member.","date of regular stand-up meetings","summary of decisions made in stand-up meetings requirements elicited and key design decisions hand-written user-stories crc cards etc.","responsibilities allocated to each team member and tasks to be accomplished for the next meeting","progress of tasks using a velocity chart a hand-drawing will suffice no sophisticated tool needed summary of decisions made in stand-up meetings","milestones achieved","reflection if assigned tasks decided from last meeting have been achieved","any obstacles","date of regular stand-up meetings\nsummary of decisions made in stand-up meetings requirements elicited and key design decisions hand-written user-stories crc cards etc.\nresponsibilities allocated to each team member and tasks to be accomplished for the next meeting\nprogress of tasks using a velocity chart a hand-drawing will suffice no sophisticated tool needed summary of decisions made in stand-up meetings\nmilestones achieved\nreflection if assigned tasks decided from last meeting have been achieved\nany obstacles","week 6 lab session user stories submission 15","week 9 lab session demonstration of iteration 1 25","week 12 lab session final group project demonstration 60","week 6 lab session user stories submission 15\nweek 9 lab session demonstration of iteration 1 25\nweek 12 lab session final group project demonstration 60","high level epic stories from the problem statement","each epic story broken into user stories each user-story must define a unique story identifier e.g. uc1 a short description of the feature based on role-goal-benefit template refer to the rgb model described in the lectures an estimate for the implementation of the user story in user story points e.g. uc1 2 user story points where each point 2.5 hours priority of implementation","a unique story identifier e.g. uc1","a short description of the feature based on role-goal-benefit template refer to the rgb model described in the lectures","an estimate for the implementation of the user story in user story points e.g. uc1 2 user story points where each point 2.5 hours","priority of implementation","acceptance criteria for each user story refer to the 3 c s model described in the lectures","log book","high level epic stories from the problem statement\neach epic story broken into user stories each user-story must define a unique story identifier e.g. uc1 a short description of the feature based on role-goal-benefit template refer to the rgb model described in the lectures an estimate for the implementation of the user story in user story points e.g. uc1 2 user story points where each point 2.5 hours priority of implementation\na unique story identifier e.g. uc1\na short description of the feature based on role-goal-benefit template refer to the rgb model described in the lectures\nan estimate for the implementation of the user story in user story points e.g. uc1 2 user story points where each point 2.5 hours\npriority of implementation\nacceptance criteria for each user story refer to the 3 c s model described in the lectures\nlog book","a unique story identifier e.g. uc1","a short description of the feature based on role-goal-benefit template refer to the rgb model described in the lectures","an estimate for the implementation of the user story in user story points e.g. uc1 2 user story points where each point 2.5 hours","priority of implementation","a unique story identifier e.g. uc1\na short description of the feature based on role-goal-benefit template refer to the rgb model described in the lectures\nan estimate for the implementation of the user story in user story points e.g. uc1 2 user story points where each point 2.5 hours\npriority of implementation","the code you wish to submit for this milestone should be in a branch named release. you should not push to this branch after the deadline. your tutor will check to make sure you have not done this. you may continue to push to other branches as you work on your project between the deadline and when you demonstrate to your tutor.","uml class diagram that clearly shows all classes with attributes methods and right access modifiers relationships inheritance association aggregation and composition . cardinality must also be indicated","all classes with attributes methods and right access modifiers","relationships inheritance association aggregation and composition .","cardinality must also be indicated","your uml class diagram should be a pdf file at the root of your repository named design.pdf.","during this lab session you will demonstrate the first iteration of your working software. for this first iteration the customer has requested that they be able to see an instance of working software that meets some of the requirements outlined in the problem statement as outlined below","allow a pre-registered user patient or health-provider to log into the system","enable a patient to do search as described above book an appointment with a particular health-care provider and view their current appointments","view profile pages of health-care centres and health-care providers","health-care providers should be able to view their current appointments.","the code you wish to submit for this milestone should be in a branch named release. you should not push to this branch after the deadline. your tutor will check to make sure you have not done this. you may continue to push to other branches as you work on your project between the deadline and when you demonstrate to your tutor.\numl class diagram that clearly shows all classes with attributes methods and right access modifiers relationships inheritance association aggregation and composition . cardinality must also be indicated\nall classes with attributes methods and right access modifiers\nrelationships inheritance association aggregation and composition .\ncardinality must also be indicated\nyour uml class diagram should be a pdf file at the root of your repository named design.pdf.\nduring this lab session you will demonstrate the first iteration of your working software. for this first iteration the customer has requested that they be able to see an instance of working software that meets some of the requirements outlined in the problem statement as outlined below\nallow a pre-registered user patient or health-provider to log into the system\nenable a patient to do search as described above book an appointment with a particular health-care provider and view their current appointments\nview profile pages of health-care centres and health-care providers\nhealth-care providers should be able to view their current appointments.","all classes with attributes methods and right access modifiers","relationships inheritance association aggregation and composition .","cardinality must also be indicated","all classes with attributes methods and right access modifiers\nrelationships inheritance association aggregation and composition .\ncardinality must also be indicated","the complete working code for your application","an up-to-date uml class diagram","the complete working code for your application\nan up-to-date uml class diagram","the aim of this group project is to enable students to consolidate their knowledge in the fundamental principles of software engineering and apply the theoretical concepts to a hands-on software engineering problem. the project will enable students to","develop problem-solving skills to solve real-world software engineering problems analyse the problem domain design and develop a solution to the problem","learn to work effectively as part of a team by managing your project planning and allocation of responsibilities among the members of your team","gain experience in collaborating through the use of a source control","apply appropriate design practices and methodologies in the development of their solution","milestone 1 11 59 pm sunday 2nd september week 6 feedback week 6 lab","milestone 2 09 59am monday 17th september week 9 feedback week 9 lab","final milestone final milestone 09 59am monday 15th october week 11 demonstration week 12 lab","moodle peer assessment 11 55pm sunday 21st october","your consultancy firm has been called in to australia s largest healthcare enterprise medisoft for a new software project. the client is interested in developing an online healthcare appointment management system hams that would streamline the process of patients booking healthcare appointments and general practitioners sending referrals to specialists. the client feels that such a system would help to market and increase the likelihood of attracting more customers to the health centres affiliated with medisoft.","health-care centres","the e-health system stores all health-care centres which can be a hospital or a medical centre that are affiliated with medisoft and health-care providers working for these health-care centres. a health centre may employ one or more health providers and consequently the set of services provided by a health centre depends on the group of providers working for that centre.","user types","the users of the proposed system can be grouped broadly into two categories namely patients and health-care providers. every user registered on the system has their full name email address and their phone number stored in the system. patients additionally have their medicare card number recorded as well while health providers have their provider number stored on the system.","health-care providers can be further categorised by their professions that is the type of healthcare service they provide. for example a provider may be classified as a general practitioner gp a pharmacist a physiotherapist or a pathologist. every health provider has exactly one health profession. a health provider may work for one or more health centres. furthermore different health providers may have different workings hours and if a provider is affiliated with multiple centres then the provider will have different working hours associated with each centre. you can assume that these hours do not conflict","every user registered on the e-health system can update their personal information through a profile page. for health-care providers the profile page additionally displays their current rating and the health-centres they are associated with.","patients","searching for a healthcare service to book an appointment","on the proposed system the patients can search for a health provider or a health centre that suits their interest using the search engine provided. the search engine has the following options","search for a particular health-care centre by their name e.g. garners medical centre","search for health-care centres by suburb e.g. kensington","search for a particular type of service e.g. gp e.g. a search for a gp service will list all the gps currently registered on the system .","search for health-care providers by their name e.g. jackson","for any of the four search options the search should not only return the exact matches but near-matches also. for example if there is a health centre called royal randwick hospital then it should be returned as a result of the patient searching for centres by name with the keyword royal rand . each entry of the search result should contain brief details about the centre/provider and a link to the corresponding profile page.","viewing health centre profile","the profile page of a health centre should display details about the centre and its customer rating. furthermore there should be a list of all health providers working for the centre categorised by the type of service they provide. for each provider there should be a link to the provider s profile as well as a button to proceed to booking an appointment with the provider at the centre.","viewing health provider profile","similarly the profile page of a health provider should display details about the health provider including their average rating. furthermore the page should display a list of all affiliated health centres. for each centre there should be a link to the centre s profile as well as a button to proceed to booking an appointment with the provider at the centre.","booking an appointment","once the patient clicks a button to proceed onto booking an appointment they should be presented with a form that consists of the following components.","a user-friendly widget that lets the patient select the time slots for the appointment. every day is partitioned into 48 equally-sized time slots each of which are 30 minutes long in length. the patient can select available time-slots e.g 08 00-08 30","a section for the patient to optionally write a brief reason of visit e.g. i want to take a blood test .","after selecting the time slots the patient can click book to finalise the booking. once the patient has successfully booked the appointment a confirmation is displayed to the user.","provide rating","both health providers and health centres have an average rating that is displayed in the search results and their profiles. in addition to viewing profiles patients should be able to rate any provider or centre registered on the hams. if a patient rates the same provider/centre more than once only the patient s most recent rating should count towards their overall average rating.","viewing appointments history","a patient should be able to view their own appointments history a chronological list of their current appointments with the health providers on hams. each entry on the list should contain links to the profile pages of the corresponding health provider and the corresponding health centre.","health providers","viewing appointments history","similarly health providers should also have access to their own appointments history a chronological list of all current appointments made by patients with the provider. each entry on the list should contain a link to the corresponding patient s profile page. on the patient s profile page the provider should be able to see details about the patient s past history.","viewing patient history","registered health-care providers will also be able to use the e-health system. a health-care provider is able to view all their patient appointments. during consultation with a patient the health-care provider is able to","record notes of the patient s visit","view the past history of the patient i.e notes taken at the previous visit .","record any medication prescribed to the patient","login and authentication","the hams must only be accessible by the pre-registered users whose login credentials will be provided in csv files. hence no registration is required yet. users should be able to log into the system with their email and password. once a user has logged into the system they should be granted access to the rest of the features in system already described above.","for this project you will need to organise yourself into teams of 4 no more than 4 and all the team members must be from the same lab session. you will do this under the guidance of your tutor in the week 4 lab. while they will try to accommodate your preferences for teammates they may have to make adjustments to ensure teams have 4 members.","once your team has been formed one member from the team will need to register it","go to https //cgi.cse.unsw.edu.au/ cs1531/github/run.cgi/login and sign in","click on the group work button. this will show you a form that you must fill out","select your tutorial from the left drop-down menu and think of a team name do not use any emojis or similar special characters","submit the form.","follow the link in the notification to add your other team members. this will create a team within the unsw-cs1531 github organisation","please ensure that your team is registered by end of week 4.","each team will need to create a repository to collaborate on their group project. this can be done as follows","go to https //cgi.cse.unsw.edu.au/ cs1531/github/run.cgi/login and sign in","click on the group project button.","select your tutorial group on the left drop-down menu and your team on the right drop-down menu","click on import","this will create a repository under the team and also load a set of csv files as listed below","patient.csv - login credentials of patients","provider.csv - login credentials of health-care providers","health_centres.csv - list of health centres on the hams system","provider_health_centres.csv - lists the health-centres that a provider works for","keeping mind that an agile software development style has been chosen for this project your team will be required to build and deliver the project in iterations. each iteration will deliver a part of the requirements of the project during which the team members are expected to carry out all the sdlc activities namely analysis design coding and testing. at the end of the iteration you as a team will demonstrate to your lab class the functionality implemented during that iteration cycle. your team must bear in mind that project requirements may be subject to change and enhancements to functionalities may be made at the end of the iteration. you will need to carefully design the solution for your current iteration such that the solution is extensible to accommodate these changes. deliverables for each iteration will be outlined at the start of each iteration cycle.","for this iteration no sophisticated authentication is required to be implemented. when the url of the ham system is specified e.g. http //localhost 8080/hams this should launch a login page that prompts the user to enter their email and password","for this iteration any kind of persistence mechanism may be used e.g. python s pickle","this project must be designed using object-oriented design principles and implemented using python/flask/jinja2. it is recommended that students build their front-end using html and css only. if students choose to use other css frameworks e.g. material css bootstrap etc. to build the ui for the application then it must be kindly noted that support will be offered by course staff only on the core technology stack namely html css python flask and jinja2.","to implement authentication we strongly recommend that the flask login extension is used.","all necessary artifacts for this project e.g. csv file containing the emails and passwords will be available to you through your repository when you import the project step b above","what has been provided to you is a problem statement a set of high-level requirements from the customer. your team must analyse the problem statement and go through a process of eliciting more formal requirements to develop the final set of user-stories and acceptance tests e.g. one of the requirements in the specification states clicking on a particular gp should provide more details about the provider. what details need to be displayed has not been elaborated. this must be elicited as part of your requirements analysis.","the model solution demonstrated in the lectures was only a guide to demonstrate one possible way of implementing the customer s requirements. you are required to design your solution and present in week 12.","at the end of each deliverable weeks 6 9 12 tutors will check the team s github repositories to ensure that all members of the team have contributed equally to the project and appropriate branches are created by each team member.","you are required to maintain a log book through the entire project that records","date of regular stand-up meetings","summary of decisions made in stand-up meetings requirements elicited and key design decisions hand-written user-stories crc cards etc.","responsibilities allocated to each team member and tasks to be accomplished for the next meeting","progress of tasks using a velocity chart a hand-drawing will suffice no sophisticated tool needed summary of decisions made in stand-up meetings","milestones achieved","reflection if assigned tasks decided from last meeting have been achieved","any obstacles","marks will be awarded for the log book","assessment","you will be assessed on your ability to apply what you have learnt in this course as well as your ability to work in a team and produce a significant piece of software. in cases where the client has not been explicit in their requirements you will need to make your own design decisions with your team. it is important that you communicate regularly with your team members as well as document your design to avoid confusion about the choices you have made. you will keep a list of assumptions you have made and submit them as part of your final submission in your log book. you will also be asked to justify these decisions when you demonstrate in week 12.","you are expected to use git appropriately by committing consistently and using feature branches to manage significant changes. it is an important part of this project for you as a team to manage your own time. you need to start early and work consistently do not be overly optimistic about what you can achieve remember you are all doing other courses with other assignments . it is essential for you as a team to monitor your own progress and it is often necessary to revise the plan as you progress.","while it is up to you how to divide the work between you all members must take on the developer role and work consistently throughout the project.","each team member generally receives the same mark but if the moodle peer assessment tool or the logs of your github repository indicate an imbalance in the amount of work done the total mark may be scaled to match actual contribution.","the planned dates for the different stages of the project deliverables are outlined below.","week 6 lab session user stories submission 15","week 9 lab session demonstration of iteration 1 25","week 12 lab session final group project demonstration 60","prior to your lab session your team must schedule collaboration sessions to have initial high-level visioning discussions during which you will brainstorm to identify epic stories from the customer requirements and their key features break-down high-level user stories to smaller user-stories and detail each user story to identify key conditions of satisfaction error-conditions etc. based on the requirements analysis produce a domain model as a uml class diagram. your team is expected to produce","high level epic stories from the problem statement","each epic story broken into user stories each user-story must define","a unique story identifier e.g. uc1","a short description of the feature based on role-goal-benefit template refer to the rgb model described in the lectures","an estimate for the implementation of the user story in user story points e.g. uc1 2 user story points where each point 2.5 hours","priority of implementation","acceptance criteria for each user story refer to the 3 c s model described in the lectures","log book","please note the above artifacts will need to be submitted using give by week 6 sunday 11 59 pm. the submission guidelines for week 6 deliverables will be outlined over the next week.","week 9 lab session demonstration of iteration 1","the code you wish to submit for this milestone should be in a branch named release. you should not push to this branch after the deadline. your tutor will check to make sure you have not done this. you may continue to push to other branches as you work on your project between the deadline and when you demonstrate to your tutor.","uml class diagram that clearly shows","your uml class diagram should be a pdf file at the root of your repository named design.pdf.","during this lab session you will demonstrate the first iteration of your working software. for this first iteration the customer has requested that they be able to see an instance of working software that meets some of the requirements outlined in the problem statement as outlined below","allow a pre-registered user patient or health-provider to log into the system","enable a patient to do search as described above book an appointment with a particular health-care provider and view their current appointments","view profile pages of health-care centres and health-care providers","health-care providers should be able to view their current appointments.","the clients have agreed that other functionality related to recording of medication prescribed to patients recording patient history at each visit i.e recording notes about the visit maintaining history of past visits i.e. being able to view past notes are lower priority and can be viewed in the next iteration. the task for your team is to select the necessary user-stories from the backlog of user-stories developed in week 6 and implement them to meet the customer s goals. the additional document deliverables required for this iteration will be outlined later.","week 12 lab session final group project presentation","whatever you have in the release branch of your repository at the time of the deadline for this milestone will be considered your final submission. include the following deliverables","the complete working code for your application","an up-to-date uml class diagram","you will demonstrate your application to your tut group in week 12. you may be asked to justify your design decisions and explain how you worked as a team.","to ensure fair allocation of marks you are required to complete a form on moodle where you specify how much each team member contributed to the project and any comments you have about them. information on how you can access this form will be released closer to week 12.","linux","git generally comes pre-installed with linux. you can find out by typing","git status","if you get a fatal not a git repository or any of the parent directories .git you have git.","if you get something like bash git command not recognized then go to","https //git-scm.com/download/linux","and follow the relevant instructions to set up git.","mac","install homebrew first and then type","brew install git","open the terminal and type in with the quotes","git config --global user.name your name git config --global user.email email example.com","if you do not have an ssh key no such file or directory will pop up. if so type in","ssh-keygen -t rsa -c your_email example.com and accept the defaults by pressing enter.","next type in","cat /.ssh/id_rsa.pub","you will see a very large hash key. that is your ssh key and one way git can verify that it is indeed you.","go to your git account settings ssh and gpg keys new ssh key","paste that ssh key and give it a title that tells you which machine it is for example cse machine personal-mac etc.","git knows what you did last summer.","git as you may have heard is a version control system.","in the company that you work for the software engineers and that includes yourself have worked hard to get a minimum viable product running and it was a huge success. after tasting success in version 1.0 of your product you now want to add more features to it when version 2.0 comes out. and thus you delve into your mugs of coffee and work even harder to add the features. version 2.0 is now ready and you release it.","as it turns out version 2.0 has some serious bugs in it that somehow passed your tests and is now running in production. you guys now need to roll back to version 1.0 which is a stable version and is yet to produce any serious bugs.","such a scenario is quite common in any place where software is used and thanks to git we can roll back to a stable version of our choice and keep working on fixing the bugs before releasing it.","create a new repository in your remote git account the online github/bitbucket account . for now let s go to github.com and login. then from your dashboard locate the button new repository . fill in the name and description fields and create the repository as private.","initialize local repository","initialize a git repository in your local machine. first create a folder for your new local repository.","mkdir proj_name cd proj_name","now type the following command to initialise an empty repository.","git init","running the command should display the following message","initialized empty git repository in /home/path/to/project/.git/","if you run ls -a you should be able to see a new .git folder in the current project directory. git stores all the tracking information in that folder.","let s add a readme file so we have something to work with. open a readme file and write starter readme file","type git log to check your commits. you should be able to see your last commit. as you add features in your project or fix bugs add and commit your changes. this will allow you to go back to your working code if your current code doesn t work as intended.","initialize remote repository and add to local","if you want to work on a group project you ll need to collaborate with your friends. this is where centralised repository hosting services like github or bitbucket come into play. they provide version control and source code management based on git and add extra features to assist the development cycle. while git is a command line tool these separate online services provide a web-based graphical interface and several collaboration features such as task management tools. in this course we will be using github.","before you start working on github make sure you have everything setup first. there are instructions for getting started at the top of this week s lab.","now create a new repository in your remote git account github account in this case so that you can link it with your local repository. to do this go to github.com and login. then from your dashboard locate the button new repository . fill in the name and description fields and create the repository as private. this online github repository will now be referred to as your remote project.","in your remote project you will see a button clone or download . click on it click on use ssh .","copy that url. it will typically look like this","git github.com your_id/repository_name.git","git remote add origin remote_repository_url git remote -v to verify","now let s push the readme file that we added before to github so that everyone can see it. git push -u origin master","and you have made your first push. now let us add some code to it so that we can see the actual functionalities of git.","cloning","cloning an existing repository is fairly straightforward. go to the website and find the green clone or download button. click on it and copy the clone url which looks likehttps //github.com/username/repository.git","after that open up a terminal and type","git clone","the repository will be downloaded into your local machine.","committing and adding","let s add a very simple minimal hello world application. for this create a file named hello_word.py and inside write","print hello world","save the file and do the following","git add . stage the directory","git commit -m added a minimal application add a commit message git push push to remote","if you look into your remote git account you should be able to see the new file added","branching out","if you are to collaborate on a project or you want to add a new feature but don t want to mess up the old features you would want to create a new branch and make your changes.","to create a branch type in","git checkout -b new-branch-name","note that the -b flag is needed only when creating a branch. after it is created you can just switch into it by typing in","git checkout new-branch-name","now make some changes to your file. for instance add a comment like a change exclusive to this branch only .","git add . git commit -m added a comment in this branch git push","notice that it will show that everything is up to date even though you had made changes. that is because your new branch exists only locally and not remotely. not yet anyway. so by default git tried to push local master to remote master. in order to tackle that do","git push --set-upstream origin new-branch-name","or","git push -u origin new_branch_name","note that this is only needed when you are pushing for the first time from a branch. after that git push will suffice .","to notice the differences type in","git diff master","at any point to check which branch you are on type in","git branch","to check changes that you are yet to commit type in","git status","merge conflict","a git pull a day keeps the conflicts away.","merge conflicts happen when two people try to push together not necessarily at the same time but after the same pull and they have different code in certain parts of the code then git doesn t know which change to accept so it throws merge conflicts. the larger the project is the harder it is to fix. let us look at an example.","by default all git repositories have the branch master . let us make another branch called dev.","before making the branch dev open a hello-world.py file and put in","print this is a git branch","add commit and push.","then run","git checkout -b dev","this will create a new dev branch and move you to the new branch. if you do git branch now you ll notice that your current branch is dev. while in dev underneath line 1 add the following line","this is branch dev","add commit and push to origin dev.","go back to master by running git checkout master and just as before add the line","this is branch master","add commit and push to origin master.","now type in the following commands","git merge dev","this should bring up a merge conflict message. in order to fix your merge conflicts go to your file and locate the and pick the one that you think is appropriate. you can even keep both if you wish. remember to remove the merge conflict markers when you update the file.","add commit with the message fixed merge conflict from branch dev and push to origin master.","there are several other ways to get merge conflicts.","in order to avoid merge conflicts make sure you don t leave uncommited changes at the end of the day and most importantly at the start of the day do a git pull.","in the rest of the tutorial you ll be familiarizing yourself with python syntax by solving questions that cover most of the basics with your tutor. for every new programming language the first exercise is often writing a hello world program. so in this tutorial the first program you ll write is the hello world program.","write a program to print hello world to standard output.","okay now that we re done printing hello world to standard output we can delve into more interesting things. the next exercise will be a good starting point for you to get acquainted with lists and loops in python. python lists are magical and super easy to use.","write a program to loop through a list of names and print them to standard output.","for this problem you ll need to create a python list append names to the list in the form of strings and iterate through the list to print them.","for a given number find the sum of n n 2 n 3 n n","for this problem you d want to look at python s operator.","write a program that takes n words from a user and outputs a string that contains all the words separated by a space. n here is the number of words the user would like to input.","for this program you ll have to take the value of n from the user then read n words from the user store them in a list and print out a string by joining the words with spaces.","given a base-string and a sub-string find the number of different ways the sub-string appears in the base-string","for example in the base-string aaa the sub-string aa appears twice and in the base-string aa the sub-string aaa appears 0 times."]}