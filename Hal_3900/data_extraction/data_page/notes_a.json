{"grouped":[{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"course introduction"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"comp1521 18s1computer systems fundamentals 2 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"course staff 3 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"comp1521 on the web 4 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"comp1521 on the web 5 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"me 6 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"you 7 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"course goals 8 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"course context 9 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"themes 10 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"detailed topics 11 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"textbook 12 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"textbook 13 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"recommended reference computer systems a programmer s perspective bryant and o halloren covers most topics and quite well but uses a different machine code available in unsw bookroom"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"books vs notes vs slides 14 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"systems and tools 15 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"classes 16 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"classes 17 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"assessments 18 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"assessments 19 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"quizzes 20 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"blogs 21 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"misconduct 22 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"final exam 23 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"course assessment 24 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"supplementary exams 25 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"summary 26 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"computer systems"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"some history 28 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"some history 29 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"some history 30 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"computer systems 31 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"processor 32 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"storage 33 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"storage 34 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"computer system layers 35 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"c program life cycle 36 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"c program life cycle 37 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"history of c compilers 38 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"c revisited"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"what i assume you know 40 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"type definitions 41 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"assignment as expression 42 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"assignment as expression 43 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"ignoring expression results 44 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"ignoring expression results 45 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"fine control 46 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"fine control 47 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"fine function control 48 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"fine program control 49 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"stacks queues priorityqs 50 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"stacks queues priorityqs 51 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"stacks queues priorityqs 52 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack queue priorityq usage 53 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack queue priorityq usage 54 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack queue priorityq usage 55 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack queue priorityq usage 56 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack queue priorityq usage 57 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack queue priorityq usage 58 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack queue priorityq usage 59 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"stack data structure 60 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"example stack client 61 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"queue data structure 62 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"priority queue data structure 63 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"bit manipulation"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"bits in bytes in words 65 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"binary constants 66 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"bitwise and 67 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"bitwise or 68 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"flag bits 69 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"flag bits 70 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"bitwise xor 71 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"bitwise neg 72 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"left shift 73 74"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"right shift 74 74"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"convenor john shepherd"},{"tags":[],"text":"course admin wael alghamdi"},{"tags":[],"text":"tutors louis cheung matthew gibson alexander hinds aydin itil jashank jeremy thomas kilkelly daniel li alex nendick leon nguyen kevin ni ellen oates shanush prema thasarathan minjie shen"},{"tags":[],"text":"lab assistants caspian baska dylan brotherston jason chu jesse colville junjie lei oliver richards harrison scott simon shields james ye michael yoo"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"quizzes polls comments forums forming groups"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"information extraction database systems online learning"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"ug comp 1921 1511 1521 2041 3311 4011"},{"tags":[],"text":"pg comp 9311 9315 gsoe9010"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"deputy head of school education"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"craft beer afl craft beer k drama craft beer nordic noir"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"comp1511 or comp1917 or comp1911 maybe with bridging"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"review strengthen c knowledge"},{"tags":[],"text":"introduce revise core data structures stacks queues"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"gets you thinking like a programmer"},{"tags":[],"text":"solving problems by developing programs"},{"tags":[],"text":"expressing your solution in the c language"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"gets you thinking like a systems programmer"},{"tags":[],"text":"with a deep understanding of run time behaviour"},{"tags":[],"text":"and better able to reason about your c programs"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"processors data representation instruction set assembler programming"},{"tags":[],"text":"data representation instruction set"},{"tags":[],"text":"assembler programming"},{"tags":[],"text":"program execution mapping c to assembler memory layout stack heap code control structures function calls"},{"tags":[],"text":"memory layout stack heap code"},{"tags":[],"text":"control structures function calls"},{"tags":[],"text":"operating system architecture memory cache devices i o interrupts virtual memory processes file systems"},{"tags":[],"text":"memory cache devices i o interrupts"},{"tags":[],"text":"virtual memory processes file systems"},{"tags":[],"text":"concurrency parallelism synchronisation coordination"},{"tags":[],"text":"parallelism synchronisation coordination"},{"tags":[],"text":"network architecture"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"data representation instruction set"},{"tags":[],"text":"assembler programming"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"memory layout stack heap code"},{"tags":[],"text":"control structures function calls"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"memory cache devices i o interrupts"},{"tags":[],"text":"virtual memory processes file systems"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"parallelism synchronisation coordination"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"introduction to computing systems from bits and gates to c and beyond patt and patel"},{"tags":[],"text":"from nand to tetris building a modern computer system from first principles nisan and schocken"},{"tags":[],"text":"comp2121 course web site parameswaran and guo"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"computer systems a programmer s perspective bryant and o halloren"},{"tags":[],"text":"covers most topics and quite well"},{"tags":[],"text":"but uses a different machine code"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"cover some parts of syllabus in great detail"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"cover whole syllabus but not in great detail"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"summarize course notes and add exercises"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"all tools available on the cse lab machines"},{"tags":[],"text":"can use vlab to connect to cse from home"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"4 hours week for 9 weeks a la unsw3"},{"tags":[],"text":"all lectures will be video d echo360 and youtube"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"10 weeks 1 hour tute followed by 2 hour lab"},{"tags":[],"text":"explore lecture material via exercises"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"small ish implementation tasks done in pairs"},{"tags":[],"text":"give skills practice leading on to assignments exam"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"go to a different tute in that week"},{"tags":[],"text":"go to a different lab if you need help"},{"tags":[],"text":"submit lab by next sunday get your tutor to assess"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"submitted before sunday at end of week x"},{"tags":[],"text":"demonstrated to tutor during week x lab or demonstrated at the start of week x 1 lab"},{"tags":[],"text":"aim of demo is to get feedback on design and style"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"ass1 assembly language weeks 3 6 9 marks"},{"tags":[],"text":"ass2 c programming weeks 7 10 11 marks"},{"tags":[],"text":"both assignments are completed individually"},{"tags":[],"text":"can be completed on your own machine but you must test on the cse machines before you submit"},{"tags":[],"text":"but you must test on the cse machines before you submit"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"but you must test on the cse machines before you submit"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"3 4 questions multiple choice format"},{"tags":[],"text":"primarily for review of recent topics"},{"tags":[],"text":"taken in your own time via webcms3"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"write it at least weekly"},{"tags":[],"text":"reflect on and plan your learning"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"you maintain regularly weekly"},{"tags":[],"text":"what you write is interesting"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"mips qtspim c quick reference guides"},{"tags":[],"text":"unix programmers manual man very handy"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"some programming exercises prac"},{"tags":[],"text":"some descriptive analytical questions theory"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"do not attend the final exam"},{"tags":[],"text":"have a documented reason for not attending"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"have examok 47 finalmark 50"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"more confident in your own ability"},{"tags":[],"text":"with an expanded set of tools to draw on"},{"tags":[],"text":"a deeper understanding of run time behaviour"},{"tags":[],"text":"able to view software from systems level perspective"},{"tags":[],"text":"producing better engineered software"},{"tags":[],"text":"ultimately enjoying the programming process more"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"1613 first use of the word computer meaning a person who performs computations"},{"tags":[],"text":"1800 s babbage s mechanical computers analytical engine and difference engine with ada lovelace"},{"tags":[],"text":"1936 zuse s z1 electro mechanical computer first binary programmable computer"},{"tags":[],"text":"1943 eckert mauchley s eniac first fully functional electric digital computer 18000 valves"},{"tags":[],"text":"1949 edsac and manchester mark 1 first generation stored program computers valves"},{"tags":[],"text":"1955 whirlwhind at mit first digital computer with magnetic core ram"},{"tags":[],"text":"1960 digital equipment corporation pdp 1 first mini computer recognisable as modern computer"},{"tags":[],"text":"1971 intel 4004 first microprocessor"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"control arithmetic logic bit operators"},{"tags":[],"text":"relatively small set of simple instructions"},{"tags":[],"text":"small amount of very fast storage registers"},{"tags":[],"text":"small number of control registers e g pc"},{"tags":[],"text":"fast fetch decode execute cycle ns"},{"tags":[],"text":"access to system bus to communicate with other components"},{"tags":[],"text":"all integrated on a single chip"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"very large random addressable array of bytes"},{"tags":[],"text":"can fetch single bytes into cpu registers"},{"tags":[],"text":"can fetch multi byte chunks into cpu e g 4 byte int"},{"tags":[],"text":"typically access time 70 ns size 64 gb"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"very very large block oriented storage"},{"tags":[],"text":"often on spinning disk fetching 512b 4kb per request"},{"tags":[],"text":"typically access time 30 ms size 8 tb"},{"tags":[],"text":"nowadays ssd access time 0 8ms size 1gb"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"well designed readable maintainable"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"efficiently producing correct results"},{"tags":[],"text":"handling error conditions robustly"},{"tags":[],"text":"utlising services of underlying operating system"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"cc original compiler by dennis ricthie 1971"},{"tags":[],"text":"gcc open source compiler by richard stallman et al 1987"},{"tags":[],"text":"gcc 2 0 added c compilation 1992"},{"tags":[],"text":"clang gcc replacement by apple et al 2007"},{"tags":[],"text":"dcc python wrapper on clang by andrew taylor 2012 augments error messages to be more helpful to novices incorporates useful run time checking to help debugging"},{"tags":[],"text":"augments error messages to be more helpful to novices"},{"tags":[],"text":"incorporates useful run time checking to help debugging"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"augments error messages to be more helpful to novices"},{"tags":[],"text":"incorporates useful run time checking to help debugging"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"design an algorithmic solution"},{"tags":[],"text":"describe your solution in c code using variables assignment tests etc if while for break scanf printf functions return prototypes h c arrays files structs pointers malloc free"},{"tags":[],"text":"variables assignment tests etc"},{"tags":[],"text":"if while for break scanf printf"},{"tags":[],"text":"functions return prototypes h c"},{"tags":[],"text":"arrays files structs pointers malloc free"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"variables assignment tests etc"},{"tags":[],"text":"if while for break scanf printf"},{"tags":[],"text":"functions return prototypes h c"},{"tags":[],"text":"arrays files structs pointers malloc free"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"linked structures adts sorting recursion bit operations"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"are typically success failure status"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"extreemly unlikely to occur"},{"tags":[],"text":"not fatal if the failure occurs"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"break exits the innermost enclosing loop"},{"tags":[],"text":"continue goes directly to the next iteration"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"same effect can be achieved using ifs inside loop"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"but used carefully can make code easier to understand"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"a function can contain several returns"},{"tags":[],"text":"each can capture a specific condition to complete function"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"stacks last in first out lists e g used to represent function local variables"},{"tags":[],"text":"e g used to represent function local variables"},{"tags":[],"text":"queues first in first out lists e g used to ensure fair access to a resource"},{"tags":[],"text":"e g used to ensure fair access to a resource"},{"tags":[],"text":"priority queues highest priority out lists e g used to represent weighted lists of processes"},{"tags":[],"text":"e g used to represent weighted lists of processes"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"e g used to represent function local variables"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"e g used to ensure fair access to a resource"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"e g used to represent weighted lists of processes"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"a sequence of items"},{"tags":[],"text":"an operation to insert an item into the sequence"},{"tags":[],"text":"an operation to remove an item from the sequence"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"stack insert adds on top removes from top"},{"tags":[],"text":"queue insert adds at tail removes from head"},{"tags":[],"text":"priorityq inserts in priority order removes from head"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"insert operation called push"},{"tags":[],"text":"remove operation called pop"},{"tags":[],"text":"has a top last item added and a size"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"insert operation called enter or enqueue"},{"tags":[],"text":"remove operation called leave or dequeue"},{"tags":[],"text":"has a head first item added a tail last item added and a size"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"insert operation called enter or enqueue"},{"tags":[],"text":"remove operation called leave or dequeue"},{"tags":[],"text":"has a head next for removal a tail lowest priority and a size"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"char 1 byte 8 bits a is 01100001"},{"tags":[],"text":"short 2 bytes 16 bits 42 is 0000000000101010"},{"tags":[],"text":"int 4 bytes 32 bits 42 is 0000000000 0000101010"},{"tags":[],"text":"double 8 bytes 64 bits"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"takes two values 1 2 4 8 bytes treats as sequence of bits"},{"tags":[],"text":"performs logical and on each corresponding pair of bits"},{"tags":[],"text":"result contains same number of bits as inputs"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"takes two values 1 2 4 8 bytes treats as sequence of bits"},{"tags":[],"text":"performs logical or on each corresponding pair of bits"},{"tags":[],"text":"result contains same number of bits as inputs"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"rwx gives permissions for the owner of the file"},{"tags":[],"text":"rw gives permissions for group members"},{"tags":[],"text":"r gives permissions for everyone else"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"takes two values 1 2 4 8 bytes treats as sequence of bits"},{"tags":[],"text":"performs logical xor on each corresponding pair of bits"},{"tags":[],"text":"result contains same number of bits as inputs"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"takes a single value 1 2 4 8 bytes treats as sequence of bits"},{"tags":[],"text":"performs logical negation of each bit"},{"tags":[],"text":"result contains same number of bits as input"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"takes a single value 1 2 4 8 bytes treats as sequence of bits"},{"tags":[],"text":"and a small positive integer x"},{"tags":[],"text":"moves shifts each bit x positions to the left"},{"tags":[],"text":"left end bit vanishes right end bit replaced by zero"},{"tags":[],"text":"result contains same number of bits as input"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"takes a single value 1 2 4 8 bytes treats as sequence of bits"},{"tags":[],"text":"and a small positive integer x"},{"tags":[],"text":"moves shifts each bit x positions to the right"},{"tags":[],"text":"right end bit vanishes left end bit replaced by zero"},{"tags":[],"text":"result contains same number of bits as input"}]}],"block":[{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"a introduction c language"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"course introduction"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"comp1521 18s1computer systems fundamentals2 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"course staff3 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the cast of thousands"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"comp1521 on the web4 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"primary entry point is webcms3"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"http webcms3 cse unsw edu au comp1521 18s1"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"most of the content lives under"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"home cs1521 web 18s1 e g lecs labs tutes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"most content is web accessible via"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"http cgi cse unsw edu au cs1521 18s1 index php"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"comp1521 on the web5 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"most material on webcms3 is publically readable"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"login to webcms3 is via zid zpass and is needed for"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"check marks via sturec on cmd line or via webcms3"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"for questions use webcms3 forum or email cs1521 cse"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"me6 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"research"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"you7 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"students in this course have completed"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"comp1511 1917 also studied linked lists adts and sorting"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"since not everyone has seen these we won t use them"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"for this week"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"course goals8 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"comp1511 1911 1917"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"course context9 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"themes10 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"major themes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"detailed topics11 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"textbook12 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"there is no prescribed textbook"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"material has been drawn from"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"textbook13 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"recommended reference computer systems a programmer s perspective bryant and o halloren covers most topics and quite well but uses a different machine code available in unsw bookroom books vs notes vs slides14 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"textbooks"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"systems and tools15 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"prac work based on linux tools"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assembly language mips on qtspim also xspim in cse"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"use your own favourite text editor i use vim"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"other tools make gdb man bc l"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"learn to love the shell and command line very useful"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"classes16 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"lectures"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"classes17 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"public holidays friday week 5 wednesday week 8"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"fortunately public holidays don t clobber lecture slots"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"but if you have tute lab on friday or wednesday"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assessments18 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"lab exercises contribute 10 to overall mark"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"ideally the lab exercise for week x must be"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"exceptionally good submissions can get bonus a"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"total mark for labs can be 10 capped at 11"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assessments19 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"two assignments"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"good time management avoids late penalties"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"quizzes20 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"five small online quizzes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"starting this week c revision quiz"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then in weeks 2 4 6 8 10"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"each quiz due before sunday 11 59pm at end of week"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"blogs21 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"keep a blog about what you re learning"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"misconduct22 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"final exam23 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"3 hour on line torture exam during the exam period"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"held in cse labs must know lab environment"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"on line documentation available in exam"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"course assessment24 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"supplementary exams25 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"supplementary exams are available to students who"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"summary26 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the goal is for you to become a better programmer"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"computer systems"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"some history28 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"a potted history of computer systems"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"some history29 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"eniac"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"some history30 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"whirlwind"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"computer systems31 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"component view of typical modern computer system"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"processor32 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"modern processors provide"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"storage33 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"memory main memory consists of"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"storage34 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"run time memory usage depends on language processor"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"how typical c compiler uses the memory"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"computer system layers35 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"view of software layers in typical computer system"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"c program life cycle36 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"your c programs start as text"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"how to make one c program run on different machine architectures"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"c program life cycle37 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"from source code to machine code"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"history of c compilers38 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"milestones in c history"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"c revisited"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"what i assume you know40 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"given a problem specification"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"type definitions41 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"reminder you can give a name to a c type definition e g"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"and then use the name instead of the type definition e g"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assignment as expression42 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assignments can be treated as expressions returning a value"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"can be useful"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"can be dangerous"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assignment as expression43 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assignment as expression often used to simplify loops e g"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"rather than"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"ignoring expression results44 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"we usually ignore the value returned by an assignment"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"some c functions return a result which is often ignored e g"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"printf returns the number of characters printed"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"exercise what value does the above printf return"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"choose answer at www zeetings com jas1 0004 2402 0001"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"ignoring expression results45 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"return values not related to function semantics"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"ignored return error statuses stati are generally"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"fine control46 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"break and continue provide fine loop control"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"fine control47 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example scan a n stop on zero or at end ignore negative values"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"fine function control48 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"return returns the result of a function"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"good style says have a single return at end"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"however"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"fine program control49 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"good style says program returns at end of main"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"however exceptional conditions may require early exit"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"exit terminates program with return code"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"can be used from anywhere in program even deeply nested functions"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"assert can also be used to trigger program exit"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"stacks queues priorityqs50 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"computer systems frequently make use of"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"stacks queues priorityqs51 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"all of these data structures have"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"stacks queues priorityqs52 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"data structures differ in"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack queue priorityq usage53 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"starting from data containing one item insert 3"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack queue priorityq usage54 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then insert 6"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack queue priorityq usage55 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then insert 2"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack queue priorityq usage56 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then remove item"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack queue priorityq usage57 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then insert 4"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack queue priorityq usage58 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then remove item"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack queue priorityq usage59 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"then remove item"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"stack data structure60 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"stack last in first out lifo protocol"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"example stack client61 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"a program to use a stack of int values"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"queue data structure62 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"queue first in first out fifo protocol"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"implementation covered in tute exercises"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"priority queue data structure63 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"queue highest priority out protocol"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"implementation left as an exercise for the reader"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bit manipulation"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bits in bytes in words65 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"values that we normally treat as atomic can be viewed as bits e g"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"c provides a set of operators that act bit by bit on pairs of bytes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"e g 10101010 11110000 yields 10100000 bitwise and"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"c bitwise operators"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"binary constants66 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"c does not have a way of directly writing binary numbers"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"can write numbers in decimal hexadecimal and octal"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"in hexadecimal each digit represents 4 bits"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"in octal each digit represents 3 bits"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bitwise and67 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the operator"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"used for e g checking whether a bit is set"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bitwise or68 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the operator"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"used for e g ensuring that a bit is set"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"flag bits69 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"consider file permissions in the unix file system"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"each file has three sets of flags defining it permissions"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"flag bits70 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"one possible representation"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"another possible representation"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"compact representation"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"last representation uses 1 bit per permission flag"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bitwise xor71 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the operator"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"used in e g generating random numbers building adder circuits"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bitwise neg72 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the operator"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"used for e g creating useful bit patterns"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"left shift73 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the operator"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"right shift74 74"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the operator"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"if signed quantity sign bit replaces left end bit"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"produced 2 apr 2018"}]}