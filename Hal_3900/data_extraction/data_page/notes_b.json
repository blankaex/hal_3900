{"grouped":[{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"c view","salience":0.5154759883880615,"theta":1},{"name":"data","salience":0.48452404141426086,"theta":1}],"text":"the c view of data 1 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"c view","salience":0.5154759883880615,"theta":1},{"name":"data","salience":0.48452404141426086,"theta":1}],"text":"the c view of data 2 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"c view","salience":0.5154759883880615,"theta":1},{"name":"data","salience":0.48452404141426086,"theta":1}],"text":"the c view of data 3 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"c view","salience":0.5154759883880615,"theta":1},{"name":"data","salience":0.48452404141426086,"theta":1}],"text":"the c view of data 4 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"c view","salience":0.5154759883880615,"theta":1},{"name":"data","salience":0.48452404141426086,"theta":1}],"text":"the c view of data 5 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"view","salience":0.5154759883880615,"theta":1},{"name":"data","salience":0.48452404141426086,"theta":1}],"text":"the physical view of data 6 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"memory","salience":1,"theta":1}],"text":"memory 7 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"memory","salience":1,"theta":1}],"text":"memory 8 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"memory","salience":1,"theta":1}],"text":"memory 9 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"data representation","salience":1,"theta":1}],"text":"data representation"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"data representation","salience":1,"theta":1}],"text":"data representation 11 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"character data","salience":1,"theta":1}],"text":"character data 12 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"character encoding","salience":1,"theta":1}],"text":"ascii character encoding 13 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"character encoding","salience":1,"theta":1}],"text":"ascii character encoding 14 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"unicode 15 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"character encoding","salience":1,"theta":1}],"text":"utf 8 character encoding 16 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"bits","salience":1,"theta":1}],"text":"bytes bits byte 1 byte 2 byte 3 byte 4"},{"tags":[],"text":"1 7 0xxxxxxx"},{"tags":[],"text":"2 11 110xxxxx 10xxxxxx"},{"tags":[],"text":"3 16 1110xxxx 10xxxxxx 10xxxxxx"},{"tags":[{"name":"10xxxxxx 10xxxxxx 10xxxxxx","salience":1,"theta":1}],"text":"4 21 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"character encoding","salience":1,"theta":1}],"text":"utf 8 character encoding 17 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"bits","salience":0.6507119536399841,"theta":1},{"name":"binary","salience":0.34928804636001587,"theta":1}],"text":"ch unicode bits simple binary utf 8 binary"},{"tags":[],"text":"u 0024 7 010 0100 00100100"},{"tags":[],"text":"u 00a2 11 000 1010 0010 11000010 10100010"},{"tags":[],"text":"u 20ac 16 0010 0000 1010 1100 11100010 10000010 10101100"},{"tags":[],"text":"u 10348 21 0 0001 0000 0011 0100 1000 11110000 10010000 10001101 10001000"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"character encoding","salience":1,"theta":1}],"text":"utf 8 character encoding 18 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"data","salience":1,"theta":1}],"text":"numeric data 19 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integer constants","salience":1,"theta":1}],"text":"integer constants 20 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integers","salience":1,"theta":1}],"text":"unsigned integers 21 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integers","salience":1,"theta":1}],"text":"unsigned integers 22 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integers","salience":1,"theta":1}],"text":"signed integers 23 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integers","salience":1,"theta":1}],"text":"signed integers 24 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integers","salience":1,"theta":1}],"text":"signed integers 25 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integers","salience":1,"theta":1}],"text":"signed integers 26 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integers","salience":1,"theta":1}],"text":"signed integers 27 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"pointers","salience":1,"theta":1}],"text":"pointers 28 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"pointers","salience":1,"theta":1}],"text":"pointers 29 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"floating point numbers 30 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"floating point numbers 31 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"floating point numbers 32 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"floating point numbers 33 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"floating point numbers 34 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"value max value","salience":1,"theta":1}],"text":"component min value max value"},{"tags":[{"name":"exponent","salience":1,"theta":1}],"text":"exponent 00000000 127 11111111 128"},{"tags":[],"text":"fraction 00 00 0 11 11 2 1 2 2 2 24"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"value max value","salience":1,"theta":1}],"text":"component min value max value"},{"tags":[{"name":"exponent","salience":1,"theta":1}],"text":"exponent 00000000000 2047 11111111111 2048"},{"tags":[],"text":"fraction 00 00 0 11 11 2 1 2 2 2 51"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"floating point numbers 35 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"arrays 36 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"arrays 37 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"arrays 38 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"arrays 39 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"structs 40 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"structs 41 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"structs 42 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"exercise","salience":1,"theta":1}],"text":"exercise 1 struct alternatives 43 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"length","salience":1,"theta":1}],"text":"variable length structs 44 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"length","salience":1,"theta":1}],"text":"variable length structs 45 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"bit wise structs 46 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"bit wise structs 47 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"bit wise structs 48 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"bit wise structs 49 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"structs","salience":1,"theta":1}],"text":"bit wise structs 50 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"unions","salience":1,"theta":1}],"text":"unions 51 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"unions","salience":1,"theta":1}],"text":"unions 52 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"unions","salience":1,"theta":1}],"text":"unions 53 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"unions","salience":1,"theta":1}],"text":"unions 54 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"unions","salience":1,"theta":1}],"text":"unions 55 56"}]},{"tags":[{"name":"table","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"types","salience":1,"theta":1}],"text":"enumerated types 56 56"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"location","salience":0.7983086109161377,"theta":1},{"name":"memory","salience":0.20169135928153992,"theta":1}],"text":"a location in memory"},{"tags":[{"name":"value","salience":0.6507119536399841,"theta":1},{"name":"bit string","salience":0.34928804636001587,"theta":1}],"text":"a value ultimately just a bit string"},{"tags":[{"name":"name","salience":0.6507119536399841,"theta":1},{"name":"malloc","salience":0.34928804636001587,"theta":1}],"text":"a name unless created by malloc"},{"tags":[{"name":"type","salience":0.5973580479621887,"theta":1},{"name":"size","salience":0.11380846053361893,"theta":1},{"name":"bytes","salience":0.07919760793447495,"theta":1},{"name":"units","salience":0.07826816290616989,"theta":1},{"name":"operations","salience":0.05885976180434227,"theta":1},{"name":"value","salience":0.04443573206663132,"theta":1},{"name":"value","salience":0.028072208166122437,"theta":1}],"text":"a type which determines its size in units of whole bytes sizeof how to interpret its value what operations apply to the value"},{"tags":[{"name":"size","salience":0.6943240165710449,"theta":1},{"name":"units","salience":0.22984729707241058,"theta":1},{"name":"bytes","salience":0.0758286863565445,"theta":1}],"text":"its size in units of whole bytes sizeof"},{"tags":[{"name":"value","salience":1,"theta":1}],"text":"how to interpret its value"},{"tags":[{"name":"operations","salience":0.6688562631607056,"theta":1},{"name":"value","salience":0.33114370703697205,"theta":1}],"text":"what operations apply to the value"},{"tags":[{"name":"scope","salience":0.9151654839515686,"theta":1},{"name":"program","salience":0.0848344936966896,"theta":1}],"text":"a scope where it s visible within the program"},{"tags":[{"name":"lifetime","salience":0.7803069353103638,"theta":1},{"name":"part","salience":0.16564562916755676,"theta":1},{"name":"program execution","salience":0.05404740571975708,"theta":1}],"text":"a lifetime during which part of program execution it exists"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"size","salience":0.6943240165710449,"theta":1},{"name":"units","salience":0.22984729707241058,"theta":1},{"name":"bytes","salience":0.0758286863565445,"theta":1}],"text":"its size in units of whole bytes sizeof"},{"tags":[{"name":"value","salience":1,"theta":1}],"text":"how to interpret its value"},{"tags":[{"name":"operations","salience":0.6688562631607056,"theta":1},{"name":"value","salience":0.33114370703697205,"theta":1}],"text":"what operations apply to the value"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"variables","salience":0.45519933104515076,"theta":1},{"name":"variables","salience":0.3315247595310211,"theta":1},{"name":"constants","salience":0.21327592432498932,"theta":1}],"text":"global variables static variables string constants"},{"tags":[{"name":"objects","salience":0.7283564209938049,"theta":1},{"name":"duration","salience":0.15796199440956116,"theta":1},{"name":"program execution","salience":0.11368158459663391,"theta":1}],"text":"objects persist for entire duration of program execution"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"objects","salience":0.7815695405006409,"theta":1},{"name":"malloc calloc","salience":0.21843047440052032,"theta":1}],"text":"objects created by malloc calloc"},{"tags":[{"name":"objects","salience":0.7295876145362854,"theta":1},{"name":"heap","salience":0.15653862059116364,"theta":1},{"name":"d","salience":0.11387374997138977,"theta":1}],"text":"objects persist in heap until explicitly free d"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"region","salience":0.4471507966518402,"theta":1},{"name":"frame","salience":0.3200380802154541,"theta":1},{"name":"function","salience":0.23281113803386688,"theta":1}],"text":"a small region frame for each active function"},{"tags":[{"name":"frames","salience":0.6733042001724243,"theta":1},{"name":"variables","salience":0.18997512757778168,"theta":1},{"name":"parameters","salience":0.1367206871509552,"theta":1}],"text":"frames contain local variables and parameters"},{"tags":[{"name":"frame","salience":0.8770638704299927,"theta":1},{"name":"function","salience":0.12293615192174911,"theta":1}],"text":"a frame is created when a function is called"},{"tags":[{"name":"frame","salience":0.7557774782180786,"theta":1},{"name":"function returns","salience":0.24422255158424377,"theta":1}],"text":"the frame is removed when the function returns"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"relatively large e g 228 bytes"},{"tags":[{"name":"byte","salience":0.8000344038009644,"theta":1},{"name":"cost","salience":0.19996561110019684,"theta":1}],"text":"any byte can be fetched with same cost"},{"tags":[{"name":"cost","salience":0.8756027817726135,"theta":1},{"name":"ns","salience":0.12439724057912827,"theta":1}],"text":"cost of fetching 1 2 4 8 bytes is small ns"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"dram data","salience":1,"theta":1}],"text":"volatile e g dram data lost when powered off"},{"tags":[{"name":"eeprom data","salience":1,"theta":1}],"text":"non volatile e g eeprom data stays when powered off"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"byte address","salience":0.7567278146743774,"theta":1},{"name":"byte object","salience":0.24327220022678375,"theta":1}],"text":"any byte address can be used to fetch 1 byte object"},{"tags":[{"name":"byte address","salience":0.6698964834213257,"theta":1},{"name":"n byte object","salience":0.20835573971271515,"theta":1},{"name":"n","salience":0.12174775451421738,"theta":1}],"text":"byte address for n byte object must be divisible by n"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"strings","salience":0.5759657621383667,"theta":1},{"name":"sizes","salience":0.4240342378616333,"theta":1}],"text":"load bit strings of sizes 1 2 4 8 bytes"},{"tags":[{"name":"boundary addresses","salience":1,"theta":1}],"text":"from n byte boundary addresses"},{"tags":[{"name":"registers","salience":0.6507119536399841,"theta":1},{"name":"cpu","salience":0.34928804636001587,"theta":1}],"text":"into registers in the cpu"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"iso","salience":0.4590185284614563,"theta":1},{"name":"values","salience":0.18256136775016785,"theta":1},{"name":"bit","salience":0.15374621748924255,"theta":1},{"name":"bits","salience":0.1477477103471756,"theta":1},{"name":"alphabet digits punctuation control chars","salience":0.0569261759519577,"theta":1}],"text":"ascii iso 646 7 bit values using lower 7 bits of a byte top bit always zero can encode roman alphabet digits punctuation control chars"},{"tags":[{"name":"values","salience":0.4316693842411041,"theta":1},{"name":"bits","salience":0.31566083431243896,"theta":1},{"name":"bit","salience":0.2526697814464569,"theta":1}],"text":"7 bit values using lower 7 bits of a byte top bit always zero"},{"tags":[{"name":"alphabet digits punctuation control chars","salience":1,"theta":1}],"text":"can encode roman alphabet digits punctuation control chars"},{"tags":[{"name":"unicode","salience":0.40779149532318115,"theta":1},{"name":"values","salience":0.2026638239622116,"theta":1},{"name":"byte values","salience":0.13271409273147583,"theta":1},{"name":"ability","salience":0.1260182112455368,"theta":1},{"name":"symbols","salience":0.09013472497463226,"theta":1},{"name":"human languages","salience":0.04067765921354294,"theta":1}],"text":"utf 8 unicode 8 bit values with ability to extend to multi byte values can encode all human languages plus other symbols e g or"},{"tags":[{"name":"values","salience":0.49395084381103516,"theta":1},{"name":"ability","salience":0.3181426227092743,"theta":1},{"name":"byte values","salience":0.18790656328201294,"theta":1}],"text":"8 bit values with ability to extend to multi byte values"},{"tags":[{"name":"human languages","salience":0.7445061206817627,"theta":1},{"name":"symbols","salience":0.2554938793182373,"theta":1}],"text":"can encode all human languages plus other symbols e g or"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"values","salience":0.4316693842411041,"theta":1},{"name":"bits","salience":0.31566083431243896,"theta":1},{"name":"bit","salience":0.2526697814464569,"theta":1}],"text":"7 bit values using lower 7 bits of a byte top bit always zero"},{"tags":[{"name":"alphabet digits punctuation control chars","salience":1,"theta":1}],"text":"can encode roman alphabet digits punctuation control chars"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"values","salience":0.49395084381103516,"theta":1},{"name":"ability","salience":0.3181426227092743,"theta":1},{"name":"byte values","salience":0.18790656328201294,"theta":1}],"text":"8 bit values with ability to extend to multi byte values"},{"tags":[{"name":"human languages","salience":0.7445061206817627,"theta":1},{"name":"symbols","salience":0.2554938793182373,"theta":1}],"text":"can encode all human languages plus other symbols e g or"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"control characters","salience":1,"theta":1}],"text":"control characters 0 31 e g 0 n"},{"tags":[{"name":"punctuation","salience":1,"theta":1}],"text":"punctuation chars 32 47 91 96 123 126"},{"tags":[],"text":"digits 48 57 0 9"},{"tags":[{"name":"case","salience":0.6507119536399841,"theta":1},{"name":"az","salience":0.34928804636001587,"theta":1}],"text":"upper case alphabetic 65 90 a z"},{"tags":[{"name":"case","salience":1,"theta":1}],"text":"lower case alphabetic 97 122 a z"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"writing systems","salience":0.6190752387046814,"theta":1},{"name":"symbols","salience":0.23195919394493103,"theta":1},{"name":"set","salience":0.14896556735038757,"theta":1}],"text":"not all writing systems use a small set of discrete symbols"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"symbols","salience":0.6765509247779846,"theta":1},{"name":"languages","salience":0.3234490752220154,"theta":1}],"text":"around 140k symbols covering 140 different languages"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"punctuation","salience":0.41067931056022644,"theta":1},{"name":"alphabet","salience":0.4062919616699219,"theta":1},{"name":"bits","salience":0.18302874267101288,"theta":1}],"text":"e g standard roman alphabet punctuation needs only 7 bits"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"uhexdigits","salience":0.7815695405006409,"theta":1},{"name":"unicode code value","salience":0.21843047440052032,"theta":1}],"text":"uhexdigits insert unicode code value"},{"tags":[{"name":"x2hexdigits","salience":0.8837491273880005,"theta":1},{"name":"bytes","salience":0.11625086516141891,"theta":1}],"text":"x2hexdigits insert individual bytes"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"integer subset range","salience":0.5480429530143738,"theta":1},{"name":"integers","salience":0.4519570469856262,"theta":1}],"text":"integer subset range of the mathematical integers"},{"tags":[{"name":"subset","salience":0.6507119536399841,"theta":1},{"name":"numbers","salience":0.34928804636001587,"theta":1}],"text":"floating point subset of the mathematical real numbers"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"42 signed decimal 0 9"},{"tags":[{"name":"f","salience":1,"theta":1}],"text":"0x2a unsigned hexadecimal 0 f"},{"tags":[{"name":"052","salience":1,"theta":1}],"text":"052 signed octal 0 7"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"int value","salience":0.5783335566520691,"theta":1},{"name":"bits","salience":0.4216664433479309,"theta":1}],"text":"123u unsigned int value typically 32 bits"},{"tags":[{"name":"int value","salience":0.5783335566520691,"theta":1},{"name":"bits","salience":0.4216664433479309,"theta":1}],"text":"123l long int value typically 64 bits"},{"tags":[{"name":"int value","salience":0.5783335566520691,"theta":1},{"name":"bits","salience":0.4216664433479309,"theta":1}],"text":"123s short int value typically 16 bits"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"4294967296 1u 666666s 078"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"bits","salience":0.578466534614563,"theta":1},{"name":"values","salience":0.4215334355831146,"theta":1}],"text":"commonly 32 bits storing values in the range 0 232 1"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"bits","salience":0.578466534614563,"theta":1},{"name":"values","salience":0.4215334355831146,"theta":1}],"text":"commonly 32 bits storing values in the range 231 231 1"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"magnitude","salience":0.5969586968421936,"theta":1},{"name":"bit","salience":0.21328963339328766,"theta":1},{"name":"magnitude","salience":0.1314471960067749,"theta":1},{"name":"sign rest","salience":0.05830444023013115,"theta":1}],"text":"signed magnitude first bit is sign rest are magnitude"},{"tags":[{"name":"ones","salience":0.47133901715278625,"theta":1},{"name":"form","salience":0.22051839530467987,"theta":1},{"name":"bits","salience":0.21705585718154907,"theta":1},{"name":"n","salience":0.0910867303609848,"theta":1}],"text":"ones complement form n by inverting all bits in n"},{"tags":[{"name":"n","salience":0.4382956326007843,"theta":1},{"name":"twos","salience":0.3773348033428192,"theta":1},{"name":"form","salience":0.18436956405639648,"theta":1}],"text":"twos complement form n by inverting n and adding 1"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"magnitude","salience":1,"theta":1}],"text":"10000101 signed magnitude"},{"tags":[{"name":"ones","salience":1,"theta":1}],"text":"11111010 ones complement"},{"tags":[{"name":"twos","salience":1,"theta":1}],"text":"11111011 twos complement"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"what do these numbers represent 00000000 10000000"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":1,"theta":1}],"text":"what do these numbers represent 00000000 11111111"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"0 00000000 1 11111111 1 00000000"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"number","salience":0.4937732517719269,"theta":1},{"name":"bits","salience":0.2578776776790619,"theta":1},{"name":"memory size","salience":0.15292692184448242,"theta":1},{"name":"bits","salience":0.09542216360569,"theta":1}],"text":"number of bits depends on memory size but typically 32 bits"},{"tags":[{"name":"data pointers","salience":0.6524062752723694,"theta":1},{"name":"addresses","salience":0.2281540185213089,"theta":1},{"name":"data heap stack regions","salience":0.11943967640399933,"theta":1}],"text":"data pointers reference addresses in data heap stack regions"},{"tags":[{"name":"function pointers reference addresses","salience":0.5783335566520691,"theta":1},{"name":"code region","salience":0.4216664433479309,"theta":1}],"text":"function pointers reference addresses in code region"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"int","salience":0.8312284350395203,"theta":1},{"name":"sizeof struct x","salience":0.16877159476280212,"theta":1}],"text":"sizeof int sizeof char sizeof double sizeof struct x"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"char","salience":0.7815695405006409,"theta":1},{"name":"byte address","salience":0.21843047440052032,"theta":1}],"text":"char can reference any byte address"},{"tags":[{"name":"int","salience":1,"theta":1}],"text":"int must have addr 4 0"},{"tags":[{"name":"double","salience":1,"theta":1}],"text":"double must have addr 8 0"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"values","salience":0.5179286003112793,"theta":1},{"name":"t","salience":0.35890549421310425,"theta":1},{"name":"representation","salience":0.12316589057445526,"theta":1}],"text":"many real values don t have exact representation e g 1 3"},{"tags":[{"name":"results","salience":0.6746734380722046,"theta":1},{"name":"calculations","salience":0.18832780420780182,"theta":1},{"name":"inaccuracies","salience":0.1369987279176712,"theta":1}],"text":"results of calculations may contain small inaccuracies"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"numbers","salience":0.8827978372573853,"theta":1},{"name":"precision","salience":0.11720216274261475,"theta":1}],"text":"numbers close to zero have higher precision more accurate"},{"tags":[{"name":"numbers","salience":0.6770222187042236,"theta":1},{"name":"zero","salience":0.2424292117357254,"theta":1},{"name":"precision","salience":0.08054856956005096,"theta":1}],"text":"numbers further from zero have lower precision less accurate"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"quantity","salience":0.5403892397880554,"theta":1},{"name":"range","salience":0.2798740267753601,"theta":1},{"name":"precision","salience":0.17973674833774567,"theta":1}],"text":"float typically 32 bit quantity lower precision narrower range"},{"tags":[{"name":"double","salience":0.6192377805709839,"theta":1},{"name":"quantity","salience":0.20726878941059113,"theta":1},{"name":"range","salience":0.10586510598659515,"theta":1},{"name":"precision","salience":0.06762834638357162,"theta":1}],"text":"double typically 64 bit quantity higher precision wider range"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"notation","salience":0.5250181555747986,"theta":1},{"name":"f","salience":0.17573198676109314,"theta":1},{"name":"fraction","salience":0.17380070686340332,"theta":1},{"name":"exponent e","salience":0.12544915080070496,"theta":1}],"text":"scientific notation with fraction f and exponent e"},{"tags":[{"name":"numbers","salience":0.6486918330192566,"theta":1},{"name":"f","salience":0.27862033247947693,"theta":1},{"name":"e","salience":0.07268780469894409,"theta":1}],"text":"numbers have form f 2e where both f and e can be ve"},{"tags":[{"name":"infinity representation","salience":1,"theta":1}],"text":"infinity representation for and e g 1 0 0"},{"tags":[{"name":"representation","salience":0.7229015231132507,"theta":1},{"name":"value","salience":0.27709847688674927,"theta":1}],"text":"nan representation for invalid value nan e g sqrt 1 0"},{"tags":[{"name":"precision","salience":1,"theta":1}],"text":"32 bit single precision 64 bit double precision"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[],"text":"1010 1011 is normalized as 1 0101011 2011"},{"tags":[],"text":"1010 1011 10 11 16 10 6875"},{"tags":[],"text":"1 0101011 2011 1 43 128 23 1 3359375 8 10 6875"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"part","salience":0.648220956325531,"theta":1},{"name":"bbbbbbbb","salience":0.20456112921237946,"theta":1},{"name":"store","salience":0.14721789956092834,"theta":1}],"text":"fraction part is always 1 bbbbbbbb don t store 1"},{"tags":[{"name":"exponent","salience":0.8408939838409424,"theta":1},{"name":"b exponent bits","salience":0.15910598635673523,"theta":1}],"text":"exponent is offset relative to a baseline 2b 1 1 b exponent bits"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"baseline","salience":0.6957117915153503,"theta":1},{"name":"bias","salience":0.21720249950885773,"theta":1},{"name":"exponent","salience":0.08708570152521133,"theta":1}],"text":"the baseline aka bias is 127 the exponent is 27"},{"tags":[{"name":"exponent","salience":1,"theta":1}],"text":"so in the exponent we store 127 7 134 10000110"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"array elements","salience":0.5934883952140808,"theta":1},{"name":"indices","salience":0.4065115749835968,"theta":1}],"text":"individual array elements are accessed via indices 0 n 1"},{"tags":[{"name":"amount","salience":0.5519651174545288,"theta":1},{"name":"space","salience":0.18272115290164948,"theta":1},{"name":"array","salience":0.17094957828521729,"theta":1},{"name":"sizeof type","salience":0.09436415135860443,"theta":1}],"text":"total amount of space allocated to array n sizeof type"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"strings","salience":1,"theta":1}],"text":"constant strings have 0 added automatically"},{"tags":[{"name":"string buffers","salience":0.7946122288703918,"theta":1},{"name":"element","salience":0.20538778603076935,"theta":1}],"text":"string buffers must allow for element to hold 0"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"component","salience":0.6448712348937988,"theta":1},{"name":"name","salience":0.20650902390480042,"theta":1},{"name":"type","salience":0.14861975610256195,"theta":1}],"text":"each component has a name and a type"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"object","salience":0.5758325457572937,"theta":1},{"name":"component","salience":0.4241674542427063,"theta":1}],"text":"define the dynamic object as the last component"},{"tags":[{"name":"space","salience":0.7425519824028015,"theta":1},{"name":"struct","salience":0.2574480175971985,"theta":1}],"text":"malloc more space than the struct requires"},{"tags":[{"name":"component","salience":1,"theta":1}],"text":"to make the final component as large as required"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"programmers","salience":0.5934883952140808,"theta":1},{"name":"structs","salience":0.4065115749835968,"theta":1}],"text":"c allows programmers to specify structs bit wise"}]},{"tags":[{"name":"list","salience":0.5,"theta":1}],"items":[{"tags":[{"name":"components","salience":0.5731943249702454,"theta":1},{"name":"types","salience":0.42680567502975464,"theta":1}],"text":"specify unnamed components using standard types"},{"tags":[{"name":"bit fields","salience":0.5783335566520691,"theta":1},{"name":"component","salience":0.4216664433479309,"theta":1}],"text":"specify named individual bit fields in each component"}]}],"block":[{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"course","salience":0.6219350099563599,"theta":1},{"name":"b memory","salience":0.21984653174877167,"theta":1},{"name":"data representation","salience":0.15821844339370728,"theta":1}],"text":"course notes b memory and data representation"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c view","salience":1,"theta":1}],"text":"the c view of data1 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"ac program","salience":0.6206515431404114,"theta":1},{"name":"data","salience":0.20545892417430878,"theta":1},{"name":"variables","salience":0.10610680282115936,"theta":1},{"name":"collection","salience":0.06778274476528168,"theta":1}],"text":"a c program sees data as a collection of variables"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"variable","salience":0.5784621238708496,"theta":1},{"name":"number","salience":0.17191492021083832,"theta":1},{"name":"properties","salience":0.1608395278453827,"theta":1},{"name":"name type size","salience":0.088783398270607,"theta":1}],"text":"each variable has a number of properties e g name type size"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c view","salience":1,"theta":1}],"text":"the c view of data2 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"variables","salience":0.8732617497444153,"theta":1},{"name":"objects","salience":0.1267382800579071,"theta":1}],"text":"variables are examples of computational objects"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"object","salience":1,"theta":1}],"text":"each computational object has"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c view","salience":1,"theta":1}],"text":"the c view of data3 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c","salience":0.5386067032814026,"theta":1},{"name":"data objects","salience":0.22757959365844727,"theta":1},{"name":"regions","salience":0.1506531685590744,"theta":1},{"name":"memoryduring program execution","salience":0.08316053450107574,"theta":1}],"text":"c allocates data objects to various well defined regions of memoryduring program execution"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c view","salience":1,"theta":1}],"text":"the c view of data4 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"data area","salience":1,"theta":1}],"text":"the global data area contains"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c view","salience":1,"theta":1}],"text":"the c view of data5 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"example","salience":0.5961312651634216,"theta":1},{"name":"runtime stack","salience":0.20847399532794952,"theta":1},{"name":"call","salience":0.19539472460746765,"theta":1}],"text":"example of runtime stack during call to h"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"view","salience":1,"theta":1}],"text":"the physical view of data6 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"array","salience":0.5783335566520691,"theta":1},{"name":"bytes","salience":0.4216664433479309,"theta":1}],"text":"memory indexed array of bytes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"memory addresses","salience":0.9346514344215393,"theta":1},{"name":"aka pointers","salience":0.06534858047962189,"theta":1}],"text":"indexes are memory addresses a k a pointers"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"data","salience":0.744705855846405,"theta":1},{"name":"chunks","salience":0.2552941143512726,"theta":1}],"text":"data can be fetched in chunks of 1 2 4 8 bytes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"memory7 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"memory","salience":0.5606412291526794,"theta":1},{"name":"storage","salience":0.43935874104499817,"theta":1}],"text":"also called ram main memory primary storage"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"technology semiconductor","salience":1,"theta":1}],"text":"technology semiconductor based"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"features","salience":1,"theta":1}],"text":"distinguishing features"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"properties","salience":0.6507119536399841,"theta":1},{"name":"data persistence","salience":0.34928804636001587,"theta":1}],"text":"two properties related to data persistence"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"memory8 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"objects","salience":0.5783335566520691,"theta":1},{"name":"memory","salience":0.4216664433479309,"theta":1}],"text":"when addressing objects in memory"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"data bytes","salience":0.5849706530570984,"theta":1},{"name":"registers","salience":0.23795495927333832,"theta":1},{"name":"memory","salience":0.12152811139822006,"theta":1},{"name":"order","salience":0.055546242743730545,"theta":1}],"text":"data bytes in registers may be in different order to memory e g"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"memory9 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"memories","salience":1,"theta":1}],"text":"memories can be categorised as big endian or little endian"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"data representation","salience":1,"theta":1}],"text":"data representation"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"data","salience":1,"theta":1}],"text":"data representation11 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"memory","salience":1,"theta":1}],"text":"ultimately memory allows you to"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"bit string","salience":0.6537261009216309,"theta":1},{"name":"value","salience":0.34627392888069153,"theta":1}],"text":"need to interpret this bit string as a meaningful value"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"data representations","salience":0.6858299970626831,"theta":1},{"name":"way","salience":0.18861123919487,"theta":1},{"name":"strings","salience":0.1255587488412857,"theta":1}],"text":"data representations provide a way of assigning meaning to bit strings"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"character","salience":1,"theta":1}],"text":"character data12 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"character data","salience":0.677700936794281,"theta":1},{"name":"representations encodings","salience":0.3222990930080414,"theta":1}],"text":"character data has several possible representations encodings"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"the two most common"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"e g or"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"character","salience":1,"theta":1}],"text":"ascii character encoding13 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"values","salience":0.7229015231132507,"theta":1},{"name":"0x00","salience":0.27709847688674927,"theta":1}],"text":"uses values in the range 0x00 to 0x7f 0 127"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"characters","salience":0.7815695405006409,"theta":1},{"name":"groups","salience":0.21843047440052032,"theta":1}],"text":"characters partitioned into sequential groups"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"nature","salience":0.7420468926429749,"theta":1},{"name":"groups","salience":0.17831102013587952,"theta":1},{"name":"eg ch 0","salience":0.07964211702346802,"theta":1}],"text":"sequential nature of groups allow for e g ch 0"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"character","salience":1,"theta":1}],"text":"ascii character encoding14 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"ascii char table","salience":0.3752753436565399,"theta":1},{"name":"man","salience":0.3517312705516815,"theta":1},{"name":"ascii","salience":0.27299338579177856,"theta":1}],"text":"hexademical ascii char table from man 7 ascii"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"0x0a n 0x20 0x09 t","salience":0.5450467467308044,"theta":1},{"name":"eof","salience":0.45495325326919556,"theta":1}],"text":"0x0a n 0x20 0x09 t but note no eof"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unicode15 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"standard","salience":0.5758325457572937,"theta":1},{"name":"writing systems","salience":0.4241674542427063,"theta":1}],"text":"widely used standard for expressing writing systems"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"character","salience":1,"theta":1}],"text":"utf 8 character encoding16 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"length encoding","salience":1,"theta":1}],"text":"utf 8 uses a variable length encoding as follows"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"byte codes","salience":0.6490672826766968,"theta":1},{"name":"ascii","salience":0.3509327173233032,"theta":1}],"text":"the 127 1 byte codes are compatible with ascii"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"byte codes","salience":0.6806408166885376,"theta":1},{"name":"latin script alphabets","salience":0.3193591833114624,"theta":1}],"text":"the 2048 2 byte codes include most latin script alphabets"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"byte codes","salience":0.5420400500297546,"theta":1},{"name":"languages","salience":0.2471202313899994,"theta":1},{"name":"asian","salience":0.21083971858024597,"theta":1}],"text":"the 65536 3 byte codes include most asian languages"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"byte codes","salience":0.4082038402557373,"theta":1},{"name":"symbols","salience":0.3331919312477112,"theta":1},{"name":"emojis","salience":0.2586042284965515,"theta":1}],"text":"the 2097152 4 byte codes include symbols and emojis and"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"character","salience":1,"theta":1}],"text":"utf 8 character encoding17 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"examples","salience":1,"theta":1}],"text":"utf 8 examples"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"unicode strings","salience":0.6507119536399841,"theta":1},{"name":"ceg","salience":0.34928804636001587,"theta":1}],"text":"unicode strings can be manipulated in c e g"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c strings","salience":1,"theta":1}],"text":"like other c strings they are terminated by a 0 byte i e 0"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"character","salience":1,"theta":1}],"text":"utf 8 character encoding18 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"constants","salience":0.6507119536399841,"theta":1},{"name":"c strings","salience":0.34928804636001587,"theta":1}],"text":"unicode constants in c strings"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"notations","salience":0.5758325457572937,"theta":1},{"name":"contexts","salience":0.4241674542427063,"theta":1}],"text":"the following two notations work in some contexts"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"bytes","salience":0.4433896243572235,"theta":1},{"name":"sequences","salience":0.3921501636505127,"theta":1},{"name":"unicode symbol","salience":0.164460226893425,"theta":1}],"text":"the red sequences produce 3 bytes and 1 unicode symbol"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"numeric data19 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"data","salience":0.6951217651367188,"theta":1},{"name":"forms","salience":0.30487826466560364,"theta":1}],"text":"numeric data comes in two major forms"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"integer constants20 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"ways","salience":0.6054165363311768,"theta":1},{"name":"integer constants","salience":0.24056725203990936,"theta":1},{"name":"c","salience":0.15401619672775269,"theta":1}],"text":"three ways to write integer constants in c"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unsigned integers21 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"int data type","salience":1,"theta":1}],"text":"the unsigned int data type"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unsigned integers22 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"value","salience":0.7815695405006409,"theta":1},{"name":"binary number","salience":0.21843047440052032,"theta":1}],"text":"value interpreted as binary number"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"int","salience":1,"theta":1}],"text":"e g consider an 8 bit unsigned int"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"01001101 26 23 22 20 64 8 4 1 77"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"addition","salience":0.7980157136917114,"theta":1},{"name":"carry","salience":0.20198428630828857,"theta":1}],"text":"addition is bitwise with carry"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"machines","salience":0.6618804335594177,"theta":1},{"name":"overflow","salience":0.21694540977478027,"theta":1},{"name":"example","salience":0.1211741641163826,"theta":1}],"text":"most machines will also flag the overflow in the fourth example"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"signed integers23 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"int data type","salience":1,"theta":1}],"text":"the int data type"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"signed integers24 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"representations","salience":0.5758325457572937,"theta":1},{"name":"values","salience":0.4241674542427063,"theta":1}],"text":"several possible representations for negative values"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"representations","salience":0.5322932600975037,"theta":1},{"name":"examples","salience":0.46770673990249634,"theta":1}],"text":"examples representations of 8 bit 5 where 5 is 00000101"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"signed integers25 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"magnitude","salience":0.6450696587562561,"theta":1},{"name":"x","salience":0.2368338257074356,"theta":1},{"name":"bit","salience":0.11809652298688889,"theta":1}],"text":"signed magnitude easy to form x from x or in high order bit"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"problem","salience":1,"theta":1}],"text":"a problem using 8 bit ints"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"problem","salience":0.7815695405006409,"theta":1},{"name":"addition","salience":0.21843047440052032,"theta":1}],"text":"another problem x x 0 mostly with simple addition"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"alu","salience":0.5955686569213867,"theta":1},{"name":"hardware","salience":0.4044313132762909,"theta":1}],"text":"to fix requires extra hardware in alu"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"signed integers26 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"ones","salience":0.8312284350395203,"theta":1},{"name":"bits","salience":0.16877159476280212,"theta":1}],"text":"ones complement easy to form x from x neg all bits"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"problem","salience":1,"theta":1}],"text":"a problem using 8 bit ints"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"one","salience":0.5403892397880554,"theta":1},{"name":"addition","salience":0.2798740267753601,"theta":1},{"name":"zeroes","salience":0.17973674833774567,"theta":1}],"text":"at least x x is equal to one of the zeroes with simple addition"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"signed integers27 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"twos","salience":0.9056843519210815,"theta":1},{"name":"bits","salience":0.09431563317775726,"theta":1}],"text":"twos complement to form x from x neg all bits then add 1"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"representation","salience":1,"theta":1}],"text":"now have only one representation for zero 00000000"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"cases","salience":0.6372127532958984,"theta":1},{"name":"addition","salience":0.36278724670410156,"theta":1}],"text":"even better x x 0 in all cases with simple addition"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"overflow bit","salience":1,"theta":1}],"text":"always produces an overflow bit but can ignore this"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"pointers28 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"pointers","salience":0.704689621925354,"theta":1},{"name":"memory","salience":0.18948377668857574,"theta":1},{"name":"locations","salience":0.10582662373781204,"theta":1}],"text":"pointers represent memory addresses locations"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"pointers29 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"object","salience":0.41560065746307373,"theta":1},{"name":"object","salience":0.389951229095459,"theta":1},{"name":"pointer arithmetic","salience":0.1944480985403061,"theta":1}],"text":"can move from object to object by pointer arithmetic"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"pointer tpp","salience":0.6514027118682861,"theta":1},{"name":"sizeof t","salience":0.34859731793403625,"theta":1}],"text":"for any pointer t p p increases p by sizeof t"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"examples","salience":0.7815695405006409,"theta":1},{"name":"bit pointers","salience":0.21843047440052032,"theta":1}],"text":"examples assuming 16 bit pointers"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"paradigm","salience":0.5758325457572937,"theta":1},{"name":"string","salience":0.4241674542427063,"theta":1}],"text":"a common efficient paradigm for scanning a string"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"floating point numbers30 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"floating point numbers","salience":0.7983086109161377,"theta":1},{"name":"subset","salience":0.20169135928153992,"theta":1}],"text":"floating point numbers model a tiny subset of"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"floating point numbers31 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"c","salience":0.7414977550506592,"theta":1},{"name":"types","salience":0.25850221514701843,"theta":1}],"text":"c has two floating point types"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"display","salience":0.8837491273880005,"theta":1},{"name":"printf","salience":0.11625086516141891,"theta":1}],"text":"display via printf"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"w","salience":0.5694428086280823,"theta":1},{"name":"p","salience":0.2039780169725418,"theta":1},{"name":"width blank","salience":0.12860797345638275,"theta":1},{"name":"dec point","salience":0.06581079959869385,"theta":1},{"name":"digits","salience":0.03216039761900902,"theta":1}],"text":"w gives total width blank padded p gives digits after dec point"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"floating point numbers32 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"ieee 754","salience":1,"theta":1}],"text":"ieee 754 standard"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"example","salience":0.7815695405006409,"theta":1},{"name":"binary","salience":0.21843047440052032,"theta":1}],"text":"example of normalising in binary"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"floating point numbers33 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"structure","salience":0.6507119536399841,"theta":1},{"name":"values","salience":0.34928804636001587,"theta":1}],"text":"internal structure of floating point values"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"int","salience":0.6514027118682861,"theta":1},{"name":"dd","salience":0.34859731793403625,"theta":1}],"text":"more complex than int because 1 dddd e dd"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"floating point numbers34 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"details","salience":0.8837491273880005,"theta":1},{"name":"structure","salience":0.11625086516141891,"theta":1}],"text":"details of internal structure"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"bits","salience":1,"theta":1}],"text":"00 00 24 zero bits 11 11 24 one bits"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"bits","salience":1,"theta":1}],"text":"00 00 24 zero bits 11 11 24 one bits"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"floating point numbers35 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"precision","salience":1,"theta":1}],"text":"example single precision"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"fraction","salience":1,"theta":1}],"text":"where red is sign bit green is exponent blue is fraction"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"note","salience":1,"theta":1}],"text":"note"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"arrays36 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"arrays","salience":0.6303378939628601,"theta":1},{"name":"n elements","salience":0.19305869936943054,"theta":1},{"name":"type t","salience":0.10776278376579285,"theta":1},{"name":"each","salience":0.06884061545133591,"theta":1}],"text":"arrays are defined to have n elements each of type t"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"examples","salience":1,"theta":1}],"text":"examples"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"elements","salience":0.7815695405006409,"theta":1},{"name":"memory","salience":0.21843047440052032,"theta":1}],"text":"elements are laid out adjacent in memory"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"arrays37 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"array declaration","salience":0.5783335566520691,"theta":1},{"name":"type vn","salience":0.4216664433479309,"theta":1}],"text":"assuming an array declaration like type v n"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"name","salience":0.5074037909507751,"theta":1},{"name":"array","salience":0.23739148676395416,"theta":1},{"name":"pointer","salience":0.15714845061302185,"theta":1},{"name":"element type type","salience":0.09805627912282944,"theta":1}],"text":"name of array can be treated as a pointer to element type type"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"array indexing","salience":0.7496740818023682,"theta":1},{"name":"vivi","salience":0.25032588839530945,"theta":1}],"text":"array indexing can be treated as v i v i"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"element","salience":0.6587997674942017,"theta":1},{"name":"array","salience":0.34120023250579834,"theta":1}],"text":"if have pointer to first element can use it just like an array"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"strings","salience":0.7876218557357788,"theta":1},{"name":"char","salience":0.1405767798423767,"theta":1},{"name":"terminator","salience":0.0718013346195221,"theta":1}],"text":"strings are just arrays of char with a 0 terminator"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"arrays38 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"arrays","salience":0.7371235489845276,"theta":1},{"name":"function","salience":0.2628764510154724,"theta":1}],"text":"when arrays are passed to a function actually pass a 0"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"arrays39 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"arrays","salience":0.7705338597297668,"theta":1},{"name":"malloc","salience":0.22946612536907196,"theta":1}],"text":"arrays can be created automatically or via malloc"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"arrays","salience":0.4775872826576233,"theta":1},{"name":"s","salience":0.3455134928226471,"theta":1},{"name":"contents","salience":0.17689920961856842,"theta":1}],"text":"two separate arrays different s but have same contents"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"parts","salience":0.5783335566520691,"theta":1},{"name":"arrays","salience":0.4216664433479309,"theta":1}],"text":"except for the unitialised parts of the arrays"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"structs40 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"structs","salience":0.7696633338928223,"theta":1},{"name":"components","salience":0.14090658724308014,"theta":1},{"name":"number","salience":0.08943008631467819,"theta":1}],"text":"structs are defined to have a number of components"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"structs41 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"layout","salience":0.5947269201278687,"theta":1},{"name":"components","salience":0.23518185317516327,"theta":1},{"name":"compiler","salience":0.17009124159812927,"theta":1}],"text":"internal layout of struct components determined by compiler"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"name","salience":0.6508029103279114,"theta":1},{"name":"byte","salience":0.2300509661436081,"theta":1},{"name":"struct","salience":0.11914613842964172,"theta":1}],"text":"each name maps to a byte offset within the struct"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"example","salience":0.5111551284790039,"theta":1},{"name":"id","salience":0.36584770679473877,"theta":1},{"name":"family","salience":0.12299717962741852,"theta":1}],"text":"e g in first example id offset 0 given offset 4 family offset 54 etc"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"structs42 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"alignment","salience":0.5759657621383667,"theta":1},{"name":"padding","salience":0.4240342378616333,"theta":1}],"text":"to ensure alignment internal padding may be needed"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"padding wastes space","salience":0.4776556193828583,"theta":1},{"name":"order fields","salience":0.32042285799980164,"theta":1},{"name":"waste","salience":0.20192153751850128,"theta":1}],"text":"padding wastes space re order fields to minimise waste"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"clang","salience":0.8312284350395203,"theta":1},{"name":"structs","salience":0.16877159476280212,"theta":1}],"text":"clang has wpadded to warn about padding in structs"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"exercise","salience":1,"theta":1}],"text":"exercise 1 struct alternatives43 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"nodes","salience":0.3111737370491028,"theta":1},{"name":"representations","salience":0.30775395035743713,"theta":1},{"name":"list","salience":0.2221364676952362,"theta":1},{"name":"strings","salience":0.15893584489822388,"theta":1}],"text":"consider these two possible representations of nodes in a linked list of strings"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"b","salience":1,"theta":1}],"text":"show how they would be a defined b initialised how large is each"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"length","salience":1,"theta":1}],"text":"variable length structs44 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"structs","salience":0.6733042001724243,"theta":1},{"name":"pointers","salience":0.18997512757778168,"theta":1},{"name":"objects","salience":0.1367206871509552,"theta":1}],"text":"structs can contain pointers to dynamic objects"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"object","salience":0.641623318195343,"theta":1},{"name":"malloc d struct","salience":0.3583766520023346,"theta":1}],"text":"but we can also embed one dynamic object in a malloc d struct"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"length","salience":1,"theta":1}],"text":"variable length structs45 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"amount","salience":0.5505452156066895,"theta":1},{"name":"memory","salience":0.26900187134742737,"theta":1},{"name":"struct","salience":0.18045291304588318,"theta":1}],"text":"amount of memory allocated to struct is determined dynamically"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bit wise structs46 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"layout","salience":0.3538500666618347,"theta":1},{"name":"control","salience":0.3499612808227539,"theta":1},{"name":"structs","salience":0.1807333081960678,"theta":1},{"name":"fields","salience":0.11545536667108536,"theta":1}],"text":"for fine grained control over layout of fields in structs"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"component","salience":0.5040107369422913,"theta":1},{"name":"bit fields","salience":0.30425578355789185,"theta":1},{"name":"component","salience":0.1917334944009781,"theta":1}],"text":"has one component and three bit fields within that component"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bit wise structs47 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"ways","salience":0.6507119536399841,"theta":1},{"name":"bit fields","salience":0.34928804636001587,"theta":1}],"text":"two ways of declaring bit fields"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"cases","salience":0.5560223460197449,"theta":1},{"name":"bit fields","salience":0.44397762417793274,"theta":1}],"text":"in both cases sizeof struct bit fields is 4 bytes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"way","salience":0.8692774772644043,"theta":1},{"name":"int","salience":0.1307225525379181,"theta":1}],"text":"first way makes it clearer that a single unsigned int is used"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bit wise structs48 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"graphics objects","salience":1,"theta":1}],"text":"another example graphics objects"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bit wise structs49 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"graphics object","salience":0.6507119536399841,"theta":1},{"name":"memory","salience":0.34928804636001587,"theta":1}],"text":"the graphics object would be stored in memory as"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"bit wise structs50 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"bit fields","salience":0.6485675573348999,"theta":1},{"name":"alternative","salience":0.1697215884923935,"theta":1},{"name":"masks","salience":0.1108793318271637,"theta":1},{"name":"bit operators","salience":0.07083152234554291,"theta":1}],"text":"bit fields provide an alternative to bit operators and masks"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unions51 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"unions","salience":0.5726756453514099,"theta":1},{"name":"programmers","salience":0.1660694181919098,"theta":1},{"name":"interpretations","salience":0.11789847165346146,"theta":1},{"name":"piece","salience":0.08370157331228256,"theta":1},{"name":"memory","salience":0.05965488776564598,"theta":1}],"text":"unions allow programmers to specify multiple interpretations for a single piece of memory"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unions52 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"example","salience":0.7815695405006409,"theta":1},{"name":"union type cf struct","salience":0.21843047440052032,"theta":1}],"text":"example of defining a union type cf struct"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"memory object","salience":1,"theta":1}],"text":"myunion is a single 4 byte memory object"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"programmers","salience":0.6609547138214111,"theta":1},{"name":"bits","salience":0.21664199233055115,"theta":1},{"name":"field names","salience":0.12240329384803772,"theta":1}],"text":"programmers can specify how to interpret bits using field names"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"example","salience":0.45687851309776306,"theta":1},{"name":"components","salience":0.33053159713745117,"theta":1},{"name":"bytes","salience":0.21258990466594696,"theta":1}],"text":"in the example above all components are coincidentally the same size 4 bytes"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unions53 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"difference","salience":0.6219350099563599,"theta":1},{"name":"struct","salience":0.21984653174877167,"theta":1},{"name":"union","salience":0.15821844339370728,"theta":1}],"text":"difference between a struct and a union"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unions54 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"syntax","salience":0.6320440173149109,"theta":1},{"name":"union types","salience":0.2071658819913864,"theta":1},{"name":"variables","salience":0.16079013049602509,"theta":1}],"text":"general syntax for defining union types and variables"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"type","salience":0.8816196918487549,"theta":1},{"name":"c type member names","salience":0.11838033050298691,"theta":1}],"text":"type can be any c type member names must be distinct"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"union","salience":0.9086937308311462,"theta":1},{"name":"member","salience":0.09130626171827316,"theta":1}],"text":"sizeof union is the size of the largest member"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"member1 uvar member2 uvar member3","salience":1,"theta":1}],"text":"uvar member1 uvar member2 uvar member3"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"unions55 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"use","salience":0.4563129246234894,"theta":1},{"name":"union types","salience":0.3061056435108185,"theta":1},{"name":"variables","salience":0.23758143186569214,"theta":1}],"text":"common use of union types generic variables"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"enumerated types56 56"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"types","salience":0.61500084400177,"theta":1},{"name":"programmers","salience":0.18989861011505127,"theta":1},{"name":"set","salience":0.12570911645889282,"theta":1},{"name":"values","salience":0.0693914145231247,"theta":1}],"text":"enumerated types allow programmers to define a set of distinct named values"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"names","salience":0.7371235489845276,"theta":1},{"name":"int values","salience":0.2628764510154724,"theta":1}],"text":"the names are assigned consecutive int values starting from 0"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"type","salience":1,"theta":1}],"text":"above primarycolors type is equivalent to"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1},{"name":"variables","salience":0.8395260572433472,"theta":1},{"name":"type enum","salience":0.16047394275665283,"theta":1}],"text":"variables of type enum are effectively unsigned ints"},{"tags":[{"name":"paragraph","salience":0.5,"theta":1}],"text":"produced 1 mar 2018"}]}