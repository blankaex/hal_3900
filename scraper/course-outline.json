{"name":"course-outline","allTables":[{"type":"table","tableRows":[{"text":" Course Code COMP1521 "},{"text":" Course Title Computer Systems Fundamentals "},{"text":" Convenor John Shepherd "},{"text":" Admin Wael Alghamdi "},{"text":" Classes Lectures : Tue 2-4 Science Th, Wed 4-6 Mathews A Timetable for all classes "},{"text":" Consultations TBA "},{"text":" Units of Credit 6 "},{"text":" Workload In class: ( Lectures: 3 hours/week, Tute/lab: 3 hours/week ) Outside class: ( Tute/Lab: 2 hours/week, Assignments: 40 hours, Quizzes: 5 hours, ... ) "},{"text":" Course Website http://cse.unsw.edu.au/~cs1521/ "},{"text":" Handbook Entry http://www.handbook.unsw.edu.au/undergraduate/courses/current/COMP1521.html "}]},{"type":"table","tableRows":[{"text":" Graduate Capability Acquired in "},{"text":" Scholars capable of independent and collaborative enquiry, rigorous in their analysis, critique and reflection, and able to innovate by applying their knowledge and skills to the solution of novel as well as routine problems 1-9 "},{"text":" Entrepreneurial leaders capable of initiating and embracing innovation and change, as well as engaging and enabling others to contribute to change - "},{"text":" Professionals capable of ethical, self- directed practice and independent lifelong learning - "},{"text":" Global citizens who are culturally adept and capable of respecting diversity and acting in a socially just and responsible way - "}]},{"type":"table","tableRows":[{"text":" Grade Criteria "},{"text":" A+ Outstanding effort; must complete any challenges and go beyond the standard exercises "},{"text":" A Complete, correct, and clear solution to standard lab exercises (worth full marks) "},{"text":" B Most of the standard lab exercises completed, or all completed but with one or more major bugs "},{"text":" C Partial solution only, much of lab not completed or has many glaring errors "},{"text":" D Submitted something , but it's completely hopeless "},{"text":" "}]},{"type":"table","tableRows":[{"text":" Item Topics Due Marks LOs "},{"text":" Quizzes All topics End of weeks 1,2,4,6,8,10 10% 1-9 "},{"text":" Assignment 1 Assembly programming Week 6 9% 4 "},{"text":" Assignment 2 C programming Week 10 11% 2,5 "},{"text":" Labs Most topics All Weeks 10% 1-5,9 "},{"text":" Final Exam All topics Exam period 60% 1-9 "}]},{"type":"table","tableRows":[{"text":" CourseWorkMark = QuizMark + LabMark + Ass1Mark + Ass2Mark out of 40 "},{"text":" ExamPracMark = marks for prac questions on final exam out of 30 "},{"text":" ExamTheoryMark = marks for written questions on final exam out of 30 "},{"text":" ExamMark = ExamPracMark + ExamTheoryMark out of 60 "},{"text":" ExamOK = ExamMark ≥ 24/60 true/false "},{"text":" FinalMark = CourseWorkMark + ExamMark out of 100 "},{"text":" FinalGrade = UF, if ! ExamOK && FinalMark ≥ 50 FL, if FinalMark < 50/100 PS, if 50/100 ≤ FinalMark < 65/100 CR, if 65/100 ≤ FinalMark < 75/100 DN, if 75/100 ≤ FinalMark < 85/100 HD, if FinalMark ≥ 85/100 "}]},{"type":"table","tableRows":[{"text":" Week Lectures Tutes Labs Assigns Quizzes "},{"text":" 1 Course intro, computer systems, queues, stacks, memory, data representation Welcome, C revision, Stacks, Queues, Bits Input/output - Quiz 1 "},{"text":" 2 Data representation (cont) Data representation (i) Bit Manipulation - Quiz 2 "},{"text":" 3 Instruction set architecture, assembly language programming Data representation (ii) Data Representation (floats) - - "},{"text":" 4 Assembly language programming (cont), Compilation, mapping C to assembler Assembly language Assembly programming (i) - Quiz 3 "},{"text":" 5 Computer systems architecture, layers, operating systems, system calls Mapping C to MIPS assembler Assembly programming (ii) - - "},{"text":" 6 File systems; memory management OSs; system calls System calls Ass1 due Quiz 4 "},{"text":" 7 Virtual memory; processes; interrupts; i/o File system functions File system Functions - - "},{"text":" 8 Parallelism, synchronisation, coordination, communication Virtual memory; processes Signals - Quiz 5 "},{"text":" 9 Network architecture Parallelism; concurrency Concurrent processes - - "},{"text":" Mid -sem - - - - - "},{"text":" 10 Spare Networks Sockets Ass2 due Quiz 6 "},{"text":" 11 Spare Revision Practice Prac Exam - - "},{"text":" 12 Spare Revision Revision - - "}]}],"allParagraphs":[{"type":"paragraph"}," Toggle Menu ",{"type":"paragraph"}," This course introduces students to how computer systems are structured in terms of basic electronic components, how they are used to implement procedural programs, and how they are structured as a collection of software layers. It introduces students to low-level software layers such as operating systems and network infrastructure, and introduces concurrency concepts. The goal is to give students a solid understanding of what happens when high-level programs are executed, as a basis for further study in important areas of computing such as computer architecture, operating systems, and networks. ",{"type":"paragraph"}," Before commencing this course, students should be able to ... ",{"type":"paragraph"}," These are assumed to have been acquired in COMP1511 or COMP1911. ",{"type":"paragraph"}," After completing this course, students will be able to ... ",{"type":"paragraph"}," This course contributes to the development of the following graduate capabilities: ",{"type":"paragraph"}," This course uses the standard set of practice-focussed teaching strategies employed by most CSE foundational courses: ",{"type":"paragraph"}," Having said that, the second half of the course is discursive than other CSE foundational courses. ",{"type":"paragraph"}," This course is taught the way it is because it aims to give a broad view of many topics in computer systems, to provide a foundation for further study in later systems-related courses. At the same time, it provides further practice in developing software, but at a level closer to the machine than other foundational courses. ",{"type":"paragraph"}," Lectures will be used to present the theory and practice of the techniques and tools in this course. The lectures will include practical demonstrations of various technologies. Lecture notes will be available on the course web pages before each lecture. ",{"type":"paragraph"}," From week 1 you will also be expected to attend a one-hour tutorial session to clarify ideas from lectures and work through exercises based on the lecture material. You should make sure that you use them effectively by examining in advance the material to be covered in each week's tutorial, by asking questions, by offering suggestions and by generally participating. The tutorial questions will be posted on the Web in the week before each tutorial. There are no marks for tutorial attendance. ",{"type":"paragraph"}," Following the tutorial class each week, there will be a two-hour laboratory class, during which you will work on a variety of small practical problems involving the tools introduced in lectures. Because this course is has a significant practical component, laboratory classes are important . If you do not put a good amount of effort into the lab classes you risk failing the final exam. ",{"type":"paragraph"}," Each week, there will be one or more exercises to work on. These exercises will be released in the week preceding the lab class. Labs will be done in pairs, and you and your lab partner should discuss the exercises before going to the lab, to maximise the usefulness of the class. The exercises will need to be submitted and will be assessed by your tutor. During the lab, your tutor will provide feedback on your approach to the problem and on the style of your solution. ",{"type":"paragraph"}," Tutors will facilitate you forming pairs in your week 1 lab. The pairs will change several times during the semester. ",{"type":"paragraph"}," Starting in week 2, pairs will also be asked to do code reviews in the tutorials, to explain how they tackled a particular problem and describe interesting features of their solution. ",{"type":"paragraph"}," To obtain a mark for a lab exercise you should (as a pair) demonstrate the completed lab exercise to your tutor during a lab class and both members of the pair should separately submit it using give . ",{"type":"paragraph"}," You should normally get your lab work assessed during the week for which it is scheduled (i.e. you must complete the week 3 lab exercise during the week 3 lab). If you don't finish it during the lab, you may continue working on it during the week, but you both must submit it (using give ) by the following Sunday 11:59pm in order to get any marks for it. You must then (as a pair) also demonstrate your work to your tutor during the first hour of the following week's lab. The code that you submit by Sunday is what will be assessed. ",{"type":"paragraph"}," Summary: to obtain any lab marks for the Week X lab, you must do 2 things: ",{"type":"paragraph"}," You cannot obtain marks by e-mailing lab work to tutors. ",{"type":"paragraph"}," One of the labs will be used for a Practice Prac Exam, where you will use the exam environment to individually solve two small programming tasks (one MIPS, one C). You must complete the Practice Prac Exam in the lab in the scheduled week. ",{"type":"paragraph"}," Lab exercises will be assessed using the following grade system: ",{"type":"paragraph"}," Challenge exercises may be specified for some labs. ",{"type":"paragraph"}," There will be more lab marks available than necessary to obtain full marks for the 10% lab component. In other words, the total lab mark will be capped, with a small bonus available for consistently outstanding work. ",{"type":"paragraph"}," We expect all students to maintain a reflective blog during the semester, starting week 1. This is useful for us to keep up with what you're doing, but, more importantly, it is helpful for you to think about the improvement of your skills as the semester progresses, and to think about how you'll do it better in the future. ",{"type":"paragraph"}," Up to 1 bonus mark is available for students who keep a regular, insightful blog. ",{"type":"paragraph"}," There are two assessable programming assignments. Assignments give you the chance to practice what you have learnt on relatively large problems (compared to the small exercises in the labs). Assignments are a very important part of this course, therefore it is essential that you attempt them yourself. ",{"type":"paragraph"}," Late assignments submissions will be penalized. The exact penalty will be specified in the assignment specification - around 1% reduction in maximum achievable mark for every hour late. ",{"type":"paragraph"}," There will be a three-hour exam, to be held in the CSE labs during the exam period. This will be centrally timetabled and appear in your UNSW exam timetable. ",{"type":"paragraph"}," It will contain a mixture of: implementation tasks (which will require you to write C and assembler programs) and \"theory\" questions (which require analysis and written answers). During this exam you will be able to execute, debug and test your answers. The implementation tasks will be similar to those encountered in lab exercises. ",{"type":"paragraph"}," There is a hurdle requirement on the final exam. If you do not score at least 40% (24/60) on the exam (after scaling), you cannot pass this course. If your overall course score exceeds 50%, despite scoring very poorly (<40%) on the exam, the hurdle will be enforced via a grade of UF. ",{"type":"paragraph"}," If you cannot attend the Final Exam because of illness or misadventure, then you must submit a Special Consideration request, with documentation, through MyUNSW within 48 hours of the exam. If your request is reasonable, then you will be awarded a Supplementary Exam . There are two other conditions for being awarded a Supplementary Exam; see below under Assessment. ",{"type":"paragraph"}," The Student Code of Conduct ( Information , Policy ) sets out what the University expects from students as members of the UNSW community. As well as the learning, teaching and research environment, the University aims to provide an environment that enables students to achieve their full potential and to provide an experience consistent with the University’s values and guiding principles. A condition of enrolment is that students inform themselves of the University’s rules and policies affecting them, and conduct themselves accordingly. ",{"type":"paragraph"}," In particular, students have the responsibility to observe standards of equity and respect in dealing with every member of the University community. This applies to all activities on UNSW premises and all external activities related to study and research. This includes behaviour in person as well as behaviour on social media, for example Facebook groups set up for the purpose of discussing UNSW courses or course work. Behaviour that is considered in breach of the Student Code Policy as discriminatory, sexually inappropriate, bullying, harassing, invading another’s privacy or causing any person to fear for their personal safety is serious misconduct and can lead to severe penalties, including suspension or exclusion from UNSW. ",{"type":"paragraph"}," If you have any concerns, you may raise them with your lecturer, or approach the School Ethics Officer , Grievance Officer , or one of the student representatives . ",{"type":"paragraph"}," Plagiarism is defined as using the words or ideas of others and presenting them as your own. UNSW and CSE treat plagiarism as academic misconduct, which means that it carries penalties as severe as being excluded from further study at UNSW. There are several on-line sources to help you understand what plagiarism is and how it is dealt with at UNSW: ",{"type":"paragraph"}," Make sure that you read and understand these. Ignorance is not accepted as an excuse for plagiarism. In particular, you are also responsible that your assignment files are not accessible by anyone but you by setting the correct permissions in your CSE directory and code repository, if using. Note also that plagiarism includes paying or asking another person to do a piece of work for you and then submitting it as your own work. ",{"type":"paragraph"}," UNSW has an ongoing commitment to fostering a culture of learning informed by academic integrity. All UNSW staff and students have a responsibility to adhere to this principle of academic integrity. Plagiarism undermines academic integrity and is not tolerated at UNSW. Plagiarism at UNSW is defined as using the words or ideas of others and passing them off as your own. ",{"type":"paragraph"}," If you haven't done so yet, please take the time to read the full text of ",{"type":"paragraph"}," The pages below describe the policies and procedures in more detail: ",{"type":"paragraph"}," You should also read the following page which describes your rights and responsibilities in the CSE context: ",{"type":"paragraph"}," If your work in this course is affected by unforseen adverse circumstances, you should apply for Special Consideration through MyUNSW, including documentation on how your have been affected. If your request is reasonable and your work has clearly been impacted, then ",{"type":"paragraph"}," Note the use of the word \"may\". None of the above is guaranteed. It depends on you making a convincing case that the circumstances have clearly impacted your ability to work. ",{"type":"paragraph"}," If you are registered with Disability Services, please forward your documentation to John Shepherd within the first two weeks of semester. ",{"type":"paragraph"}," Each quiz is worth 2 marks. Your total Quiz mark is computed as a sum of your best 5 individual quiz marks. ",{"type":"paragraph"}," Lab marks vary. Your total Lab mark is computed by summing all of your lab marks and mapping into a mark out of 10. It is possible for your total Lab mark to be 10/10, even if you miss one lab. ",{"type":"paragraph"}," Most labs are done in pairs, but the Practice Prac Exam is done individually. ",{"type":"paragraph"}," Your final mark for this course will be computed using the above assessments as follows: ",{"type":"paragraph"}," Students are eligible for a Supplementary Exam if and only if: ",{"type":"paragraph"}," A Supplementary Exam will not be awarded for any other reason. ",{"type":"paragraph"}," The following is a rough schedule of when topics will be covered. This will most likely change over the semester as topics take more or less time to cover. ",{"type":"paragraph"}," There is no single text book that covers all of the material in this course at the right level of detail and using the same technology base as we are. The lecture notes should provide sufficient detail to introduce topics, and you will then study them in further depth in the tutes, labs and assignments. ",{"type":"paragraph"}," There are also many online resources available, and we will provide links to the most useful ones. Some are listed below. If you find others, please post links in the Comments section on the Course Outline page. ",{"type":"paragraph"}," The following is a Recommended Reading for this course ",{"type":"paragraph"}," There are copies in the UNSW Bookstore and in the library. It covers many of the topics in the course, but uses a different machine language (i.e. not MIPS). ",{"type":"paragraph"}," Some suggestions for other books that cover at least some of the topics in this course ",{"type":"paragraph"}," Documentation for the various systems used in the course is linked from the course website. ",{"type":"paragraph"}," This course ran for the first time in 17s2 and then ran in 18s1. The feedback from both offerings was generally positive. However, the initial material on ADTs and linked structures proved challenging for students from COMP1911. Since linked structures do not feature prominently in systems-level code, we will not discuss them. ",{"type":"paragraph"}," The 18s1 offering ran in a 10-week UNSW3+ mode, and there were no complaints about the pace of the course. We will trial a 10-week mode again in 18s2. ",{"type":"paragraph"}," The course will be evaluated at the end of the semester using the myExperience system. However, you are encouraged to provide feedback during the semester so that we can address any problems ASAP. ",{"type":"paragraph"}," ",{"type":"paragraph"},"Resource created Thursday 19 July 2018, 09:05:04 PM, last modified Thursday 09 August 2018, 08:16:56 PM.",{"type":"paragraph"},"Back to top "]}